EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
DealOrNoDeal.com -- emu8086 assembler version: 4.08  
 
[ 4/7/2016  --  8:56:32 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       
[   2]        :                                       print macro x, y, attrib, sdat
[   3]        :                                       LOCAL   s_dcl, skip_dcl, s_dcl_end
[   4]        :                                       pusha
[   5]        :                                       mov dx, cs
[   6]        :                                       mov es, dx
[   7]        :                                       mov ah, 13h
[   8]        :                                       mov al, 1
[   9]        :                                       mov bh, 0
[  10]        :                                       mov bl, attrib
[  11]        :                                       mov cx, offset s_dcl_end - offset s_dcl
[  12]        :                                       mov dl, x
[  13]        :                                       mov dh, y
[  14]        :                                       mov bp, offset s_dcl
[  15]        :                                       int 10h
[  16]        :                                       popa
[  17]        :                                       jmp skip_dcl
[  18]        :                                       s_dcl DB sdat
[  19]        :                                       s_dcl_end DB 0
[  20]        :                                       skip_dcl:
[  21]        :                                       endm
[  22]        :                                       
[  23]        :                                       ;Clear Screen
[  24]        :                                       clear_screen macro
[  25]        :                                       pusha
[  26]        :                                       mov ax, 0600h
[  27]        :                                       mov bh, 0000_1111b
[  28]        :                                       mov cx, 0
[  29]        :                                       mov dh, 24
[  30]        :                                       mov dl, 79
[  31]        :                                       int 10h
[  32]        :                                       popa
[  33]        :                                       endm
[  34]        :                                       
[  35]        :                                       
[  36]        :                                       ;Print Char
[  37]        :                                       PUTC    MACRO   char
[  38]        :                                       PUSH    AX
[  39]        :                                       MOV     AL, char
[  40]        :                                       MOV     AH, 0Eh
[  41]        :                                       INT     10h
[  42]        :                                       POP     AX
[  43]        :                                       ENDM
[  44]        :                                       
[  45]        :                                       org 100H
[  46]    0100: E9 50 01                              jmp s
[  47]        :                                       ;Print
[  48]        :                                       
[  49]        :                                       
[  50]        :                                       ;Variables
[  51]        :                                       
[  52]        :                                       ;index 0 1 2 3 4 5 6 7 8  9 10 11 12 13 14 15 16 17 18 19
[  53]        :                                       ;CaseNumber  1   2   3   4   5   6   7   8   9  10
[  54]        :                                       
[  55]    0103: 00                                    x db ? ; "X Position"
[  56]    0104: 00                                    y db ? ; "Y Position"
[  57]        :                                       
[  58]    0105: 00 00                                 temp dw ? ;"Temporary Variable"
[  59]    0107: 00 00                                 tempindex dw ? ; "Temp Index"
[  60]    0109: 00 00                                 tmp_r dw 0 ;temp round
[  61]    010B: 00 00                                 tc dw ? ; "Total Briefcase"
[  62]    010D: 00 00                                 tm dw 0 ; total money
[  63]    010F: 00 00                                 bo dw ? ;bankers offer
[  64]    0111: 00 00                                 mc dw ? ; "Main Briefcase"
[  65]    0113: 00 00                                 mc_index_tmp dw ?
[  66]    0115: 00 00                                 mc_money_tmp dw ?
[  67]    0117: 00 00                                 mc_temp dw 0 ; Main Temp
[  68]    0119: F0                                    case_color db 1111_0000b
[  69]        :                                       
[  70]    011A: 00 00                                 ui dw ? ; "User Input"
[  71]    011C: 00 00                                 cxlooptemp dw ? ; cx temp storage
[  72]    011E: 00 00                                 r dw 0 ; "Round"
[  73]    0120: 00 00                                 p dw 0 ; "Pick
[  74]    0122: 00                                    sc db ? ;Strike count
[  75]    0123: 00 00                                 yn dw ? ;yes no answer
[  76]    0125: 00 00 00 00 00 00 00 00 00 00 00 00   cn dw 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[  77]    014D: 00 00 00 00 00 00 00 00 00 00 00 00   dw 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00             
[  78]        :                                       
[  79]    0179: 00 00 00 00 00 00 00 00 00 00 00 00   ml dw 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[  80]    01A1: 00 00 00 00 00 00 00 00 00 00 00 00   dw 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0 0
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00                   
[  81]        :                                       ;Temp number
[  82]    01CB: 00 00 00 00 00 00 00 00 00 00 00 00   tn dw 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[  83]    01F3: 00 00 00 00 00 00 00 00 00 00 00 00   dw 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[  84]    021B: 00 00                                 a1000a dw ?
[  85]    021D: 00 00 20                              seco db 0, 0, ' '
[  86]    0220: 0D 0A 24                              db 0Dh, 0Ah, 24h         ; line feed   return   and  stop symbol 24h=$ (ASCII).
[  87]        :                                       
[  88]    0223: 00 00                                 bx_lo_temp dw ?
[  89]    0225: 00 00                                 ax_lo_temp dw ?
[  90]    0227: 00 00                                 lolo dw ?
[  91]        :                                       
[  92]    0229: 01 00                                 one dw 1
[  93]    022B: 01 00                                 two dw 1
[  94]    022D: 01 00                                 three dw 1
[  95]    022F: 01 00                                 four dw 1
[  96]    0231: 01 00                                 five dw 1
[  97]    0233: 01 00                                 six dw 1
[  98]    0235: 01 00                                 seven dw 1
[  99]    0237: 01 00                                 eight dw 1
[ 100]    0239: 01 00                                 nine dw 1
[ 101]    023B: 01 00                                 ten dw 1
[ 102]    023D: 01 00                                 eleven dw 1
[ 103]    023F: 01 00                                 twelve dw 1
[ 104]    0241: 01 00                                 thirteen dw 1
[ 105]    0243: 01 00                                 fourteen dw 1
[ 106]    0245: 01 00                                 fifteen dw 1
[ 107]    0247: 01 00                                 sixteen dw 1
[ 108]    0249: 01 00                                 seventeen dw 1
[ 109]    024B: 01 00                                 eighteen dw 1
[ 110]    024D: 01 00                                 nineteen dw 1
[ 111]    024F: 01 00                                 twenty dw 1
[ 112]        :                                       
[ 113]    0251: 00 00                                 gamemode dw ?
[ 114]        :                                       
[ 115]    0253:                                       s:
[ 116]    0253: C7 06 79 01 01 00                     mov ml[0], 1
[ 117]    0259: C7 06 7B 01 05 00                     mov ml[2], 5
[ 118]    025F: C7 06 7D 01 0A 00                     mov ml[4], 10
[ 119]    0265: C7 06 7F 01 0F 00                     mov ml[6], 15
[ 120]    026B: C7 06 81 01 14 00                     mov ml[8], 20
[ 121]    0271: C7 06 83 01 19 00                     mov ml[10], 25
[ 122]    0277: C7 06 85 01 1E 00                     mov ml[12], 30
[ 123]    027D: C7 06 87 01 23 00                     mov ml[14], 35
[ 124]    0283: C7 06 89 01 32 00                     mov ml[16], 50
[ 125]    0289: C7 06 8B 01 4B 00                     mov ml[18], 75
[ 126]    028F: C7 06 8D 01 64 00                     mov ml[20], 100
[ 127]    0295: C7 06 8F 01 96 00                     mov ml[22], 150
[ 128]    029B: C7 06 91 01 C8 00                     mov ml[24], 200
[ 129]    02A1: C7 06 93 01 FA 00                     mov ml[26], 250
[ 130]    02A7: C7 06 95 01 2C 01                     mov ml[28], 300
[ 131]    02AD: C7 06 97 01 5E 01                     mov ml[30], 350
[ 132]    02B3: C7 06 99 01 90 01                     mov ml[32], 400
[ 133]    02B9: C7 06 9B 01 C2 01                     mov ml[34], 450
[ 134]    02BF: C7 06 9D 01 F4 01                     mov ml[36], 500
[ 135]    02C5: C7 06 9F 01 E8 03                     mov ml[38], 1000
[ 136]        :                                       
[ 137]    02CB:                                       INPUT_GAME_MODE_AGAIN:
[ 138]    02CB: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,1,0000_0111b,  "Welcome to Deal or No Deal by BSIT-IS3A Group 6"
                07 B9 2F 00 B2 01 B6 01 BD E7 02 CD 
                10 61 EB 30 57 65 6C 63 6F 6D 65 20 
                74 6F 20 44 65 61 6C 20 6F 72 20 4E 
                6F 20 44 65 61 6C 20 62 79 20 42 53 
                49 54 2D 49 53 33 41 20 47 72 6F 75 
                70 20 36 00                         
[ 139]    0317: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,2,0000_0111b,  "Choose Game Mode:"
                07 B9 11 00 B2 01 B6 02 BD 33 03 CD 
                10 61 EB 12 43 68 6F 6F 73 65 20 47 
                61 6D 65 20 4D 6F 64 65 3A 00       
[ 140]    0345: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,3,0000_0111b,  "1. One Player"
                07 B9 0D 00 B2 01 B6 03 BD 61 03 CD 
                10 61 EB 0E 31 2E 20 4F 6E 65 20 50 
                6C 61 79 65 72 00                   
[ 141]    036F: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,4,0000_0111b,  "2. Two Player"
                07 B9 0D 00 B2 01 B6 04 BD 8B 03 CD 
                10 61 EB 0E 32 2E 20 54 77 6F 20 50 
                6C 61 79 65 72 00                   
[ 142]    0399: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,5,0000_0111b,  "Choose number : "
                07 B9 10 00 B2 01 B6 05 BD B5 03 CD 
                10 61 EB 11 43 68 6F 6F 73 65 20 6E 
                75 6D 62 65 72 20 3A 20 00          
[ 143]        :                                       
[ 144]    03C6: E8 44 44                              call scan_num
[ 145]        :                                       
[ 146]    03C9: 8B C1                                 mov ax, cx
[ 147]    03CB: BB 01 00                              mov bx, 1
[ 148]    03CE: 3B C3                                 cmp ax, bx
[ 149]    03D0: 74 39                                 je ONE_PLAYER
[ 150]        :                                       
[ 151]    03D2: 8B C1                                 mov ax, cx
[ 152]    03D4: BB 02 00                              mov bx, 2
[ 153]    03D7: 3B C3                                 cmp ax, bx
[ 154]    03D9: 75 03 E9 45 0A                        je TWO_PLAYER
[ 155]        :                                       
[ 156]    03DE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 20,5,0000_1100b,  "INVALID INPUT"
                0C B9 0D 00 B2 14 B6 05 BD FA 03 CD 
                10 61 EB 0E 49 4E 56 41 4C 49 44 20 
                49 4E 50 55 54 00                   
[ 157]    0408: E9 C0 FE                              jmp INPUT_GAME_MODE_AGAIN
[ 158]        :                                       
[ 159]        :                                       ;;;;;;;;;;;; FOR ONE PLAYER !!;;;;;;;
[ 160]        :                                       
[ 161]    040B:                                       ONE_PLAYER:
[ 162]    040B: 60 B8 00 06 B7 0F B9 00 00 B6 18 B2   clear_screen
                4F CD 10 61                         
[ 163]        :                                       
[ 164]    041B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,1,0000_0111b,  "Welcome to Deal or No Deal by BSIT-IS3A Group 6"
                07 B9 2F 00 B2 01 B6 01 BD 37 04 CD 
                10 61 EB 30 57 65 6C 63 6F 6D 65 20 
                74 6F 20 44 65 61 6C 20 6F 72 20 4E 
                6F 20 44 65 61 6C 20 62 79 20 42 53 
                49 54 2D 49 53 33 41 20 47 72 6F 75 
                70 20 36 00                         
[ 165]    0467: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,2,0000_0111b,  "How to play Deal or No Deal game?"
                07 B9 21 00 B2 01 B6 02 BD 83 04 CD 
                10 61 EB 22 48 6F 77 20 74 6F 20 70 
                6C 61 79 20 44 65 61 6C 20 6F 72 20 
                4E 6F 20 44 65 61 6C 20 67 61 6D 65 
                3F 00                               
[ 166]    04A5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,3,0000_0111b,  "For One Player:"                                                            ;
                07 B9 0F 00 B2 01 B6 03 BD C1 04 CD 
                10 61 EB 10 46 6F 72 20 4F 6E 65 20 
                50 6C 61 79 65 72 3A 00             
[ 167]    04D1: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,4,0000_0111b,  "1. Before the game begins, the player must choose a number. This number "
                07 B9 48 00 B2 01 B6 04 BD ED 04 CD 
                10 61 EB 49 31 2E 20 42 65 66 6F 72 
                65 20 74 68 65 20 67 61 6D 65 20 62 
                65 67 69 6E 73 2C 20 74 68 65 20 70 
                6C 61 79 65 72 20 6D 75 73 74 20 63 
                68 6F 6F 73 65 20 61 20 6E 75 6D 62 
                65 72 2E 20 54 68 69 73 20 6E 75 6D 
                62 65 72 20 00                      
[ 168]    0536: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,5,0000_0111b,  "consists."
                07 B9 09 00 B2 01 B6 05 BD 52 05 CD 
                10 61 EB 0A 63 6F 6E 73 69 73 74 73 
                2E 00                               
[ 169]    055C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,6,0000_0111b,  "2. There are total of 20 briefcases with cash prize range 1 to 1000 pesos "
                07 B9 4A 00 B2 01 B6 06 BD 78 05 CD 
                10 61 EB 4B 32 2E 20 54 68 65 72 65 
                20 61 72 65 20 74 6F 74 61 6C 20 6F 
                66 20 32 30 20 62 72 69 65 66 63 61 
                73 65 73 20 77 69 74 68 20 63 61 73 
                68 20 70 72 69 7A 65 20 72 61 6E 67 
                65 20 31 20 74 6F 20 31 30 30 30 20 
                70 65 73 6F 73 20 00                
[ 170]    05C3: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,7,0000_0111b,  "inside. Before the round begins the player must choose his/her own "
                07 B9 43 00 B2 01 B6 07 BD DF 05 CD 
                10 61 EB 44 69 6E 73 69 64 65 2E 20 
                42 65 66 6F 72 65 20 74 68 65 20 72 
                6F 75 6E 64 20 62 65 67 69 6E 73 20 
                74 68 65 20 70 6C 61 79 65 72 20 6D 
                75 73 74 20 63 68 6F 6F 73 65 20 68 
                69 73 2F 68 65 72 20 6F 77 6E 20 00 
                                                    
[ 171]    0623: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,8,0000_0111b,  "briefcase."
                07 B9 0A 00 B2 01 B6 08 BD 3F 06 CD 
                10 61 EB 0B 62 72 69 65 66 63 61 73 
                65 2E 00                            
[ 172]    064A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,9,0000_0111b,  "3. After choosing your briefcase, the player will now proceed to play the "
                07 B9 4A 00 B2 01 B6 09 BD 66 06 CD 
                10 61 EB 4B 33 2E 20 41 66 74 65 72 
                20 63 68 6F 6F 73 69 6E 67 20 79 6F 
                75 72 20 62 72 69 65 66 63 61 73 65 
                2C 20 74 68 65 20 70 6C 61 79 65 72 
                20 77 69 6C 6C 20 6E 6F 77 20 70 72 
                6F 63 65 65 64 20 74 6F 20 70 6C 61 
                79 20 74 68 65 20 00                
[ 173]    06B1: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,10,0000_0111b, "game and choose a number of briefcase."
                07 B9 26 00 B2 01 B6 0A BD CD 06 CD 
                10 61 EB 27 67 61 6D 65 20 61 6E 64 
                20 63 68 6F 6F 73 65 20 61 20 6E 75 
                6D 62 65 72 20 6F 66 20 62 72 69 65 
                66 63 61 73 65 2E 00                
[ 174]    06F4: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,11,0000_0111b, "4. After choosing a given number of briefacases, the Banker will give "
                07 B9 46 00 B2 01 B6 0B BD 10 07 CD 
                10 61 EB 47 34 2E 20 41 66 74 65 72 
                20 63 68 6F 6F 73 69 6E 67 20 61 20 
                67 69 76 65 6E 20 6E 75 6D 62 65 72 
                20 6F 66 20 62 72 69 65 66 61 63 61 
                73 65 73 2C 20 74 68 65 20 42 61 6E 
                6B 65 72 20 77 69 6C 6C 20 67 69 76 
                65 20 00                            
[ 175]    0757: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,12,0000_0111b, "an offer to the player."
                07 B9 17 00 B2 01 B6 0C BD 73 07 CD 
                10 61 EB 18 61 6E 20 6F 66 66 65 72 
                20 74 6F 20 74 68 65 20 70 6C 61 79 
                65 72 2E 00                         
[ 176]    078B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,13,0000_0111b, "5. The player must decide whether to choose Deal or No Deal. Deal, means "
                07 B9 49 00 B2 01 B6 0D BD A7 07 CD 
                10 61 EB 4A 35 2E 20 54 68 65 20 70 
                6C 61 79 65 72 20 6D 75 73 74 20 64 
                65 63 69 64 65 20 77 68 65 74 68 65 
                72 20 74 6F 20 63 68 6F 6F 73 65 20 
                44 65 61 6C 20 6F 72 20 4E 6F 20 44 
                65 61 6C 2E 20 44 65 61 6C 2C 20 6D 
                65 61 6E 73 20 00                   
[ 177]    07F1: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,14,0000_0111b, "accepting the offer presented and ending the game, or No Deal, rejecting "
                07 B9 49 00 B2 01 B6 0E BD 0D 08 CD 
                10 61 EB 4A 61 63 63 65 70 74 69 6E 
                67 20 74 68 65 20 6F 66 66 65 72 20 
                70 72 65 73 65 6E 74 65 64 20 61 6E 
                64 20 65 6E 64 69 6E 67 20 74 68 65 
                20 67 61 6D 65 2C 20 6F 72 20 4E 6F 
                20 44 65 61 6C 2C 20 72 65 6A 65 63 
                74 69 6E 67 20 00                   
[ 178]    0857: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,15,0000_0111b, "the offer and continuing the game until all briefcase are opened. "
                07 B9 42 00 B2 01 B6 0F BD 73 08 CD 
                10 61 EB 43 74 68 65 20 6F 66 66 65 
                72 20 61 6E 64 20 63 6F 6E 74 69 6E 
                75 69 6E 67 20 74 68 65 20 67 61 6D 
                65 20 75 6E 74 69 6C 20 61 6C 6C 20 
                62 72 69 65 66 63 61 73 65 20 61 72 
                65 20 6F 70 65 6E 65 64 2E 20 00    
[ 179]        :                                       
[ 180]    08B6: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,18,0000_1011b, "Press any key to start..."
                0B B9 19 00 B2 01 B6 12 BD D2 08 CD 
                10 61 EB 1A 50 72 65 73 73 20 61 6E 
                79 20 6B 65 79 20 74 6F 20 73 74 61 
                72 74 2E 2E 2E 00                   
[ 181]        :                                       
[ 182]        :                                       ; Press Any key to Start
[ 183]    08EC: B4 01                                 mov ah, 1
[ 184]    08EE: CD 21                                 int 21h
[ 185]    08F0: 60 B8 00 06 B7 0F B9 00 00 B6 18 B2   clear_screen
                4F CD 10 61                         
[ 186]        :                                       
[ 187]    0900: B0 00                                 mov al, 0
[ 188]    0902: A2 03 01                              mov x, al
[ 189]    0905: B0 02                                 mov al,2 ;Set Y
[ 190]    0907: A2 04 01                              mov y,al ;position
[ 191]        :                                       
[ 192]    090A: C6 06 22 01 01                        mov sc, 1
[ 193]    090F: B8 01 00                              mov ax, 1
[ 194]    0912: A3 0B 01                              mov tc, ax ;Set Total case to 1
[ 195]    0915: B9 15 00                              mov cx, 21 ;Set number of loop
[ 196]    0918: BE 00 00                              mov si, 0 ;Set index
[ 197]    091B:                                       SET_MONEY_R:
[ 198]    091B: 89 0E 27 02                           mov lolo,cx
[ 199]    091F: 8B C6                                 mov ax, si         ;move source index to tempindex
[ 200]    0921: A3 07 01                              mov tempindex, ax
[ 201]        :                                       
[ 202]    0924: A1 0B 01                              mov ax, tc         ;move total case to ax to print
[ 203]    0927: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,y,0000_0111b,"Briefcase number "
                07 B9 11 00 B2 01 8A 36 04 01 BD 45 
                09 CD 10 61 EB 12 42 72 69 65 66 63 
                61 73 65 20 6E 75 6D 62 65 72 20 00 
                                                    
[ 204]    0957: E8 74 3F                              call print_num
[ 205]        :                                       
[ 206]    095A:                                       rand_again:
[ 207]    095A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 20,y,0000_0111b," : "
                07 B9 03 00 B2 14 8A 36 04 01 BD 78 
                09 CD 10 61 EB 04 20 3A 20 00       
[ 208]    097C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 23,y,0000_1110b,"Loading..."
                0E B9 0A 00 B2 17 8A 36 04 01 BD 9A 
                09 CD 10 61 EB 0B 4C 6F 61 64 69 6E 
                67 2E 2E 2E 00                      
[ 209]    09A5: B4 2C                                 mov ah, 2ch                  ; get time
[ 210]    09A7: CD 21                                 int 21h
[ 211]    09A9: 8A C2                                 mov al, dl
[ 212]    09AB: 2D 00 2C                              sub ax, 11264                   ; second
[ 213]    09AE: A3 05 01                              mov temp, ax
[ 214]        :                                       
[ 215]    09B1: A1 29 02                              mov ax, one
[ 216]    09B4: BB 00 00                              mov bx, 0
[ 217]    09B7: 3B C3                                 cmp ax, bx
[ 218]    09B9: 74 25                                 je skip_this_1
[ 219]        :                                       
[ 220]    09BB: 51                                    push cx
[ 221]    09BC: A1 05 01                              mov ax, temp
[ 222]    09BF: BB 01 00                              mov bx, 1
[ 223]    09C2: B9 05 00                              mov cx, 5
[ 224]    09C5:                                       A1_1_5:
[ 225]    09C5: 3B C3                                 cmp ax, bx
[ 226]    09C7: 74 07                                 je equal_A1_1_5
[ 227]    09C9: 83 C3 14                              add bx, 20
[ 228]    09CC: E2 F7                                 loop A1_1_5
[ 229]    09CE: EB 0F                                 jmp skip_equal_A1
[ 230]        :                                       
[ 231]    09D0:                                       equal_A1_1_5:
[ 232]    09D0: C7 84 25 01 01 00                     mov cn[si], 1
[ 233]    09D6: C7 06 29 02 00 00                     mov one, 0
[ 234]    09DC: E9 7E 03                              jmp print_rand
[ 235]    09DF:                                       skip_equal_A1:
[ 236]    09DF: 59                                    pop cx
[ 237]        :                                       
[ 238]    09E0:                                       skip_this_1:
[ 239]        :                                       ;5
[ 240]    09E0: A1 2B 02                              mov ax, two
[ 241]    09E3: BB 00 00                              mov bx, 0
[ 242]    09E6: 3B C3                                 cmp ax, bx
[ 243]    09E8: 74 25                                 je skip_this_2
[ 244]        :                                       
[ 245]    09EA: 51                                    push cx
[ 246]    09EB: A1 05 01                              mov ax, temp
[ 247]    09EE: BB 02 00                              mov bx, 2
[ 248]    09F1: B9 05 00                              mov cx, 5
[ 249]    09F4:                                       A1_2_5:
[ 250]    09F4: 3B C3                                 cmp ax, bx
[ 251]    09F6: 74 07                                 je equal_A1_2_5
[ 252]    09F8: 83 C3 14                              add bx, 20
[ 253]    09FB: E2 F7                                 loop A1_2_5
[ 254]    09FD: EB 0F                                 jmp skip_equal_A2
[ 255]    09FF:                                       equal_A1_2_5:
[ 256]    09FF: C7 84 25 01 05 00                     mov cn[si], 5
[ 257]    0A05: C7 06 2B 02 00 00                     mov two, 0
[ 258]    0A0B: E9 4F 03                              jmp print_rand
[ 259]    0A0E:                                       skip_equal_A2:
[ 260]    0A0E: 59                                    pop cx
[ 261]        :                                       
[ 262]    0A0F:                                       skip_this_2:
[ 263]    0A0F: A1 2D 02                              mov ax, three
[ 264]    0A12: BB 00 00                              mov bx, 0
[ 265]    0A15: 3B C3                                 cmp ax, bx
[ 266]    0A17: 74 25                                 je skip_this_3
[ 267]        :                                       
[ 268]        :                                       ;10
[ 269]    0A19: 51                                    push cx
[ 270]    0A1A: A1 05 01                              mov ax, temp
[ 271]    0A1D: BB 03 00                              mov bx, 3
[ 272]    0A20: B9 05 00                              mov cx, 5
[ 273]    0A23:                                       A1_3_5:
[ 274]    0A23: 3B C3                                 cmp ax, bx
[ 275]    0A25: 74 07                                 je equal_A1_3_5
[ 276]    0A27: 83 C3 14                              add bx, 20
[ 277]    0A2A: E2 F7                                 loop A1_3_5
[ 278]    0A2C: EB 0F                                 jmp skip_equal_A3
[ 279]    0A2E:                                       equal_A1_3_5:
[ 280]    0A2E: C7 84 25 01 0A 00                     mov cn[si], 10
[ 281]    0A34: C7 06 2D 02 00 00                     mov three, 0
[ 282]    0A3A: E9 20 03                              jmp print_rand
[ 283]    0A3D:                                       skip_equal_A3:
[ 284]    0A3D: 59                                    pop cx
[ 285]        :                                       
[ 286]    0A3E:                                       skip_this_3:
[ 287]    0A3E: A1 2F 02                              mov ax, four
[ 288]    0A41: BB 00 00                              mov bx, 0
[ 289]    0A44: 3B C3                                 cmp ax, bx
[ 290]    0A46: 74 25                                 je skip_this_4
[ 291]        :                                       
[ 292]        :                                       
[ 293]        :                                       ;15
[ 294]    0A48: 51                                    push cx
[ 295]    0A49: A1 05 01                              mov ax, temp
[ 296]    0A4C: BB 04 00                              mov bx, 4
[ 297]    0A4F: B9 05 00                              mov cx, 5
[ 298]    0A52:                                       A1_4_5:
[ 299]    0A52: 3B C3                                 cmp ax, bx
[ 300]    0A54: 74 07                                 je equal_A1_4_5
[ 301]    0A56: 83 C3 14                              add bx, 20
[ 302]    0A59: E2 F7                                 loop A1_4_5
[ 303]    0A5B: EB 0F                                 jmp skip_equal_A4
[ 304]    0A5D:                                       equal_A1_4_5:
[ 305]    0A5D: C7 84 25 01 0F 00                     mov cn[si], 15
[ 306]    0A63: C7 06 2F 02 00 00                     mov four, 0
[ 307]    0A69: E9 F1 02                              jmp print_rand
[ 308]    0A6C:                                       skip_equal_A4:
[ 309]    0A6C: 59                                    pop cx
[ 310]        :                                       
[ 311]    0A6D:                                       skip_this_4:
[ 312]    0A6D: A1 31 02                              mov ax, five
[ 313]    0A70: BB 00 00                              mov bx, 0
[ 314]    0A73: 3B C3                                 cmp ax, bx
[ 315]    0A75: 74 25                                 je skip_this_5
[ 316]        :                                       
[ 317]        :                                       ;20
[ 318]    0A77: 51                                    push cx
[ 319]    0A78: A1 05 01                              mov ax, temp
[ 320]    0A7B: BB 05 00                              mov bx, 5
[ 321]    0A7E: B9 05 00                              mov cx, 5
[ 322]    0A81:                                       A1_5_5:
[ 323]    0A81: 3B C3                                 cmp ax, bx
[ 324]    0A83: 74 07                                 je equal_A1_5_5
[ 325]    0A85: 83 C3 14                              add bx, 20
[ 326]    0A88: E2 F7                                 loop A1_5_5
[ 327]    0A8A: EB 0F                                 jmp skip_equal_A5
[ 328]    0A8C:                                       equal_A1_5_5:
[ 329]    0A8C: C7 84 25 01 14 00                     mov cn[si], 20
[ 330]    0A92: C7 06 31 02 00 00                     mov five, 0
[ 331]    0A98: E9 C2 02                              jmp print_rand
[ 332]    0A9B:                                       skip_equal_A5:
[ 333]    0A9B: 59                                    pop cx
[ 334]        :                                       
[ 335]    0A9C:                                       skip_this_5:
[ 336]    0A9C: A1 33 02                              mov ax, six
[ 337]    0A9F: BB 00 00                              mov bx, 0
[ 338]    0AA2: 3B C3                                 cmp ax, bx
[ 339]    0AA4: 74 25                                 je skip_this_6
[ 340]        :                                       
[ 341]        :                                       ;25
[ 342]    0AA6: 51                                    push cx
[ 343]    0AA7: A1 05 01                              mov ax, temp
[ 344]    0AAA: BB 06 00                              mov bx, 6
[ 345]    0AAD: B9 05 00                              mov cx, 5
[ 346]    0AB0:                                       A1_6_5:
[ 347]    0AB0: 3B C3                                 cmp ax, bx
[ 348]    0AB2: 74 07                                 je equal_A1_6_5
[ 349]    0AB4: 83 C3 14                              add bx, 20
[ 350]    0AB7: E2 F7                                 loop A1_6_5
[ 351]    0AB9: EB 0F                                 jmp skip_equal_A6
[ 352]    0ABB:                                       equal_A1_6_5:
[ 353]    0ABB: C7 84 25 01 19 00                     mov cn[si], 25
[ 354]    0AC1: C7 06 33 02 00 00                     mov six, 0
[ 355]    0AC7: E9 93 02                              jmp print_rand
[ 356]    0ACA:                                       skip_equal_A6:
[ 357]    0ACA: 59                                    pop cx
[ 358]        :                                       
[ 359]    0ACB:                                       skip_this_6:
[ 360]    0ACB: A1 35 02                              mov ax, seven
[ 361]    0ACE: BB 00 00                              mov bx, 0
[ 362]    0AD1: 3B C3                                 cmp ax, bx
[ 363]    0AD3: 74 25                                 je skip_this_7
[ 364]        :                                       
[ 365]        :                                       
[ 366]        :                                       ;30
[ 367]    0AD5: 51                                    push cx
[ 368]    0AD6: A1 05 01                              mov ax, temp
[ 369]    0AD9: BB 07 00                              mov bx, 7
[ 370]    0ADC: B9 05 00                              mov cx, 5
[ 371]    0ADF:                                       A1_7_5:
[ 372]    0ADF: 3B C3                                 cmp ax, bx
[ 373]    0AE1: 74 07                                 je equal_A1_7_5
[ 374]    0AE3: 83 C3 14                              add bx, 20
[ 375]    0AE6: E2 F7                                 loop A1_7_5
[ 376]    0AE8: EB 0F                                 jmp skip_equal_A7
[ 377]    0AEA:                                       equal_A1_7_5:
[ 378]    0AEA: C7 84 25 01 1E 00                     mov cn[si], 30
[ 379]    0AF0: C7 06 35 02 00 00                     mov seven, 0
[ 380]    0AF6: E9 64 02                              jmp print_rand
[ 381]    0AF9:                                       skip_equal_A7:
[ 382]    0AF9: 59                                    pop cx
[ 383]        :                                       
[ 384]    0AFA:                                       skip_this_7:
[ 385]    0AFA: A1 37 02                              mov ax, eight
[ 386]    0AFD: BB 00 00                              mov bx, 0
[ 387]    0B00: 3B C3                                 cmp ax, bx
[ 388]    0B02: 74 25                                 je skip_this_8
[ 389]        :                                       
[ 390]        :                                       ;35
[ 391]    0B04: 51                                    push cx
[ 392]    0B05: A1 05 01                              mov ax, temp
[ 393]    0B08: BB 08 00                              mov bx, 8
[ 394]    0B0B: B9 05 00                              mov cx, 5
[ 395]    0B0E:                                       A1_8_5:
[ 396]    0B0E: 3B C3                                 cmp ax, bx
[ 397]    0B10: 74 07                                 je equal_A1_8_5
[ 398]    0B12: 83 C3 14                              add bx, 20
[ 399]    0B15: E2 F7                                 loop A1_8_5
[ 400]    0B17: EB 0F                                 jmp skip_equal_A8
[ 401]    0B19:                                       equal_A1_8_5:
[ 402]    0B19: C7 84 25 01 23 00                     mov cn[si], 35
[ 403]    0B1F: C7 06 37 02 00 00                     mov eight, 0
[ 404]    0B25: E9 35 02                              jmp print_rand
[ 405]    0B28:                                       skip_equal_A8:
[ 406]    0B28: 59                                    pop cx
[ 407]        :                                       
[ 408]    0B29:                                       skip_this_8:
[ 409]    0B29: A1 39 02                              mov ax, nine
[ 410]    0B2C: BB 00 00                              mov bx, 0
[ 411]    0B2F: 3B C3                                 cmp ax, bx
[ 412]    0B31: 74 25                                 je skip_this_9
[ 413]        :                                       
[ 414]        :                                       ;50
[ 415]    0B33: 51                                    push cx
[ 416]    0B34: A1 05 01                              mov ax, temp
[ 417]    0B37: BB 09 00                              mov bx, 9
[ 418]    0B3A: B9 05 00                              mov cx, 5
[ 419]    0B3D:                                       A1_9_5:
[ 420]    0B3D: 3B C3                                 cmp ax, bx
[ 421]    0B3F: 74 07                                 je equal_A1_9_5
[ 422]    0B41: 83 C3 14                              add bx, 20
[ 423]    0B44: E2 F7                                 loop A1_9_5
[ 424]    0B46: EB 0F                                 jmp skip_equal_A9
[ 425]    0B48:                                       equal_A1_9_5:
[ 426]    0B48: C7 84 25 01 32 00                     mov cn[si], 50
[ 427]    0B4E: C7 06 39 02 00 00                     mov nine, 0
[ 428]    0B54: E9 06 02                              jmp print_rand
[ 429]    0B57:                                       skip_equal_A9:
[ 430]    0B57: 59                                    pop cx
[ 431]        :                                       
[ 432]    0B58:                                       skip_this_9:
[ 433]    0B58: A1 3B 02                              mov ax, ten
[ 434]    0B5B: BB 00 00                              mov bx, 0
[ 435]    0B5E: 3B C3                                 cmp ax, bx
[ 436]    0B60: 74 25                                 je skip_this_10
[ 437]        :                                       
[ 438]        :                                       ;75
[ 439]    0B62: 51                                    push cx
[ 440]    0B63: A1 05 01                              mov ax, temp
[ 441]    0B66: BB 0A 00                              mov bx, 10
[ 442]    0B69: B9 05 00                              mov cx, 5
[ 443]    0B6C:                                       A1_10_5:
[ 444]    0B6C: 3B C3                                 cmp ax, bx
[ 445]    0B6E: 74 07                                 je equal_A1_10_5
[ 446]    0B70: 83 C3 14                              add bx, 20
[ 447]    0B73: E2 F7                                 loop A1_10_5
[ 448]    0B75: EB 0F                                 jmp skip_equal_A10
[ 449]    0B77:                                       equal_A1_10_5:
[ 450]    0B77: C7 84 25 01 4B 00                     mov cn[si], 75
[ 451]    0B7D: C7 06 3B 02 00 00                     mov ten, 0
[ 452]    0B83: E9 D7 01                              jmp print_rand
[ 453]    0B86:                                       skip_equal_A10:
[ 454]    0B86: 59                                    pop cx
[ 455]        :                                       
[ 456]    0B87:                                       skip_this_10:
[ 457]    0B87: A1 3D 02                              mov ax, eleven
[ 458]    0B8A: BB 00 00                              mov bx, 0
[ 459]    0B8D: 3B C3                                 cmp ax, bx
[ 460]    0B8F: 74 25                                 je skip_this_11
[ 461]        :                                       
[ 462]        :                                       ;100
[ 463]    0B91: 51                                    push cx
[ 464]    0B92: A1 05 01                              mov ax, temp
[ 465]    0B95: BB 0B 00                              mov bx, 11
[ 466]    0B98: B9 05 00                              mov cx, 5
[ 467]    0B9B:                                       A1_11_5:
[ 468]    0B9B: 3B C3                                 cmp ax, bx
[ 469]    0B9D: 74 07                                 je equal_A1_11_5
[ 470]    0B9F: 83 C3 14                              add bx, 20
[ 471]    0BA2: E2 F7                                 loop A1_11_5
[ 472]    0BA4: EB 0F                                 jmp skip_equal_A11
[ 473]    0BA6:                                       equal_A1_11_5:
[ 474]    0BA6: C7 84 25 01 64 00                     mov cn[si], 100
[ 475]    0BAC: C7 06 3D 02 00 00                     mov eleven, 0
[ 476]    0BB2: E9 A8 01                              jmp print_rand
[ 477]    0BB5:                                       skip_equal_A11:
[ 478]    0BB5: 59                                    pop cx
[ 479]        :                                       
[ 480]    0BB6:                                       skip_this_11:
[ 481]    0BB6: A1 3F 02                              mov ax, twelve
[ 482]    0BB9: BB 00 00                              mov bx, 0
[ 483]    0BBC: 3B C3                                 cmp ax, bx
[ 484]    0BBE: 74 25                                 je skip_this_12
[ 485]        :                                       
[ 486]        :                                       ;150
[ 487]    0BC0: 51                                    push cx
[ 488]    0BC1: A1 05 01                              mov ax, temp
[ 489]    0BC4: BB 0C 00                              mov bx, 12
[ 490]    0BC7: B9 05 00                              mov cx, 5
[ 491]    0BCA:                                       A1_12_5:
[ 492]    0BCA: 3B C3                                 cmp ax, bx
[ 493]    0BCC: 74 07                                 je equal_A1_12_5
[ 494]    0BCE: 83 C3 14                              add bx, 20
[ 495]    0BD1: E2 F7                                 loop A1_12_5
[ 496]    0BD3: EB 0F                                 jmp skip_equal_A12
[ 497]    0BD5:                                       equal_A1_12_5:
[ 498]    0BD5: C7 84 25 01 96 00                     mov cn[si], 150
[ 499]    0BDB: C7 06 3F 02 00 00                     mov twelve, 0
[ 500]    0BE1: E9 79 01                              jmp print_rand
[ 501]    0BE4:                                       skip_equal_A12:
[ 502]    0BE4: 59                                    pop cx
[ 503]        :                                       
[ 504]    0BE5:                                       skip_this_12:
[ 505]    0BE5: A1 41 02                              mov ax, thirteen
[ 506]    0BE8: BB 00 00                              mov bx, 0
[ 507]    0BEB: 3B C3                                 cmp ax, bx
[ 508]    0BED: 74 25                                 je skip_this_13
[ 509]        :                                       
[ 510]        :                                       ;200
[ 511]    0BEF: 51                                    push cx
[ 512]    0BF0: A1 05 01                              mov ax, temp
[ 513]    0BF3: BB 0D 00                              mov bx, 13
[ 514]    0BF6: B9 05 00                              mov cx, 5
[ 515]    0BF9:                                       A1_13_5:
[ 516]    0BF9: 3B C3                                 cmp ax, bx
[ 517]    0BFB: 74 07                                 je equal_A1_13_5
[ 518]    0BFD: 83 C3 14                              add bx, 20
[ 519]    0C00: E2 F7                                 loop A1_13_5
[ 520]    0C02: EB 0F                                 jmp skip_equal_A13
[ 521]    0C04:                                       equal_A1_13_5:
[ 522]    0C04: C7 84 25 01 C8 00                     mov cn[si], 200
[ 523]    0C0A: C7 06 41 02 00 00                     mov thirteen, 0
[ 524]    0C10: E9 4A 01                              jmp print_rand
[ 525]    0C13:                                       skip_equal_A13:
[ 526]    0C13: 59                                    pop cx
[ 527]        :                                       
[ 528]    0C14:                                       skip_this_13:
[ 529]    0C14: A1 43 02                              mov ax, fourteen
[ 530]    0C17: BB 00 00                              mov bx, 0
[ 531]    0C1A: 3B C3                                 cmp ax, bx
[ 532]    0C1C: 74 25                                 je skip_this_14
[ 533]        :                                       
[ 534]        :                                       ;250
[ 535]    0C1E: 51                                    push cx
[ 536]    0C1F: A1 05 01                              mov ax, temp
[ 537]    0C22: BB 0E 00                              mov bx, 14
[ 538]    0C25: B9 05 00                              mov cx, 5
[ 539]    0C28:                                       A1_14_5:
[ 540]    0C28: 3B C3                                 cmp ax, bx
[ 541]    0C2A: 74 07                                 je equal_A1_14_5
[ 542]    0C2C: 83 C3 14                              add bx, 20
[ 543]    0C2F: E2 F7                                 loop A1_14_5
[ 544]    0C31: EB 0F                                 jmp skip_equal_A14
[ 545]    0C33:                                       equal_A1_14_5:
[ 546]    0C33: C7 84 25 01 FA 00                     mov cn[si], 250
[ 547]    0C39: C7 06 43 02 00 00                     mov fourteen, 0
[ 548]    0C3F: E9 1B 01                              jmp print_rand
[ 549]    0C42:                                       skip_equal_A14:
[ 550]    0C42: 59                                    pop cx
[ 551]        :                                       
[ 552]    0C43:                                       skip_this_14:
[ 553]    0C43: A1 45 02                              mov ax, fifteen
[ 554]    0C46: BB 00 00                              mov bx, 0
[ 555]    0C49: 3B C3                                 cmp ax, bx
[ 556]    0C4B: 74 25                                 je skip_this_15
[ 557]        :                                       
[ 558]        :                                       ;300
[ 559]    0C4D: 51                                    push cx
[ 560]    0C4E: A1 05 01                              mov ax, temp
[ 561]    0C51: BB 0F 00                              mov bx, 15
[ 562]    0C54: B9 05 00                              mov cx, 5
[ 563]    0C57:                                       A1_15_5:
[ 564]    0C57: 3B C3                                 cmp ax, bx
[ 565]    0C59: 74 07                                 je equal_A1_15_5
[ 566]    0C5B: 83 C3 14                              add bx, 20
[ 567]    0C5E: E2 F7                                 loop A1_15_5
[ 568]    0C60: EB 0F                                 jmp skip_equal_A15
[ 569]    0C62:                                       equal_A1_15_5:
[ 570]    0C62: C7 84 25 01 2C 01                     mov cn[si], 300
[ 571]    0C68: C7 06 45 02 00 00                     mov fifteen, 0
[ 572]    0C6E: E9 EC 00                              jmp print_rand
[ 573]    0C71:                                       skip_equal_A15:
[ 574]    0C71: 59                                    pop cx
[ 575]        :                                       
[ 576]    0C72:                                       skip_this_15:
[ 577]    0C72: A1 47 02                              mov ax, sixteen
[ 578]    0C75: BB 00 00                              mov bx, 0
[ 579]    0C78: 3B C3                                 cmp ax, bx
[ 580]    0C7A: 74 25                                 je skip_this_16
[ 581]        :                                       
[ 582]        :                                       ;350
[ 583]    0C7C: 51                                    push cx
[ 584]    0C7D: A1 05 01                              mov ax, temp
[ 585]    0C80: BB 10 00                              mov bx, 16
[ 586]    0C83: B9 05 00                              mov cx, 5
[ 587]    0C86:                                       A1_16_5:
[ 588]    0C86: 3B C3                                 cmp ax, bx
[ 589]    0C88: 74 07                                 je equal_A1_16_5
[ 590]    0C8A: 83 C3 14                              add bx, 20
[ 591]    0C8D: E2 F7                                 loop A1_16_5
[ 592]    0C8F: EB 0F                                 jmp skip_equal_A16
[ 593]    0C91:                                       equal_A1_16_5:
[ 594]    0C91: C7 84 25 01 5E 01                     mov cn[si], 350
[ 595]    0C97: C7 06 47 02 00 00                     mov sixteen, 0
[ 596]    0C9D: E9 BD 00                              jmp print_rand
[ 597]    0CA0:                                       skip_equal_A16:
[ 598]    0CA0: 59                                    pop cx
[ 599]        :                                       
[ 600]    0CA1:                                       skip_this_16:
[ 601]    0CA1: A1 49 02                              mov ax, seventeen
[ 602]    0CA4: BB 00 00                              mov bx, 0
[ 603]    0CA7: 3B C3                                 cmp ax, bx
[ 604]    0CA9: 74 25                                 je skip_this_17
[ 605]        :                                       
[ 606]        :                                       ;400
[ 607]    0CAB: 51                                    push cx
[ 608]    0CAC: A1 05 01                              mov ax, temp
[ 609]    0CAF: BB 11 00                              mov bx, 17
[ 610]    0CB2: B9 05 00                              mov cx, 5
[ 611]    0CB5:                                       A1_17_5:
[ 612]    0CB5: 3B C3                                 cmp ax, bx
[ 613]    0CB7: 74 07                                 je equal_A1_17_5
[ 614]    0CB9: 83 C3 14                              add bx, 20
[ 615]    0CBC: E2 F7                                 loop A1_17_5
[ 616]    0CBE: EB 0F                                 jmp skip_equal_A17
[ 617]    0CC0:                                       equal_A1_17_5:
[ 618]    0CC0: C7 84 25 01 90 01                     mov cn[si], 400
[ 619]    0CC6: C7 06 49 02 00 00                     mov seventeen, 0
[ 620]    0CCC: E9 8E 00                              jmp print_rand
[ 621]    0CCF:                                       skip_equal_A17:
[ 622]    0CCF: 59                                    pop cx
[ 623]        :                                       
[ 624]    0CD0:                                       skip_this_17:
[ 625]    0CD0: A1 4B 02                              mov ax, eighteen
[ 626]    0CD3: BB 00 00                              mov bx, 0
[ 627]    0CD6: 3B C3                                 cmp ax, bx
[ 628]    0CD8: 74 24                                 je skip_this_18
[ 629]        :                                       
[ 630]        :                                       ;450
[ 631]    0CDA: 51                                    push cx
[ 632]    0CDB: A1 05 01                              mov ax, temp
[ 633]    0CDE: BB 12 00                              mov bx, 18
[ 634]    0CE1: B9 05 00                              mov cx, 5
[ 635]    0CE4:                                       A1_18_5:
[ 636]    0CE4: 3B C3                                 cmp ax, bx
[ 637]    0CE6: 74 07                                 je equal_A1_18_5
[ 638]    0CE8: 83 C3 14                              add bx, 20
[ 639]    0CEB: E2 F7                                 loop A1_18_5
[ 640]    0CED: EB 0E                                 jmp skip_equal_A18
[ 641]    0CEF:                                       equal_A1_18_5:
[ 642]    0CEF: C7 84 25 01 C2 01                     mov cn[si], 450
[ 643]    0CF5: C7 06 4B 02 00 00                     mov eighteen, 0
[ 644]    0CFB: EB 60                                 jmp print_rand
[ 645]    0CFD:                                       skip_equal_A18:
[ 646]    0CFD: 59                                    pop cx
[ 647]        :                                       
[ 648]    0CFE:                                       skip_this_18:
[ 649]    0CFE: A1 4D 02                              mov ax, nineteen
[ 650]    0D01: BB 00 00                              mov bx, 0
[ 651]    0D04: 3B C3                                 cmp ax, bx
[ 652]    0D06: 74 24                                 je skip_this_19
[ 653]        :                                       
[ 654]        :                                       ;500
[ 655]    0D08: 51                                    push cx
[ 656]    0D09: A1 05 01                              mov ax, temp
[ 657]    0D0C: BB 13 00                              mov bx, 19
[ 658]    0D0F: B9 05 00                              mov cx, 5
[ 659]    0D12:                                       A1_19_5:
[ 660]    0D12: 3B C3                                 cmp ax, bx
[ 661]    0D14: 74 07                                 je equal_A1_19_5
[ 662]    0D16: 83 C3 14                              add bx, 20
[ 663]    0D19: E2 F7                                 loop A1_19_5
[ 664]    0D1B: EB 0E                                 jmp skip_equal_A19
[ 665]    0D1D:                                       equal_A1_19_5:
[ 666]    0D1D: C7 84 25 01 F4 01                     mov cn[si], 500
[ 667]    0D23: C7 06 4D 02 00 00                     mov nineteen, 0
[ 668]    0D29: EB 32                                 jmp print_rand
[ 669]    0D2B:                                       skip_equal_A19:
[ 670]    0D2B: 59                                    pop cx
[ 671]        :                                       
[ 672]    0D2C:                                       skip_this_19:
[ 673]    0D2C: A1 4F 02                              mov ax, twenty
[ 674]    0D2F: BB 00 00                              mov bx, 0
[ 675]    0D32: 3B C3                                 cmp ax, bx
[ 676]    0D34: 74 24                                 je skip_this_20
[ 677]        :                                       
[ 678]        :                                       ;1000
[ 679]    0D36: 51                                    push cx
[ 680]    0D37: A1 05 01                              mov ax, temp
[ 681]    0D3A: BB 14 00                              mov bx, 20
[ 682]    0D3D: B9 05 00                              mov cx, 5
[ 683]    0D40:                                       A1_20_5:
[ 684]    0D40: 3B C3                                 cmp ax, bx
[ 685]    0D42: 74 07                                 je equal_A1_20_5
[ 686]    0D44: 83 C3 14                              add bx, 20
[ 687]    0D47: E2 F7                                 loop A1_20_5
[ 688]    0D49: EB 0E                                 jmp skip_equal_A20
[ 689]    0D4B:                                       equal_A1_20_5:
[ 690]    0D4B: C7 84 25 01 E8 03                     mov cn[si], 1000
[ 691]    0D51: C7 06 4F 02 00 00                     mov twenty, 0
[ 692]    0D57: EB 04                                 jmp print_rand
[ 693]        :                                       
[ 694]    0D59:                                       skip_equal_A20:
[ 695]    0D59: 59                                    pop cx
[ 696]    0D5A:                                       skip_this_20:
[ 697]        :                                       
[ 698]    0D5A: E9 FD FB                              jmp rand_again
[ 699]        :                                       
[ 700]    0D5D:                                       print_rand:
[ 701]        :                                       
[ 702]    0D5D: 8B 84 25 01                           mov ax, cn[si]
[ 703]    0D61: A3 05 01                              mov temp, ax
[ 704]        :                                       ;Input Checking
[ 705]    0D64: 51                                    push cx    ;push cx again
[ 706]    0D65: BE 00 00                              mov si, 0
[ 707]    0D68: B9 14 00                              mov cx, 20
[ 708]        :                                       
[ 709]    0D6B:                                       CHECK_INPUT_MONEY_R:  ;internal loop
[ 710]    0D6B: 8B 84 79 01                           mov ax, ml[si]     ;store to casenumber in specific index
[ 711]    0D6F: 8B 1E 05 01                           mov bx, temp
[ 712]    0D73: 3B C3                                 cmp ax, bx
[ 713]    0D75: 74 1F                                 je EXIT_CIM_LOOP_R ;exit the loop if input is valid
[ 714]    0D77: 83 C6 02                              add si, 2
[ 715]        :                                       
[ 716]    0D7A: E2 EF                                 loop CHECK_INPUT_MONEY_R
[ 717]        :                                       
[ 718]        :                                       
[ 719]    0D7C:                                       PRINT_INVALID_R:
[ 720]    0D7C: C6 06 22 01 01                        mov sc, 1
[ 721]    0D81: C7 06 05 01 00 00                     mov temp, 0
[ 722]    0D87: A1 07 01                              mov ax, tempindex
[ 723]    0D8A: 8B F0                                 mov si, ax
[ 724]    0D8C: C7 84 25 01 00 00                     mov cn[si], 0
[ 725]    0D92: 59                                    pop cx   ;pop the first cx
[ 726]    0D93: E9 C4 FB                              JMP rand_again ;jump random input again
[ 727]        :                                       
[ 728]    0D96:                                       EXIT_CIM_LOOP_R:
[ 729]    0D96: B8 00 00                              mov ax, 0
[ 730]    0D99: 3B C3                                 cmp ax, bx
[ 731]    0D9B: 74 DF                                 je PRINT_INVALID_R
[ 732]    0D9D: 59                                    pop cx                           ;
[ 733]    0D9E: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 23,y,0000_1110b,"           "
                0E B9 0B 00 B2 17 8A 36 04 01 BD BC 
                0D CD 10 61 EB 0C 20 20 20 20 20 20 
                20 20 20 20 20 00                   
[ 734]    0DC8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 20,y,0000_1010b,"Okay"
                0A B9 04 00 B2 14 8A 36 04 01 BD E6 
                0D CD 10 61 EB 05 4F 6B 61 79 00    
[ 735]        :                                       
[ 736]        :                                       
[ 737]        :                                       
[ 738]    0DEB: C7 84 79 01 00 00                     mov ml[si], 0
[ 739]        :                                       ;if total case = 20 then exit the loop
[ 740]    0DF1: A1 0B 01                              mov ax, tc
[ 741]    0DF4: BB 14 00                              mov bx, 20
[ 742]    0DF7: 3B C3                                 cmp ax, bx
[ 743]    0DF9: 75 03 E9 E2 0D                        je START_GAME
[ 744]        :                                       
[ 745]        :                                       ;set again the original index from tempindex to si
[ 746]    0DFE: A1 07 01                              mov ax, tempindex
[ 747]    0E01: 8B F0                                 mov si, ax
[ 748]    0E03: C7 06 05 01 00 00                     mov temp, 0
[ 749]    0E09: 83 06 0B 01 01                        add tc, 1  ; plus 1 to total case
[ 750]    0E0E: 80 06 04 01 01                        add y, 1 ;plus 1 to Y position
[ 751]    0E13: 83 C6 02                              add si, 2 ; plus 2 to SI
[ 752]    0E16: 8B 0E 27 02                           mov cx, lolo
[ 753]        :                                       
[ 754]    0E1A: 49 E3 03 E9 FB FA                     loop SET_MONEY_R
[ 755]    0E20: E9 BD 0D                              jmp START_GAME
[ 756]        :                                       
[ 757]        :                                       ;;;;;;;;;;;;FOR TWO PLAYER !!!;;;;;;;;;;;;;;;;
[ 758]        :                                       
[ 759]    0E23:                                       TWO_PLAYER:
[ 760]    0E23: 60 B8 00 06 B7 0F B9 00 00 B6 18 B2   clear_screen
                4F CD 10 61                         
[ 761]    0E33: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,1,0000_0111b,  "Welcome to Deal or No Deal by BSIT-IS3A Group 6"
                07 B9 2F 00 B2 01 B6 01 BD 4F 0E CD 
                10 61 EB 30 57 65 6C 63 6F 6D 65 20 
                74 6F 20 44 65 61 6C 20 6F 72 20 4E 
                6F 20 44 65 61 6C 20 62 79 20 42 53 
                49 54 2D 49 53 33 41 20 47 72 6F 75 
                70 20 36 00                         
[ 762]    0E7F: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,2,0000_0111b,  "How to play Deal or No Deal game?"
                07 B9 21 00 B2 01 B6 02 BD 9B 0E CD 
                10 61 EB 22 48 6F 77 20 74 6F 20 70 
                6C 61 79 20 44 65 61 6C 20 6F 72 20 
                4E 6F 20 44 65 61 6C 20 67 61 6D 65 
                3F 00                               
[ 763]    0EBD: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,3,0000_0111b,  "For Two Player:"                                                            ;
                07 B9 0F 00 B2 01 B6 03 BD D9 0E CD 
                10 61 EB 10 46 6F 72 20 54 77 6F 20 
                50 6C 61 79 65 72 3A 00             
[ 764]    0EE9: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,4,0000_0111b,  "1. For two player, the game will be played by one only and the other player"
                07 B9 4B 00 B2 01 B6 04 BD 05 0F CD 
                10 61 EB 4C 31 2E 20 46 6F 72 20 74 
                77 6F 20 70 6C 61 79 65 72 2C 20 74 
                68 65 20 67 61 6D 65 20 77 69 6C 6C 
                20 62 65 20 70 6C 61 79 65 64 20 62 
                79 20 6F 6E 65 20 6F 6E 6C 79 20 61 
                6E 64 20 74 68 65 20 6F 74 68 65 72 
                20 70 6C 61 79 65 72 00             
[ 765]    0F51: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,5,0000_0111b,  "will be the one who will assign the prize. After the play of first player,"
                07 B9 4A 00 B2 01 B6 05 BD 6D 0F CD 
                10 61 EB 4B 77 69 6C 6C 20 62 65 20 
                74 68 65 20 6F 6E 65 20 77 68 6F 20 
                77 69 6C 6C 20 61 73 73 69 67 6E 20 
                74 68 65 20 70 72 69 7A 65 2E 20 41 
                66 74 65 72 20 74 68 65 20 70 6C 61 
                79 20 6F 66 20 66 69 72 73 74 20 70 
                6C 61 79 65 72 2C 00                
[ 766]    0FB8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,6,0000_0111b,  "the second player will be the one to play the deal or no deal and the"
                07 B9 45 00 B2 01 B6 06 BD D4 0F CD 
                10 61 EB 46 74 68 65 20 73 65 63 6F 
                6E 64 20 70 6C 61 79 65 72 20 77 69 
                6C 6C 20 62 65 20 74 68 65 20 6F 6E 
                65 20 74 6F 20 70 6C 61 79 20 74 68 
                65 20 64 65 61 6C 20 6F 72 20 6E 6F 
                20 64 65 61 6C 20 61 6E 64 20 74 68 
                65 00                               
[ 767]    101A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,7,0000_0111b,  "first player a while ago will now be the one assigning the prize. "
                07 B9 42 00 B2 01 B6 07 BD 36 10 CD 
                10 61 EB 43 66 69 72 73 74 20 70 6C 
                61 79 65 72 20 61 20 77 68 69 6C 65 
                20 61 67 6F 20 77 69 6C 6C 20 6E 6F 
                77 20 62 65 20 74 68 65 20 6F 6E 65 
                20 61 73 73 69 67 6E 69 6E 67 20 74 
                68 65 20 70 72 69 7A 65 2E 20 00    
[ 768]    1079: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,8,0000_0111b,  "briefcase."
                07 B9 0A 00 B2 01 B6 08 BD 95 10 CD 
                10 61 EB 0B 62 72 69 65 66 63 61 73 
                65 2E 00                            
[ 769]    10A0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,9,0000_0111b,  "2. There are total of 20 briefcases with cash prize range 1 to 1000 pesos "
                07 B9 4A 00 B2 01 B6 09 BD BC 10 CD 
                10 61 EB 4B 32 2E 20 54 68 65 72 65 
                20 61 72 65 20 74 6F 74 61 6C 20 6F 
                66 20 32 30 20 62 72 69 65 66 63 61 
                73 65 73 20 77 69 74 68 20 63 61 73 
                68 20 70 72 69 7A 65 20 72 61 6E 67 
                65 20 31 20 74 6F 20 31 30 30 30 20 
                70 65 73 6F 73 20 00                
[ 770]    1107: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,10,0000_0111b, "inside. Before the round begins the player must choose his/her own "
                07 B9 43 00 B2 01 B6 0A BD 23 11 CD 
                10 61 EB 44 69 6E 73 69 64 65 2E 20 
                42 65 66 6F 72 65 20 74 68 65 20 72 
                6F 75 6E 64 20 62 65 67 69 6E 73 20 
                74 68 65 20 70 6C 61 79 65 72 20 6D 
                75 73 74 20 63 68 6F 6F 73 65 20 68 
                69 73 2F 68 65 72 20 6F 77 6E 20 00 
                                                    
[ 771]    1167: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,11,0000_0111b, "briefcase."
                07 B9 0A 00 B2 01 B6 0B BD 83 11 CD 
                10 61 EB 0B 62 72 69 65 66 63 61 73 
                65 2E 00                            
[ 772]    118E: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,12,0000_0111b, "3. After choosing your briefcase, the player will now proceed to play the "
                07 B9 4A 00 B2 01 B6 0C BD AA 11 CD 
                10 61 EB 4B 33 2E 20 41 66 74 65 72 
                20 63 68 6F 6F 73 69 6E 67 20 79 6F 
                75 72 20 62 72 69 65 66 63 61 73 65 
                2C 20 74 68 65 20 70 6C 61 79 65 72 
                20 77 69 6C 6C 20 6E 6F 77 20 70 72 
                6F 63 65 65 64 20 74 6F 20 70 6C 61 
                79 20 74 68 65 20 00                
[ 773]    11F5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,13,0000_0111b, "game and choose a number of briefcase."
                07 B9 26 00 B2 01 B6 0D BD 11 12 CD 
                10 61 EB 27 67 61 6D 65 20 61 6E 64 
                20 63 68 6F 6F 73 65 20 61 20 6E 75 
                6D 62 65 72 20 6F 66 20 62 72 69 65 
                66 63 61 73 65 2E 00                
[ 774]    1238: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,14,0000_0111b, "4. After choosing a given number of briefacases, the Banker will give an "
                07 B9 49 00 B2 01 B6 0E BD 54 12 CD 
                10 61 EB 4A 34 2E 20 41 66 74 65 72 
                20 63 68 6F 6F 73 69 6E 67 20 61 20 
                67 69 76 65 6E 20 6E 75 6D 62 65 72 
                20 6F 66 20 62 72 69 65 66 61 63 61 
                73 65 73 2C 20 74 68 65 20 42 61 6E 
                6B 65 72 20 77 69 6C 6C 20 67 69 76 
                65 20 61 6E 20 00                   
[ 775]    129E: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,15,0000_0111b, "offer to the player."
                07 B9 14 00 B2 01 B6 0F BD BA 12 CD 
                10 61 EB 15 6F 66 66 65 72 20 74 6F 
                20 74 68 65 20 70 6C 61 79 65 72 2E 
                00                                  
[ 776]    12CF: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,16,0000_0111b, "5. The player must decide whether to choose Deal or No Deal. Deal, means "
                07 B9 49 00 B2 01 B6 10 BD EB 12 CD 
                10 61 EB 4A 35 2E 20 54 68 65 20 70 
                6C 61 79 65 72 20 6D 75 73 74 20 64 
                65 63 69 64 65 20 77 68 65 74 68 65 
                72 20 74 6F 20 63 68 6F 6F 73 65 20 
                44 65 61 6C 20 6F 72 20 4E 6F 20 44 
                65 61 6C 2E 20 44 65 61 6C 2C 20 6D 
                65 61 6E 73 20 00                   
[ 777]    1335: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,17,0000_0111b, "accepting the offer presented and ending the game, or No Deal, rejecting "
                07 B9 49 00 B2 01 B6 11 BD 51 13 CD 
                10 61 EB 4A 61 63 63 65 70 74 69 6E 
                67 20 74 68 65 20 6F 66 66 65 72 20 
                70 72 65 73 65 6E 74 65 64 20 61 6E 
                64 20 65 6E 64 69 6E 67 20 74 68 65 
                20 67 61 6D 65 2C 20 6F 72 20 4E 6F 
                20 44 65 61 6C 2C 20 72 65 6A 65 63 
                74 69 6E 67 20 00                   
[ 778]    139B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,18,0000_0111b, "the offer and continuing the game until all briefcase are opened."
                07 B9 41 00 B2 01 B6 12 BD B7 13 CD 
                10 61 EB 42 74 68 65 20 6F 66 66 65 
                72 20 61 6E 64 20 63 6F 6E 74 69 6E 
                75 69 6E 67 20 74 68 65 20 67 61 6D 
                65 20 75 6E 74 69 6C 20 61 6C 6C 20 
                62 72 69 65 66 63 61 73 65 20 61 72 
                65 20 6F 70 65 6E 65 64 2E 00       
[ 779]        :                                       
[ 780]        :                                       
[ 781]    13F9: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,21,0000_1011b, "Press any key to start..."
                0B B9 19 00 B2 01 B6 15 BD 15 14 CD 
                10 61 EB 1A 50 72 65 73 73 20 61 6E 
                79 20 6B 65 79 20 74 6F 20 73 74 61 
                72 74 2E 2E 2E 00                   
[ 782]        :                                       
[ 783]        :                                       ; Press Any key to Start
[ 784]    142F: B4 01                                 mov ah, 1
[ 785]    1431: CD 21                                 int 21h
[ 786]    1433: 60 B8 00 06 B7 0F B9 00 00 B6 18 B2   clear_screen
                4F CD 10 61                         
[ 787]        :                                       
[ 788]        :                                       
[ 789]        :                                       ;Briefcase Money Setup
[ 790]        :                                       ;Display Money Table
[ 791]    1443: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,1,0000_0111b,  "Enter the specified amount of money in brief case."
                07 B9 32 00 B2 01 B6 01 BD 5F 14 CD 
                10 61 EB 33 45 6E 74 65 72 20 74 68 
                65 20 73 70 65 63 69 66 69 65 64 20 
                61 6D 6F 75 6E 74 20 6F 66 20 6D 6F 
                6E 65 79 20 69 6E 20 62 72 69 65 66 
                20 63 61 73 65 2E 00                
[ 792]        :                                       
[ 793]    1492: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,2,0010_1011b,   "==============||================="   ;78
                2B B9 21 00 B2 2B B6 02 BD AE 14 CD 
                10 61 EB 22 3D 3D 3D 3D 3D 3D 3D 3D 
                3D 3D 3D 3D 3D 3D 7C 7C 3D 3D 3D 3D 
                3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 
                3D 00                               
[ 794]    14D0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,3,0010_1011b,   "=      1      ||      100       ="   ;78
                2B B9 21 00 B2 2B B6 03 BD EC 14 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 31 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 31 30 30 20 20 20 20 20 20 20 
                3D 00                               
[ 795]    150E: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,4,0010_1011b,   "=             ||                ="
                2B B9 21 00 B2 2B B6 04 BD 2A 15 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 796]    154C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,5,0010_1011b,   "=      5      ||      150       ="
                2B B9 21 00 B2 2B B6 05 BD 68 15 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 35 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 31 35 30 20 20 20 20 20 20 20 
                3D 00                               
[ 797]    158A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,6,0010_1011b,   "=             ||                ="
                2B B9 21 00 B2 2B B6 06 BD A6 15 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 798]    15C8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,7,0010_1011b,   "=      10     ||      200       ="
                2B B9 21 00 B2 2B B6 07 BD E4 15 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 31 
                30 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 32 30 30 20 20 20 20 20 20 20 
                3D 00                               
[ 799]    1606: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,8,0010_1011b,   "=             ||                ="
                2B B9 21 00 B2 2B B6 08 BD 22 16 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 800]    1644: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,9,0010_1011b,   "=      15     ||      250       ="
                2B B9 21 00 B2 2B B6 09 BD 60 16 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 31 
                35 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 32 35 30 20 20 20 20 20 20 20 
                3D 00                               
[ 801]    1682: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,10,0010_1011b   "=             ||                ="
                2B B9 21 00 B2 2B B6 0A BD 9E 16 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 802]    16C0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,11,0010_1011b,  "=      20     ||      300       ="
                2B B9 21 00 B2 2B B6 0B BD DC 16 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 32 
                30 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 33 30 30 20 20 20 20 20 20 20 
                3D 00                               
[ 803]    16FE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,12,0010_1011b,  "=             ||                ="
                2B B9 21 00 B2 2B B6 0C BD 1A 17 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 804]    173C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,13,0010_1011b,  "=      25     ||      350       ="
                2B B9 21 00 B2 2B B6 0D BD 58 17 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 32 
                35 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 33 35 30 20 20 20 20 20 20 20 
                3D 00                               
[ 805]    177A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,14,0010_1011b,  "=             ||                ="
                2B B9 21 00 B2 2B B6 0E BD 96 17 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 806]    17B8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,15,0010_1011b,  "=      30     ||      400       ="
                2B B9 21 00 B2 2B B6 0F BD D4 17 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 33 
                30 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 34 30 30 20 20 20 20 20 20 20 
                3D 00                               
[ 807]    17F6: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,16,0010_1011b,  "=             ||                ="
                2B B9 21 00 B2 2B B6 10 BD 12 18 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 808]    1834: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,17,0010_1011b,  "=      35     ||      450       ="
                2B B9 21 00 B2 2B B6 11 BD 50 18 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 33 
                35 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 34 35 30 20 20 20 20 20 20 20 
                3D 00                               
[ 809]    1872: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,18,0010_1011b,  "=             ||                ="
                2B B9 21 00 B2 2B B6 12 BD 8E 18 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 810]    18B0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,19,0010_1011b,  "=      50     ||      500       ="
                2B B9 21 00 B2 2B B6 13 BD CC 18 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 35 
                30 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 35 30 30 20 20 20 20 20 20 20 
                3D 00                               
[ 811]    18EE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,20,0010_1011b,  "=             ||                ="
                2B B9 21 00 B2 2B B6 14 BD 0A 19 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                3D 00                               
[ 812]    192C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,21,0010_1011b,  "=      75     ||      1000      ="
                2B B9 21 00 B2 2B B6 15 BD 48 19 CD 
                10 61 EB 22 3D 20 20 20 20 20 20 37 
                35 20 20 20 20 20 7C 7C 20 20 20 20 
                20 20 31 30 30 30 20 20 20 20 20 20 
                3D 00                               
[ 813]    196A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,22,0010_1011b,  "==============||================="
                2B B9 21 00 B2 2B B6 16 BD 86 19 CD 
                10 61 EB 22 3D 3D 3D 3D 3D 3D 3D 3D 
                3D 3D 3D 3D 3D 3D 7C 7C 3D 3D 3D 3D 
                3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 
                3D 00                               
[ 814]        :                                       
[ 815]        :                                       
[ 816]        :                                       
[ 817]        :                                       
[ 818]    19A8: B0 00                                 mov al, 0
[ 819]    19AA: A2 03 01                              mov x, al
[ 820]    19AD: B0 02                                 mov al,2 ;Set Y
[ 821]    19AF: A2 04 01                              mov y,al ;position
[ 822]        :                                       
[ 823]    19B2: C6 06 22 01 01                        mov sc, 1
[ 824]    19B7: B8 01 00                              mov ax, 1
[ 825]    19BA: A3 0B 01                              mov tc, ax ;Set Total case to 1
[ 826]    19BD: B9 14 00                              mov cx, 20 ;Set number of loop
[ 827]    19C0: BE 00 00                              mov si, 0 ;Set index
[ 828]    19C3:                                       SET_MONEY:
[ 829]        :                                       
[ 830]    19C3: 8B C6                                 mov ax, si         ;move source index to tempindex
[ 831]    19C5: A3 07 01                              mov tempindex, ax
[ 832]        :                                       
[ 833]    19C8: A1 0B 01                              mov ax, tc         ;move total case to ax to print
[ 834]    19CB: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,y,0000_0111b,"Briefcase number "
                07 B9 11 00 B2 01 8A 36 04 01 BD E9 
                19 CD 10 61 EB 12 42 72 69 65 66 63 
                61 73 65 20 6E 75 6D 62 65 72 20 00 
                                                    
[ 835]    19FB: E8 D0 2E                              call print_num
[ 836]        :                                       
[ 837]    19FE:                                       INPUT_AGAIN:
[ 838]    19FE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 20,y,0000_0111b," : "
                07 B9 03 00 B2 14 8A 36 04 01 BD 1C 
                1A CD 10 61 EB 04 20 3A 20 00       
[ 839]        :                                       
[ 840]    1A20: 51                                    push cx ;push cx to secure the value of above cx
[ 841]    1A21: E8 E9 2D                              call scan_num  ;enter briefcase money and store to ax
[ 842]    1A24: 89 0E 05 01                           mov temp, cx
[ 843]    1A28: 89 8C 25 01                           mov cn[si],cx
[ 844]    1A2C: 59                                    pop cx  ;pop first cx
[ 845]        :                                       
[ 846]        :                                       ;Input Checking
[ 847]    1A2D: 51                                    push cx    ;push cx again
[ 848]    1A2E: BE 00 00                              mov si, 0
[ 849]    1A31: B9 14 00                              mov cx, 20
[ 850]        :                                       
[ 851]    1A34:                                       CHECK_INPUT_MONEY:  ;internal loop
[ 852]    1A34: 80 06 22 01 02                        add sc, 2
[ 853]    1A39: 8B 84 79 01                           mov ax, ml[si]     ;store to casenumber in specific index
[ 854]    1A3D: 8B 1E 05 01                           mov bx, temp
[ 855]    1A41: 3B C3                                 cmp ax, bx
[ 856]    1A43: 74 70                                 je EXIT_CIM_LOOP ;exit the loop if input is valid
[ 857]    1A45: 83 C6 02                              add si, 2
[ 858]        :                                       
[ 859]    1A48: E2 EA                                 loop CHECK_INPUT_MONEY
[ 860]        :                                       
[ 861]        :                                       ;proceed here if input is not valid
[ 862]    1A4A:                                       PRINT_INVALID:
[ 863]    1A4A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 29, y, 0000_1100b, "INVALID INPUT"
                0C B9 0D 00 B2 1D 8A 36 04 01 BD 68 
                1A CD 10 61 EB 0E 49 4E 56 41 4C 49 
                44 20 49 4E 50 55 54 00             
[ 864]    1A76: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 23, y, 0000_1111b, "      "
                0F B9 06 00 B2 17 8A 36 04 01 BD 94 
                1A CD 10 61 EB 07 20 20 20 20 20 20 
                00                                  
[ 865]    1A9B: C6 06 22 01 01                        mov sc, 1
[ 866]    1AA0: C7 06 05 01 00 00                     mov temp, 0
[ 867]    1AA6: A1 07 01                              mov ax, tempindex
[ 868]    1AA9: 8B F0                                 mov si, ax
[ 869]    1AAB: C7 84 25 01 00 00                     mov cn[si], 0
[ 870]    1AB1: 59                                    pop cx   ;pop the first cx
[ 871]    1AB2: E9 49 FF                              JMP INPUT_AGAIN ;jump t input again
[ 872]        :                                       
[ 873]    1AB5:                                       EXIT_CIM_LOOP:
[ 874]    1AB5: B8 00 00                              mov ax, 0
[ 875]    1AB8: 3B C3                                 cmp ax, bx
[ 876]    1ABA: 74 8E                                 je PRINT_INVALID
[ 877]    1ABC: 59                                    pop cx
[ 878]        :                                       
[ 879]        :                                       ;44-56
[ 880]        :                                       ;50-51
[ 881]        :                                       ;59 -74
[ 882]        :                                       ;65-68
[ 883]        :                                       
[ 884]    1ABD: 8A 26 22 01                           mov ah,sc
[ 885]    1AC1: B7 15                                 mov bh,21
[ 886]    1AC3: 3A E7                                 cmp ah, bh
[ 887]    1AC5: 7F 55                                 jg RIGHT_COL
[ 888]    1AC7: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 44,sc, 0100_1010b,"             "
                4A B9 0D 00 B2 2C 8A 36 22 01 BD E5 
                1A CD 10 61 EB 0E 20 20 20 20 20 20 
                20 20 20 20 20 20 20 00             
[ 889]    1AF3: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 49,sc,0100_1010b," "
                4A B9 01 00 B2 31 8A 36 22 01 BD 11 
                1B CD 10 61 EB 02 20 00             
[ 890]    1B13: 8B 84 79 01                           mov ax, ml[si]
[ 891]    1B17: E8 B4 2D                              call print_num
[ 892]    1B1A: EB 5B                                 JMP PASS_RIGHT_COL
[ 893]        :                                       
[ 894]    1B1C:                                       RIGHT_COL:
[ 895]    1B1C: 80 2E 22 01 14                        sub sc, 20
[ 896]    1B21: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 59,sc, 0100_1010b,"                "
                4A B9 10 00 B2 3B 8A 36 22 01 BD 3F 
                1B CD 10 61 EB 11 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 00    
[ 897]    1B50: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 64,sc,0100_1010b," "
                4A B9 01 00 B2 40 8A 36 22 01 BD 6E 
                1B CD 10 61 EB 02 20 00             
[ 898]    1B70: 8B 84 79 01                           mov ax, ml[si]
[ 899]    1B74: E8 57 2D                              call print_num
[ 900]        :                                       
[ 901]    1B77:                                       PASS_RIGHT_COL:
[ 902]    1B77: C7 84 79 01 00 00                     mov ml[si], 0 ;set the default money value to zero to avoid duplication
[ 903]    1B7D: C7 06 05 01 00 00                     mov temp, 0
[ 904]    1B83: C6 06 22 01 01                        mov sc, 1
[ 905]    1B88: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 29, y, 0000_1010b, "VALID INPUT  "
                0A B9 0D 00 B2 1D 8A 36 04 01 BD A6 
                1B CD 10 61 EB 0E 56 41 4C 49 44 20 
                49 4E 50 55 54 20 20 00             
[ 906]        :                                       
[ 907]    1BB4: EB 00                                 jmp GO
[ 908]        :                                       
[ 909]    1BB6:                                       GO:
[ 910]        :                                       
[ 911]        :                                       ;if total case = 20 then exit the loop
[ 912]    1BB6: A1 0B 01                              mov ax, tc
[ 913]    1BB9: BB 14 00                              mov bx, 20
[ 914]    1BBC: 3B C3                                 cmp ax, bx
[ 915]    1BBE: 74 20                                 je START_GAME
[ 916]        :                                       
[ 917]        :                                       ;set again the original index from tempindex to si
[ 918]    1BC0: A1 07 01                              mov ax, tempindex
[ 919]    1BC3: 8B F0                                 mov si, ax
[ 920]    1BC5: C7 06 05 01 00 00                     mov temp, 0
[ 921]    1BCB: 83 06 0B 01 01                        add tc, 1  ; plus 1 to total case
[ 922]    1BD0: 80 06 04 01 01                        add y, 1 ;plus 1 to Y position
[ 923]    1BD5: 83 C6 02                              add si, 2 ; plus 2 to SI
[ 924]        :                                       
[ 925]        :                                       
[ 926]    1BD8: 49 E3 03 E9 E5 FD                     loop SET_MONEY
[ 927]    1BDE: EB 00                                 jmp START_GAME
[ 928]        :                                       
[ 929]        :                                       
[ 930]    1BE0:                                       START_GAME:
[ 931]        :                                       
[ 932]    1BE0: B9 14 00                              mov cx, 20
[ 933]    1BE3: BE 00 00                              mov si, 0
[ 934]    1BE6:                                       tm_add_all:
[ 935]    1BE6: 51                                    push cx
[ 936]    1BE7: 8B 8C 25 01                           mov cx, cn[si]
[ 937]    1BEB: 01 0E 0D 01                           add tm, cx
[ 938]    1BEF: 59                                    pop cx
[ 939]    1BF0: A1 0D 01                              mov ax, tm
[ 940]    1BF3: 83 C6 02                              add si, 2
[ 941]        :                                       
[ 942]    1BF6: E2 EE                                 loop tm_add_all
[ 943]        :                                       
[ 944]    1BF8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,23,0000_1011b, "Press any key to start..."
                0B B9 19 00 B2 01 B6 17 BD 14 1C CD 
                10 61 EB 1A 50 72 65 73 73 20 61 6E 
                79 20 6B 65 79 20 74 6F 20 73 74 61 
                72 74 2E 2E 2E 00                   
[ 945]        :                                       ; Press Any key to Start
[ 946]    1C2E: B4 01                                 mov ah, 1
[ 947]    1C30: CD 21                                 int 21h
[ 948]    1C32: 60 B8 00 06 B7 0F B9 00 00 B6 18 B2   clear_screen
                4F CD 10 61                         
[ 949]        :                                       
[ 950]        :                                       ;Print Game Layout
[ 951]        :                                       
[ 952]        :                                       ;Banker's Offer--------------------
[ 953]    1C42: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,1,0010_1011b,  "o-Banker's Offer-o"
                2B B9 12 00 B2 01 B6 01 BD 5E 1C CD 
                10 61 EB 13 6F 2D 42 61 6E 6B 65 72 
                27 73 20 4F 66 66 65 72 2D 6F 00    
[ 954]    1C71: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,2,0010_1011b,  "=================="
                2B B9 12 00 B2 01 B6 02 BD 8D 1C CD 
                10 61 EB 13 3D 3D 3D 3D 3D 3D 3D 3D 
                3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 00    
[ 955]    1CA0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,3,0010_1011b,  "=                ="
                2B B9 12 00 B2 01 B6 03 BD BC 1C CD 
                10 61 EB 13 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 3D 00    
[ 956]    1CCF: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,4,0010_1011b,  "=                ="
                2B B9 12 00 B2 01 B6 04 BD EB 1C CD 
                10 61 EB 13 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 3D 00    
[ 957]    1CFE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,5,0010_1011b,  "=                ="
                2B B9 12 00 B2 01 B6 05 BD 1A 1D CD 
                10 61 EB 13 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 3D 00    
[ 958]    1D2D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,6,0010_1011b,  "=                ="
                2B B9 12 00 B2 01 B6 06 BD 49 1D CD 
                10 61 EB 13 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 3D 00    
[ 959]    1D5C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,7,0010_1011b,  "=                ="
                2B B9 12 00 B2 01 B6 07 BD 78 1D CD 
                10 61 EB 13 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 3D 00    
[ 960]    1D8B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,8,0010_1011b,  "=                ="
                2B B9 12 00 B2 01 B6 08 BD A7 1D CD 
                10 61 EB 13 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 3D 00    
[ 961]    1DBA: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,9,0010_1011b,  "=                ="
                2B B9 12 00 B2 01 B6 09 BD D6 1D CD 
                10 61 EB 13 3D 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 3D 00    
[ 962]    1DE9: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,10,0010_1011b, "=================="
                2B B9 12 00 B2 01 B6 0A BD 05 1E CD 
                10 61 EB 13 3D 3D 3D 3D 3D 3D 3D 3D 
                3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 00    
[ 963]        :                                       ;Banker's Offer End----------------
[ 964]        :                                       
[ 965]        :                                       
[ 966]        :                                       ;Case Money-----------------------
[ 967]    1E18: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,12,0010_1011b,  "=================="
                2B B9 12 00 B2 01 B6 0C BD 34 1E CD 
                10 61 EB 13 3D 3D 3D 3D 3D 3D 3D 3D 
                3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 00    
[ 968]    1E47: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,12,0010_1011b,  "oooooo-Money-ooooo"
                2B B9 12 00 B2 01 B6 0C BD 63 1E CD 
                10 61 EB 13 6F 6F 6F 6F 6F 6F 2D 4D 
                6F 6E 65 79 2D 6F 6F 6F 6F 6F 00    
[ 969]    1E76: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,13,0010_1011b,  "=================="
                2B B9 12 00 B2 01 B6 0D BD 92 1E CD 
                10 61 EB 13 3D 3D 3D 3D 3D 3D 3D 3D 
                3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 00    
[ 970]    1EA5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,14,0010_1011b,  "=   1   ||  100  ="
                2B B9 12 00 B2 01 B6 0E BD C1 1E CD 
                10 61 EB 13 3D 20 20 20 31 20 20 20 
                7C 7C 20 20 31 30 30 20 20 3D 00    
[ 971]    1ED4: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,15,0010_1011b,  "=   5   ||  150  ="
                2B B9 12 00 B2 01 B6 0F BD F0 1E CD 
                10 61 EB 13 3D 20 20 20 35 20 20 20 
                7C 7C 20 20 31 35 30 20 20 3D 00    
[ 972]    1F03: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,16,0010_1011b,  "=   10  ||  200  ="
                2B B9 12 00 B2 01 B6 10 BD 1F 1F CD 
                10 61 EB 13 3D 20 20 20 31 30 20 20 
                7C 7C 20 20 32 30 30 20 20 3D 00    
[ 973]    1F32: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,17,0010_1011b,  "=   15  ||  250  ="
                2B B9 12 00 B2 01 B6 11 BD 4E 1F CD 
                10 61 EB 13 3D 20 20 20 31 35 20 20 
                7C 7C 20 20 32 35 30 20 20 3D 00    
[ 974]    1F61: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,18,0010_1011b,  "=   20  ||  300  ="
                2B B9 12 00 B2 01 B6 12 BD 7D 1F CD 
                10 61 EB 13 3D 20 20 20 32 30 20 20 
                7C 7C 20 20 33 30 30 20 20 3D 00    
[ 975]    1F90: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,19,0010_1011b,  "=   25  ||  350  ="
                2B B9 12 00 B2 01 B6 13 BD AC 1F CD 
                10 61 EB 13 3D 20 20 20 32 35 20 20 
                7C 7C 20 20 33 35 30 20 20 3D 00    
[ 976]    1FBF: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,20,0010_1011b,  "=   30  ||  400  ="
                2B B9 12 00 B2 01 B6 14 BD DB 1F CD 
                10 61 EB 13 3D 20 20 20 33 30 20 20 
                7C 7C 20 20 34 30 30 20 20 3D 00    
[ 977]    1FEE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,21,0010_1011b,  "=   35  ||  450  ="
                2B B9 12 00 B2 01 B6 15 BD 0A 20 CD 
                10 61 EB 13 3D 20 20 20 33 35 20 20 
                7C 7C 20 20 34 35 30 20 20 3D 00    
[ 978]    201D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,22,0010_1011b,  "=   50  ||  500  ="
                2B B9 12 00 B2 01 B6 16 BD 39 20 CD 
                10 61 EB 13 3D 20 20 20 35 30 20 20 
                7C 7C 20 20 35 30 30 20 20 3D 00    
[ 979]    204C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 1,23,0010_1011b,  "=   75  ||  1000 ="
                2B B9 12 00 B2 01 B6 17 BD 68 20 CD 
                10 61 EB 13 3D 20 20 20 37 35 20 20 
                7C 7C 20 20 31 30 30 30 20 3D 00    
[ 980]        :                                       
[ 981]        :                                       ;Briefcases
[ 982]        :                                       ;Row 1 briefcases
[ 983]    207B: C6 06 03 01 19                        mov x, 25
[ 984]    2080: C6 06 04 01 01                        mov y, 1
[ 985]    2085: B9 05 00                              mov cx, 5
[ 986]    2088: BE 00 00                              mov si, 0
[ 987]    208B:                                       PRINT_CASE_V1:
[ 988]        :                                       
[ 989]    208B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b,    "##"
                2B B9 02 00 8A 16 03 01 8A 36 04 01 
                BD AB 20 CD 10 61 EB 03 23 23 00    
[ 990]    20AE: 80 2E 03 01 03                        sub x, 3
[ 991]    20B3: 80 06 04 01 01                        add y, 1
[ 992]    20B8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD D8 20 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[ 993]    20E1: 80 06 04 01 01                        add y, 1
[ 994]    20E6: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 06 21 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[ 995]        :                                       
[ 996]        :                                       ;print num
[ 997]    210F: 80 06 03 01 03                        add x, 3
[ 998]    2114: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "#"
                2B B9 01 00 8A 16 03 01 8A 36 04 01 
                BD 34 21 CD 10 61 EB 02 23 00       
[ 999]    2136: 83 C6 01                              add si, 1
[1000]    2139: 8B C6                                 mov ax, si
[1001]    213B: E8 90 27                              call print_num
[1002]        :                                       
[1003]    213E: 80 2E 03 01 01                        sub x, 1
[1004]    2143: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "#"
                2B B9 01 00 8A 16 03 01 8A 36 04 01 
                BD 63 21 CD 10 61 EB 02 23 00       
[1005]    2165: B8 00 00                              mov ax, 0
[1006]    2168: E8 63 27                              call print_num
[1007]        :                                       
[1008]    216B: 80 2E 03 01 02                        sub x, 2
[1009]    2170: 80 06 04 01 01                        add y, 1
[1010]    2175: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 95 21 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1011]        :                                       
[1012]    219E: C6 06 04 01 01                        mov y, 1
[1013]    21A3: 80 06 03 01 0D                        add x, 13
[1014]    21A8: 49 E3 03 E9 DD FE                     loop PRINT_CASE_V1
[1015]        :                                       
[1016]        :                                       ;Row 2 briefcases
[1017]    21AE: C6 06 03 01 19                        mov x, 25
[1018]    21B3: C6 06 04 01 06                        mov y, 6
[1019]    21B8: B9 05 00                              mov cx, 5
[1020]    21BB: BE 05 00                              mov si, 5
[1021]    21BE:                                       PRINT_CASE_V2:
[1022]        :                                       
[1023]    21BE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b,    "##"
                2B B9 02 00 8A 16 03 01 8A 36 04 01 
                BD DE 21 CD 10 61 EB 03 23 23 00    
[1024]    21E1: 80 2E 03 01 03                        sub x, 3
[1025]    21E6: 80 06 04 01 01                        add y, 1
[1026]    21EB: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 0B 22 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1027]    2214: 80 06 04 01 01                        add y, 1
[1028]    2219: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 39 22 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1029]        :                                       
[1030]        :                                       ;print num
[1031]    2242: 83 C6 01                              add si, 1
[1032]    2245: 8B C6                                 mov ax, si
[1033]    2247: BB 0A 00                              mov bx, 10
[1034]    224A: 3B C3                                 cmp ax, bx
[1035]    224C: 75 31                                 jne not_equal_to_ten
[1036]        :                                       ;If equal to 10
[1037]    224E: 80 06 03 01 02                        add x, 2
[1038]    2253: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "#"
                2B B9 01 00 8A 16 03 01 8A 36 04 01 
                BD 73 22 CD 10 61 EB 02 23 00       
[1039]    2275: E8 56 26                              call print_num
[1040]    2278: 80 2E 03 01 02                        sub x, 2
[1041]    227D: EB 5C                                 jmp SKIP_ETT
[1042]        :                                       
[1043]        :                                       ;if si is not equal to 10
[1044]    227F:                                       not_equal_to_ten:
[1045]    227F: 80 06 03 01 03                        add x, 3
[1046]    2284: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "#"
                2B B9 01 00 8A 16 03 01 8A 36 04 01 
                BD A4 22 CD 10 61 EB 02 23 00       
[1047]    22A6: E8 25 26                              call print_num
[1048]        :                                       
[1049]    22A9: 80 2E 03 01 01                        sub x, 1
[1050]    22AE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "#"
                2B B9 01 00 8A 16 03 01 8A 36 04 01 
                BD CE 22 CD 10 61 EB 02 23 00       
[1051]    22D0: B8 00 00                              mov ax, 0
[1052]    22D3: E8 F8 25                              call print_num
[1053]    22D6: 80 2E 03 01 02                        sub x, 2
[1054]        :                                       
[1055]    22DB:                                       SKIP_ETT:
[1056]    22DB: 80 06 04 01 01                        add y, 1
[1057]    22E0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 00 23 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1058]        :                                       
[1059]    2309: C6 06 04 01 06                        mov y, 6
[1060]    230E: 80 06 03 01 0D                        add x, 13
[1061]    2313: 49 E3 03 E9 A5 FE                     loop PRINT_CASE_V2
[1062]        :                                       
[1063]        :                                       ;Row 3 briefcases
[1064]    2319: C6 06 03 01 19                        mov x, 25
[1065]    231E: C6 06 04 01 0B                        mov y, 11
[1066]    2323: B9 05 00                              mov cx, 5
[1067]    2326: BE 0A 00                              mov si, 10
[1068]    2329:                                       PRINT_CASE_V3:
[1069]        :                                       
[1070]    2329: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b,    "##"
                2B B9 02 00 8A 16 03 01 8A 36 04 01 
                BD 49 23 CD 10 61 EB 03 23 23 00    
[1071]    234C: 80 2E 03 01 03                        sub x, 3
[1072]    2351: 80 06 04 01 01                        add y, 1
[1073]    2356: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 76 23 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1074]    237F: 80 06 04 01 01                        add y, 1
[1075]    2384: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD A4 23 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1076]        :                                       
[1077]        :                                       ;print num
[1078]    23AD: 83 C6 01                              add si, 1
[1079]    23B0: 8B C6                                 mov ax, si
[1080]    23B2: 80 06 03 01 02                        add x, 2
[1081]    23B7: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "#"
                2B B9 01 00 8A 16 03 01 8A 36 04 01 
                BD D7 23 CD 10 61 EB 02 23 00       
[1082]    23D9: E8 F2 24                              call print_num
[1083]    23DC: 80 2E 03 01 02                        sub x, 2
[1084]        :                                       
[1085]    23E1: 80 06 04 01 01                        add y, 1
[1086]    23E6: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 06 24 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1087]        :                                       
[1088]    240F: C6 06 04 01 0B                        mov y, 11
[1089]    2414: 80 06 03 01 0D                        add x, 13
[1090]    2419: 49 E3 03 E9 0A FF                     loop PRINT_CASE_V3
[1091]        :                                       
[1092]        :                                       ;4
[1093]    241F: C6 06 03 01 19                        mov x, 25
[1094]    2424: C6 06 04 01 10                        mov y, 16
[1095]    2429: B9 05 00                              mov cx, 5
[1096]    242C: BE 0F 00                              mov si, 15
[1097]    242F:                                       PRINT_CASE_V4:
[1098]        :                                       
[1099]    242F: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b,    "##"
                2B B9 02 00 8A 16 03 01 8A 36 04 01 
                BD 4F 24 CD 10 61 EB 03 23 23 00    
[1100]    2452: 80 2E 03 01 03                        sub x, 3
[1101]    2457: 80 06 04 01 01                        add y, 1
[1102]    245C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 7C 24 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1103]    2485: 80 06 04 01 01                        add y, 1
[1104]    248A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD AA 24 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1105]        :                                       
[1106]        :                                       ;print num
[1107]    24B3: 83 C6 01                              add si, 1
[1108]    24B6: 8B C6                                 mov ax, si
[1109]    24B8: 80 06 03 01 02                        add x, 2
[1110]    24BD: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "#"
                2B B9 01 00 8A 16 03 01 8A 36 04 01 
                BD DD 24 CD 10 61 EB 02 23 00       
[1111]    24DF: E8 EC 23                              call print_num
[1112]    24E2: 80 2E 03 01 02                        sub x, 2
[1113]        :                                       
[1114]    24E7: 80 06 04 01 01                        add y, 1
[1115]    24EC: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print x,y,0010_1011b, "########"
                2B B9 08 00 8A 16 03 01 8A 36 04 01 
                BD 0C 25 CD 10 61 EB 09 23 23 23 23 
                23 23 23 23 00                      
[1116]        :                                       
[1117]        :                                       
[1118]    2515: C6 06 04 01 10                        mov y, 16
[1119]    251A: 80 06 03 01 0D                        add x, 13
[1120]    251F: 49 E3 03 E9 0A FF                     loop PRINT_CASE_V4
[1121]        :                                       
[1122]        :                                       
[1123]    2525: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,1,0010_1011b,  "###"
                2B B9 03 00 B2 4A B6 01 BD 41 25 CD 
                10 61 EB 04 23 23 23 00             
[1124]    2545: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,2,0010_1011b,  "# #"
                2B B9 03 00 B2 4A B6 02 BD 61 25 CD 
                10 61 EB 04 23 20 23 00             
[1125]    2565: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,3,0010_1011b,  "# #"
                2B B9 03 00 B2 4A B6 03 BD 81 25 CD 
                10 61 EB 04 23 20 23 00             
[1126]    2585: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,4,0010_1011b,  "#R#"
                2B B9 03 00 B2 4A B6 04 BD A1 25 CD 
                10 61 EB 04 23 52 23 00             
[1127]    25A5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,5,0010_1011b,  "#O#"
                2B B9 03 00 B2 4A B6 05 BD C1 25 CD 
                10 61 EB 04 23 4F 23 00             
[1128]    25C5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,6,0010_1011b,  "#U#"
                2B B9 03 00 B2 4A B6 06 BD E1 25 CD 
                10 61 EB 04 23 55 23 00             
[1129]    25E5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,7,0010_1011b,  "#N#"
                2B B9 03 00 B2 4A B6 07 BD 01 26 CD 
                10 61 EB 04 23 4E 23 00             
[1130]    2605: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,8,0010_1011b,  "#D#"
                2B B9 03 00 B2 4A B6 08 BD 21 26 CD 
                10 61 EB 04 23 44 23 00             
[1131]    2625: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,9,0010_1011b,  "# #"
                2B B9 03 00 B2 4A B6 09 BD 41 26 CD 
                10 61 EB 04 23 20 23 00             
[1132]    2645: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,10,0010_1011b, "#0#"
                2B B9 03 00 B2 4A B6 0A BD 61 26 CD 
                10 61 EB 04 23 30 23 00             
[1133]    2665: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,11,0010_1011b, "# #"
                2B B9 03 00 B2 4A B6 0B BD 81 26 CD 
                10 61 EB 04 23 20 23 00             
[1134]    2685: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,12,0010_1011b, "###"
                2B B9 03 00 B2 4A B6 0C BD A1 26 CD 
                10 61 EB 04 23 23 23 00             
[1135]    26A5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,13,0010_1011b, "# #"
                2B B9 03 00 B2 4A B6 0D BD C1 26 CD 
                10 61 EB 04 23 20 23 00             
[1136]    26C5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,14,0010_1011b, "# #"
                2B B9 03 00 B2 4A B6 0E BD E1 26 CD 
                10 61 EB 04 23 20 23 00             
[1137]    26E5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,15,0010_1011b, "#P#"
                2B B9 03 00 B2 4A B6 0F BD 01 27 CD 
                10 61 EB 04 23 50 23 00             
[1138]    2705: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,16,0010_1011b, "#I#"
                2B B9 03 00 B2 4A B6 10 BD 21 27 CD 
                10 61 EB 04 23 49 23 00             
[1139]    2725: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,17,0010_1011b, "#C#"
                2B B9 03 00 B2 4A B6 11 BD 41 27 CD 
                10 61 EB 04 23 43 23 00             
[1140]    2745: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,18,0010_1011b, "#K#"
                2B B9 03 00 B2 4A B6 12 BD 61 27 CD 
                10 61 EB 04 23 4B 23 00             
[1141]    2765: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,19,0010_1011b, "# #"
                2B B9 03 00 B2 4A B6 13 BD 81 27 CD 
                10 61 EB 04 23 20 23 00             
[1142]    2785: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,20,0010_1011b, "#0#"
                2B B9 03 00 B2 4A B6 14 BD A1 27 CD 
                10 61 EB 04 23 30 23 00             
[1143]    27A5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,21,0010_1011b, "# #"
                2B B9 03 00 B2 4A B6 15 BD C1 27 CD 
                10 61 EB 04 23 20 23 00             
[1144]    27C5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,22,0010_1011b, "###"
                2B B9 03 00 B2 4A B6 16 BD E1 27 CD 
                10 61 EB 04 23 23 23 00             
[1145]        :                                       
[1146]        :                                       
[1147]        :                                       ;set num
[1148]    27E5: BE 28 00                              mov si, 40
[1149]    27E8: B9 14 00                              mov cx, 20
[1150]    27EB:                                       set_tn:
[1151]    27EB: 83 EE 02                              sub si, 2
[1152]    27EE: 89 8C CB 01                           mov tn[si], cx
[1153]    27F2: E2 F7                                 loop set_tn
[1154]        :                                       
[1155]        :                                       
[1156]    27F4: C7 06 05 01 00 00                     mov temp, 0  ;Set temp to zero to input Main Case
[1157]        :                                       
[1158]        :                                       ;UMI = User Main Input, CUMI Check User Main Input
[1159]    27FA:                                       INPUT_UMI:
[1160]    27FA: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"Choose main briefcase number : "
                07 B9 1F 00 B2 18 B6 16 BD 16 28 CD 
                10 61 EB 20 43 68 6F 6F 73 65 20 6D 
                61 69 6E 20 62 72 69 65 66 63 61 73 
                65 20 6E 75 6D 62 65 72 20 3A 20 00 
                                                    
[1161]        :                                       
[1162]    2836: 51                                    push cx
[1163]    2837: E8 D3 1F                              call scan_num
[1164]    283A: 8B C1                                 mov ax, cx
[1165]    283C: 89 0E 11 01                           mov mc, cx
[1166]    2840: 59                                    pop cx
[1167]        :                                       
[1168]    2841: 51                                    push cx
[1169]    2842: BE 00 00                              mov si, 0
[1170]    2845: B9 14 00                              mov cx, 20
[1171]        :                                       ;Check user main input
[1172]        :                                       
[1173]    2848:                                       CHECK_USER_MAIN_INPUT:
[1174]        :                                       
[1175]    2848: 8B 9C CB 01                           mov bx, tn[si]
[1176]    284C: 3B C3                                 cmp ax, bx
[1177]    284E: 74 56                                 JE EXIT_CUMI
[1178]    2850: 83 C6 02                              add si, 2
[1179]        :                                       
[1180]    2853: E2 F3                                 loop CHECK_USER_MAIN_INPUT
[1181]    2855: 59                                    pop cx
[1182]        :                                       
[1183]        :                                       ;If invalid input
[1184]    2856:                                       INVALID_CUMI:
[1185]    2856: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 60, 22, 0000_1100b, "INVALID INPUT"
                0C B9 0D 00 B2 3C B6 16 BD 72 28 CD 
                10 61 EB 0E 49 4E 56 41 4C 49 44 20 
                49 4E 50 55 54 00                   
[1186]    2880: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 54,22,0000_0111b,"      "
                07 B9 06 00 B2 36 B6 16 BD 9C 28 CD 
                10 61 EB 07 20 20 20 20 20 20 00    
[1187]    28A3: E9 54 FF                              JMP INPUT_UMI
[1188]        :                                       
[1189]        :                                       ;If input is valid proceed here.
[1190]    28A6:                                       EXIT_CUMI:
[1191]    28A6: 59                                    pop cx
[1192]    28A7: BB 00 00                              mov bx, 0
[1193]    28AA: 3B C3                                 cmp ax, bx
[1194]    28AC: 74 A8                                 JE INVALID_CUMI
[1195]        :                                       
[1196]        :                                       
[1197]        :                                       ;Delete the current message
[1198]    28AE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"                                      ";;;
                07 B9 26 00 B2 18 B6 16 BD CA 28 CD 
                10 61 EB 27 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 00                
[1199]    28F1: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 60, 22, 0000_0111b, "             ";
                07 B9 0D 00 B2 3C B6 16 BD 0D 29 CD 
                10 61 EB 0E 20 20 20 20 20 20 20 20 
                20 20 20 20 20 00                   
[1200]        :                                       
[1201]        :                                       ;Display Input Confirmation
[1202]    291B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"Are you sure you want "
                07 B9 16 00 B2 18 B6 16 BD 37 29 CD 
                10 61 EB 17 41 72 65 20 79 6F 75 20 
                73 75 72 65 20 79 6F 75 20 77 61 6E 
                74 20 00                            
[1203]    294E: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 46,22,0000_1010b,"Briefcase    "
                0A B9 0D 00 B2 2E B6 16 BD 6A 29 CD 
                10 61 EB 0E 42 72 69 65 66 63 61 73 
                65 20 20 20 20 00                   
[1204]    2978: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 56,22,0000_1010b," "
                0A B9 01 00 B2 38 B6 16 BD 94 29 CD 
                10 61 EB 02 20 00                   
[1205]    2996: 8B 84 CB 01                           mov ax, tn[si] ; Get the default case or chosen case and display
[1206]    299A: E8 31 1F                              call print_num
[1207]        :                                       
[1208]    299D:                                       YN_INPUT: ;If invalid input jump here.
[1209]    299D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_1100b,"No[0]"
                0C B9 05 00 B2 18 B6 17 BD B9 29 CD 
                10 61 EB 06 4E 6F 5B 30 5D 00       
[1210]    29BF: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 29,23,0000_0111b," || "
                07 B9 04 00 B2 1D B6 17 BD DB 29 CD 
                10 61 EB 05 20 7C 7C 20 00          
[1211]    29E0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 33,23,0000_1011b,"Yes[1]"
                0B B9 06 00 B2 21 B6 17 BD FC 29 CD 
                10 61 EB 07 59 65 73 5B 31 5D 00    
[1212]    2A03: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 40,23,0000_0111b ," : "
                07 B9 03 00 B2 28 B6 17 BD 1F 2A CD 
                10 61 EB 04 20 3A 20 00             
[1213]        :                                       
[1214]    2A23: E8 E7 1D                              call scan_num  ;Input  0 or 1 onl
[1215]    2A26: 89 0E 1A 01                           mov ui, cx    ; store to UI
[1216]        :                                       
[1217]    2A2A: A1 1A 01                              mov ax, ui    ; Store to ax
[1218]    2A2D: BB 00 00                              mov bx, 0     ; set bx to 0
[1219]    2A30: 3B C3                                 cmp ax, bx    ; then compare
[1220]    2A32: 74 58                                 je A_NO ; Answer_NO
[1221]        :                                       
[1222]    2A34: BB 01 00                              mov bx, 1     ; Same as to A_No
[1223]    2A37: 3B C3                                 cmp ax, bx
[1224]    2A39: 75 03 E9 13 01                        je A_YES ; Answer_YES
[1225]        :                                       
[1226]        :                                       ;If invalid input
[1227]    2A3E: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 45, 23, 0000_1100b, "INVALID INPUT"
                0C B9 0D 00 B2 2D B6 17 BD 5A 2A CD 
                10 61 EB 0E 49 4E 56 41 4C 49 44 20 
                49 4E 50 55 54 00                   
[1228]    2A68: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 41,23,0000_0111b,"    ";;;
                07 B9 04 00 B2 29 B6 17 BD 84 2A CD 
                10 61 EB 05 20 20 20 20 00          
[1229]    2A89: E9 11 FF                              JMP YN_INPUT ; Yes No Input
[1230]        :                                       
[1231]        :                                       
[1232]    2A8C:                                       A_NO: ; Answer is NO
[1233]        :                                       
[1234]        :                                       ;Delete the current message
[1235]    2A8C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"                                     ";;;
                07 B9 25 00 B2 18 B6 16 BD A8 2A CD 
                10 61 EB 26 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 00                   
[1236]    2ACE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 23,23,0000_0111b,"                      ";;;
                07 B9 16 00 B2 17 B6 17 BD EA 2A CD 
                10 61 EB 17 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 00                            
[1237]    2B01: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 46,23,0000_0111b,"               ";;;
                07 B9 0F 00 B2 2E B6 17 BD 1D 2B CD 
                10 61 EB 10 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 00             
[1238]    2B2D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 41,23,0000_0111b,"    ";;;
                07 B9 04 00 B2 29 B6 17 BD 49 2B CD 
                10 61 EB 05 20 20 20 20 00          
[1239]    2B4E: E9 A9 FC                              jmp INPUT_UMI
[1240]        :                                       
[1241]    2B51:                                       A_YES:
[1242]    2B51: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"                                    ";;;
                07 B9 24 00 B2 18 B6 16 BD 6D 2B CD 
                10 61 EB 25 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 00                      
[1243]    2B92: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 23,23,0000_0111b,"                        ";;;
                07 B9 18 00 B2 17 B6 17 BD AE 2B CD 
                10 61 EB 19 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 00                      
[1244]    2BC7: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 46,23,0000_0111b,"                 ";;;
                07 B9 11 00 B2 2E B6 17 BD E3 2B CD 
                10 61 EB 12 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 00       
[1245]    2BF5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 41,23,0000_0111b,"    ";;;
                07 B9 04 00 B2 29 B6 17 BD 11 2C CD 
                10 61 EB 05 20 20 20 20 00          
[1246]    2C16: 89 36 13 01                           mov mc_index_tmp, si
[1247]    2C1A: C7 84 CB 01 00 00                     mov tn[si], 0  ; Set to zero to disable the already chosen.
[1248]        :                                       
[1249]        :                                       ; CODE PA NG PALIT KULAY NG BRIEFCASE !!!!!
[1250]        :                                       ;;
[1251]        :                                       ;
[1252]    2C20: C7 06 17 01 00 00                     mov mc_temp, 0
[1253]    2C26: A1 11 01                              mov ax, mc
[1254]    2C29: E9 27 05                              JMP COLOR_THE_MAIN_CASE
[1255]    2C2C:                                       GO_BACK_TO_TOP:
[1256]    2C2C: B0 4A                                 mov al, 0100_1010b
[1257]    2C2E: A2 19 01                              mov case_color, al
[1258]    2C31: C7 06 17 01 01 00                     mov mc_temp, 1
[1259]        :                                       
[1260]    2C37: C7 06 79 01 01 00                     mov ml[0], 1
[1261]    2C3D: C7 06 7B 01 05 00                     mov ml[2], 5
[1262]    2C43: C7 06 7D 01 0A 00                     mov ml[4], 10
[1263]    2C49: C7 06 7F 01 0F 00                     mov ml[6], 15
[1264]    2C4F: C7 06 81 01 14 00                     mov ml[8], 20
[1265]    2C55: C7 06 83 01 19 00                     mov ml[10], 25
[1266]    2C5B: C7 06 85 01 1E 00                     mov ml[12], 30
[1267]    2C61: C7 06 87 01 23 00                     mov ml[14], 35
[1268]    2C67: C7 06 89 01 32 00                     mov ml[16], 50
[1269]    2C6D: C7 06 8B 01 4B 00                     mov ml[18], 75
[1270]    2C73: C7 06 8D 01 64 00                     mov ml[20], 100
[1271]    2C79: C7 06 8F 01 96 00                     mov ml[22], 150
[1272]    2C7F: C7 06 91 01 C8 00                     mov ml[24], 200
[1273]    2C85: C7 06 93 01 FA 00                     mov ml[26], 250
[1274]    2C8B: C7 06 95 01 2C 01                     mov ml[28], 300
[1275]    2C91: C7 06 97 01 5E 01                     mov ml[30], 350
[1276]    2C97: C7 06 99 01 90 01                     mov ml[32], 400
[1277]    2C9D: C7 06 9B 01 C2 01                     mov ml[34], 450
[1278]    2CA3: C7 06 9D 01 F4 01                     mov ml[36], 500
[1279]    2CA9: C7 06 9F 01 E8 03                     mov ml[38], 1000
[1280]        :                                       
[1281]    2CAF: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 75,10,0010_1011b, "1"
                2B B9 01 00 B2 4B B6 0A BD CB 2C CD 
                10 61 EB 02 31 00                   
[1282]    2CCD: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 75,20,0010_1011b, "5"
                2B B9 01 00 B2 4B B6 14 BD E9 2C CD 
                10 61 EB 02 35 00                   
[1283]        :                                       
[1284]    2CEB: C7 06 1E 01 01 00                     mov r, 1
[1285]    2CF1: C7 06 20 01 00 00                     mov p, 0
[1286]    2CF7: BE 00 00                              mov si, 0
[1287]    2CFA: B9 14 00                              mov cx, 20 ;Set number of loop
[1288]    2CFD: C6 06 22 01 00                        mov sc, 0
[1289]    2D02:                                       LOOP_ROUND:
[1290]    2D02: 89 0E 15 01                           mov mc_money_tmp, cx
[1291]    2D06: 89 0E 1C 01                           mov cxlooptemp, cx
[1292]        :                                       
[1293]    2D0A:                                       INPUT_NUMBER_CASE: ;UNC                                 ;
[1294]    2D0A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"Choose briefcase number : "
                07 B9 1A 00 B2 18 B6 16 BD 26 2D CD 
                10 61 EB 1B 43 68 6F 6F 73 65 20 62 
                72 69 65 66 63 61 73 65 20 6E 75 6D 
                62 65 72 20 3A 20 00                
[1295]        :                                       
[1296]    2D41: 51                                    push cx ; push cx avoid replacing the value of cx number loop
[1297]    2D42: E8 C8 1A                              call scan_num
[1298]    2D45: 8B C1                                 mov ax, cx
[1299]    2D47: 89 0E 1A 01                           mov ui, cx
[1300]    2D4B: 59                                    pop cx  ;pop
[1301]        :                                       
[1302]        :                                       ;;;;;;;;;;;;;;;;;;;;
[1303]    2D4C: 51                                    push cx
[1304]    2D4D: BE 00 00                              mov si, 0
[1305]    2D50: B9 14 00                              mov cx, 20
[1306]    2D53:                                       CHK_INPUT:
[1307]        :                                       ;add sc, 1
[1308]    2D53: A1 1A 01                              mov ax, ui
[1309]    2D56: 8B 9C CB 01                           mov bx,tn[si]
[1310]    2D5A: 3B C3                                 cmp ax, bx
[1311]    2D5C: 74 62                                 JE EXIT_CHK_INPUT
[1312]    2D5E: 83 C6 02                              add si, 2
[1313]    2D61: E2 F0                                 loop CHK_INPUT
[1314]        :                                       
[1315]    2D63:                                       INVALID_CHK_INPUT:
[1316]        :                                       ;If invalid input
[1317]    2D63: 59                                    pop cx ; second cx
[1318]    2D64: C6 06 22 01 00                        mov sc, 0
[1319]    2D69: BE 00 00                              mov si, 0
[1320]    2D6C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 60, 22, 0000_1100b, "INVALID INPUT"
                0C B9 0D 00 B2 3C B6 16 BD 88 2D CD 
                10 61 EB 0E 49 4E 56 41 4C 49 44 20 
                49 4E 50 55 54 00                   
[1321]    2D96: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 50,22,0000_0111b,"          "
                07 B9 0A 00 B2 32 B6 16 BD B2 2D CD 
                10 61 EB 0B 20 20 20 20 20 20 20 20 
                20 20 00                            
[1322]        :                                       
[1323]    2DBD: E9 4A FF                              JMP INPUT_NUMBER_CASE
[1324]        :                                       
[1325]        :                                       ;If input is valid proceed here.
[1326]    2DC0:                                       EXIT_CHK_INPUT:
[1327]    2DC0: A1 1A 01                              mov ax, ui
[1328]    2DC3: BB 00 00                              mov bx, 0
[1329]    2DC6: 3B C3                                 cmp ax, bx
[1330]    2DC8: 74 99                                 je INVALID_CHK_INPUT
[1331]    2DCA: 59                                    pop cx;2nd cx
[1332]        :                                       
[1333]    2DCB: 51                                    push cx
[1334]    2DCC: 8B 8C 25 01                           mov cx, cn[si]
[1335]    2DD0: 8B C1                                 mov ax, cx
[1336]    2DD2: 89 0E 05 01                           mov temp, cx
[1337]    2DD6: 59                                    pop cx
[1338]        :                                       
[1339]        :                                       ;Delete the current message
[1340]    2DD7: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"                                      ";;;
                07 B9 26 00 B2 18 B6 16 BD F3 2D CD 
                10 61 EB 27 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 00                
[1341]    2E1A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 60, 22, 0000_0111b,"             ";;;
                07 B9 0D 00 B2 3C B6 16 BD 36 2E CD 
                10 61 EB 0E 20 20 20 20 20 20 20 20 
                20 20 20 20 20 00                   
[1342]        :                                       
[1343]        :                                       ;Display Input Confirmation
[1344]    2E44: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"Are you sure you want "
                07 B9 16 00 B2 18 B6 16 BD 60 2E CD 
                10 61 EB 17 41 72 65 20 79 6F 75 20 
                73 75 72 65 20 79 6F 75 20 77 61 6E 
                74 20 00                            
[1345]    2E77: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 46,22,0000_1010b,"Briefcase    "
                0A B9 0D 00 B2 2E B6 16 BD 93 2E CD 
                10 61 EB 0E 42 72 69 65 66 63 61 73 
                65 20 20 20 20 00                   
[1346]    2EA1: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 56,22,0000_1010b," "
                0A B9 01 00 B2 38 B6 16 BD BD 2E CD 
                10 61 EB 02 20 00                   
[1347]    2EBF: A1 1A 01                              mov ax, ui ; Get the default case or chosen case and display
[1348]    2EC2: E8 09 1A                              call print_num
[1349]        :                                       
[1350]    2EC5:                                       YN_CHK_INPUT: ;If invalid input jump here.
[1351]    2EC5: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_1100b,"No[0]"
                0C B9 05 00 B2 18 B6 17 BD E1 2E CD 
                10 61 EB 06 4E 6F 5B 30 5D 00       
[1352]    2EE7: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 29,23,0000_0111b," || "
                07 B9 04 00 B2 1D B6 17 BD 03 2F CD 
                10 61 EB 05 20 7C 7C 20 00          
[1353]    2F08: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 33,23,0000_1011b,"Yes[1]"
                0B B9 06 00 B2 21 B6 17 BD 24 2F CD 
                10 61 EB 07 59 65 73 5B 31 5D 00    
[1354]    2F2B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 40,23,0000_0111b ," : "
                07 B9 03 00 B2 28 B6 17 BD 47 2F CD 
                10 61 EB 04 20 3A 20 00             
[1355]        :                                       
[1356]    2F4B: 51                                    push cx
[1357]    2F4C: E8 BE 18                              call scan_num  ;Input  0 or 1 onl
[1358]    2F4F: 89 0E 23 01                           mov yn, cx    ; store to UI
[1359]    2F53: 59                                    pop cx ; second cx
[1360]        :                                       
[1361]    2F54: A1 23 01                              mov ax, yn    ; Store to ax
[1362]    2F57: BB 00 00                              mov bx, 0     ; set bx to 0
[1363]    2F5A: 3B C3                                 cmp ax, bx    ; then compare
[1364]    2F5C: 74 58                                 je A_CHK_NO ; Answer_NO
[1365]        :                                       
[1366]    2F5E: BB 01 00                              mov bx, 1     ; Same as to A_No
[1367]    2F61: 3B C3                                 cmp ax, bx
[1368]    2F63: 75 03 E9 17 01                        je A_CHK_YES ; Answer_YES
[1369]        :                                       
[1370]        :                                       ;If invalid input
[1371]    2F68: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 45, 23, 0000_1100b, "INVALID INPUT"
                0C B9 0D 00 B2 2D B6 17 BD 84 2F CD 
                10 61 EB 0E 49 4E 56 41 4C 49 44 20 
                49 4E 50 55 54 00                   
[1372]    2F92: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 42,23,0000_0111b,"    ";;;
                07 B9 04 00 B2 2A B6 17 BD AE 2F CD 
                10 61 EB 05 20 20 20 20 00          
[1373]    2FB3: E9 0F FF                              JMP YN_CHK_INPUT ; Yes No Input
[1374]        :                                       
[1375]        :                                       
[1376]    2FB6:                                       A_CHK_NO: ; Answer is NO
[1377]        :                                       
[1378]        :                                       ;Delete the current message
[1379]    2FB6: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"                                     ";;;
                07 B9 25 00 B2 18 B6 16 BD D2 2F CD 
                10 61 EB 26 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 00                   
[1380]    2FF8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 23,23,0000_0111b,"                     ";;;
                07 B9 15 00 B2 17 B6 17 BD 14 30 CD 
                10 61 EB 16 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 00                               
[1381]    302A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 45,23,0000_0111b,"              ";;;
                07 B9 0E 00 B2 2D B6 17 BD 46 30 CD 
                10 61 EB 0F 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 00                
[1382]    3055: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 42,23,0000_0111b,"  ";;;
                07 B9 02 00 B2 2A B6 17 BD 71 30 CD 
                10 61 EB 03 20 20 00                
[1383]    3074: C6 06 22 01 00                        mov sc, 0
[1384]    3079: BE 00 00                              mov si, 0
[1385]        :                                       
[1386]    307C: E9 8B FC                              jmp INPUT_NUMBER_CASE
[1387]        :                                       
[1388]    307F:                                       A_CHK_YES:
[1389]    307F: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,"                                    ";;;
                07 B9 24 00 B2 18 B6 16 BD 9B 30 CD 
                10 61 EB 25 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 00                      
[1390]    30C0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 23,23,0000_0111b,"                       ";;;
                07 B9 17 00 B2 17 B6 17 BD DC 30 CD 
                10 61 EB 18 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 00                         
[1391]    30F4: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 45,23,0000_0111b,"                ";;;
                07 B9 10 00 B2 2D B6 17 BD 10 31 CD 
                10 61 EB 11 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 00          
[1392]    3121: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 42,23,0000_0111b,"  ";;;
                07 B9 02 00 B2 2A B6 17 BD 3D 31 CD 
                10 61 EB 03 20 20 00                
[1393]    3140: 51                                    push cx
[1394]    3141: 8B 84 25 01                           mov ax, cn[si]
[1395]        :                                       ;mov a1000a, ax ;;;;;;
[1396]    3145: 8B 0E 0D 01                           mov cx, tm
[1397]    3149: 2B C8                                 sub cx, ax
[1398]    314B: 89 0E 0D 01                           mov tm, cx
[1399]    314F: 59                                    pop cx
[1400]        :                                       
[1401]    3150: A1 1A 01                              mov ax, ui
[1402]    3153:                                       COLOR_THE_MAIN_CASE:
[1403]    3153: C6 06 04 01 01                        mov y, 1
[1404]    3158: BB 01 00                              mov bx, 1
[1405]    315B: 3B C3                                 cmp ax, bx
[1406]    315D: 75 03 E9 A0 00                        JE pc_one
[1407]        :                                       
[1408]    3162: BB 02 00                              mov bx, 2
[1409]    3165: 3B C3                                 cmp ax, bx
[1410]    3167: 75 03 E9 9D 00                        JE pc_two
[1411]        :                                       
[1412]    316C: BB 03 00                              mov bx, 3
[1413]    316F: 3B C3                                 cmp ax, bx
[1414]    3171: 75 03 E9 9A 00                        JE pc_three
[1415]        :                                       
[1416]    3176: BB 04 00                              mov bx, 4
[1417]    3179: 3B C3                                 cmp ax, bx
[1418]    317B: 75 03 E9 97 00                        JE pc_four
[1419]        :                                       
[1420]    3180: BB 05 00                              mov bx, 5
[1421]    3183: 3B C3                                 cmp ax, bx
[1422]    3185: 75 03 E9 94 00                        JE pc_five
[1423]        :                                       
[1424]    318A: C6 06 04 01 06                        mov y, 6
[1425]        :                                       
[1426]    318F: BB 06 00                              mov bx, 6
[1427]    3192: 3B C3                                 cmp ax, bx
[1428]    3194: 74 6C                                 JE pc_one
[1429]        :                                       
[1430]    3196: BB 07 00                              mov bx, 7
[1431]    3199: 3B C3                                 cmp ax, bx
[1432]    319B: 74 6C                                 JE pc_two
[1433]        :                                       
[1434]    319D: BB 08 00                              mov bx, 8
[1435]    31A0: 3B C3                                 cmp ax, bx
[1436]    31A2: 74 6C                                 JE pc_three
[1437]        :                                       
[1438]    31A4: BB 09 00                              mov bx, 9
[1439]    31A7: 3B C3                                 cmp ax, bx
[1440]    31A9: 74 6C                                 JE pc_four
[1441]        :                                       
[1442]    31AB: BB 0A 00                              mov bx, 10
[1443]    31AE: 3B C3                                 cmp ax, bx
[1444]    31B0: 74 6C                                 JE pc_five
[1445]        :                                       
[1446]    31B2: C6 06 04 01 0B                        mov y,11
[1447]        :                                       
[1448]    31B7: BB 0B 00                              mov bx, 11
[1449]    31BA: 3B C3                                 cmp ax, bx
[1450]    31BC: 74 44                                 JE pc_one
[1451]        :                                       
[1452]    31BE: BB 0C 00                              mov bx, 12
[1453]    31C1: 3B C3                                 cmp ax, bx
[1454]    31C3: 74 44                                 JE pc_two
[1455]        :                                       
[1456]    31C5: BB 0D 00                              mov bx, 13
[1457]    31C8: 3B C3                                 cmp ax, bx
[1458]    31CA: 74 44                                 JE pc_three
[1459]        :                                       
[1460]    31CC: BB 0E 00                              mov bx, 14
[1461]    31CF: 3B C3                                 cmp ax, bx
[1462]    31D1: 74 44                                 JE pc_four
[1463]        :                                       
[1464]    31D3: BB 0F 00                              mov bx, 15
[1465]    31D6: 3B C3                                 cmp ax, bx
[1466]    31D8: 74 44                                 JE pc_five
[1467]        :                                       
[1468]    31DA: C6 06 04 01 10                        mov y, 16
[1469]        :                                       
[1470]    31DF: BB 10 00                              mov bx, 16
[1471]    31E2: 3B C3                                 cmp ax, bx
[1472]    31E4: 74 1C                                 JE pc_one
[1473]        :                                       
[1474]    31E6: BB 11 00                              mov bx, 17
[1475]    31E9: 3B C3                                 cmp ax, bx
[1476]    31EB: 74 1C                                 JE pc_two
[1477]        :                                       
[1478]    31ED: BB 12 00                              mov bx, 18
[1479]    31F0: 3B C3                                 cmp ax, bx
[1480]    31F2: 74 1C                                 JE pc_three
[1481]        :                                       
[1482]    31F4: BB 13 00                              mov bx, 19
[1483]    31F7: 3B C3                                 cmp ax, bx
[1484]    31F9: 74 1C                                 JE pc_four
[1485]        :                                       
[1486]    31FB: BB 14 00                              mov bx, 20
[1487]    31FE: 3B C3                                 cmp ax, bx
[1488]    3200: 74 1C                                 JE pc_five
[1489]        :                                       
[1490]        :                                       
[1491]    3202:                                       pc_one:
[1492]    3202: C6 06 03 01 19                        mov x, 25
[1493]    3207: EB 1C                                 jmp PC_PRINT
[1494]    3209:                                       pc_two:
[1495]    3209: C6 06 03 01 23                        mov x, 35
[1496]    320E: EB 15                                 jmp PC_PRINT
[1497]    3210:                                       pc_three:
[1498]    3210: C6 06 03 01 2D                        mov x, 45
[1499]    3215: EB 0E                                 jmp PC_PRINT
[1500]    3217:                                       pc_four:
[1501]    3217: C6 06 03 01 37                        mov x, 55
[1502]    321C: EB 07                                 jmp PC_PRINT
[1503]    321E:                                       pc_five:
[1504]    321E: C6 06 03 01 41                        mov x, 65
[1505]    3223: EB 00                                 jmp PC_PRINT
[1506]        :                                       
[1507]    3225:                                       PC_PRINT:
[1508]    3225: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color,    "##"
                1E 19 01 B9 02 00 8A 16 03 01 8A 36 
                04 01 BD 47 32 CD 10 61 EB 03 23 23 
                00                                  
[1509]    324A: 80 2E 03 01 03                        sub x, 3
[1510]    324F: 80 06 04 01 01                        add y, 1
[1511]    3254: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "########"
                1E 19 01 B9 08 00 8A 16 03 01 8A 36 
                04 01 BD 76 32 CD 10 61 EB 09 23 23 
                23 23 23 23 23 23 00                
[1512]    327F: 80 06 04 01 01                        add y, 1
[1513]    3284: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "########"
                1E 19 01 B9 08 00 8A 16 03 01 8A 36 
                04 01 BD A6 32 CD 10 61 EB 09 23 23 
                23 23 23 23 23 23 00                
[1514]    32AF: 80 06 04 01 01                        add y, 1
[1515]    32B4: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "########"
                1E 19 01 B9 08 00 8A 16 03 01 8A 36 
                04 01 BD D6 32 CD 10 61 EB 09 23 23 
                23 23 23 23 23 23 00                
[1516]    32DF: 80 2E 04 01 01                        sub y, 1
[1517]        :                                       
[1518]        :                                       ;FOR MAIN
[1519]    32E4: A1 17 01                              mov ax, mc_temp
[1520]    32E7: BB 01 00                              mov bx, 1
[1521]    32EA: 3B C3                                 cmp ax, bx
[1522]    32EC: 75 03 E9 9B 03                        je SKIP_THIS_REG
[1523]    32F1: A1 11 01                              mov ax, mc
[1524]    32F4: BB 01 00                              mov bx, 1
[1525]    32F7: 3B C3                                 cmp ax, bx
[1526]    32F9: 75 03 E9 BE 00                        je ONE_MC
[1527]        :                                       
[1528]    32FE: BB 02 00                              mov bx, 2
[1529]    3301: 3B C3                                 cmp ax, bx
[1530]    3303: 75 03 E9 D8 00                        je TWO_MC
[1531]        :                                       
[1532]    3308: BB 03 00                              mov bx, 3
[1533]    330B: 3B C3                                 cmp ax, bx
[1534]    330D: 75 03 E9 F2 00                        je THREE_MC
[1535]        :                                       
[1536]    3312: BB 04 00                              mov bx, 4
[1537]    3315: 3B C3                                 cmp ax, bx
[1538]    3317: 75 03 E9 0C 01                        je FOUR_MC
[1539]        :                                       
[1540]    331C: BB 05 00                              mov bx, 5
[1541]    331F: 3B C3                                 cmp ax, bx
[1542]    3321: 75 03 E9 26 01                        je FIVE_MC
[1543]        :                                       
[1544]    3326: BB 06 00                              mov bx, 6
[1545]    3329: 3B C3                                 cmp ax, bx
[1546]    332B: 75 03 E9 40 01                        je SIX_MC
[1547]        :                                       
[1548]    3330: BB 07 00                              mov bx, 7
[1549]    3333: 3B C3                                 cmp ax, bx
[1550]    3335: 75 03 E9 5A 01                        je SEVEN_MC
[1551]        :                                       
[1552]    333A: BB 08 00                              mov bx, 8
[1553]    333D: 3B C3                                 cmp ax, bx
[1554]    333F: 75 03 E9 74 01                        je EIGHT_MC
[1555]        :                                       
[1556]    3344: BB 09 00                              mov bx, 9
[1557]    3347: 3B C3                                 cmp ax, bx
[1558]    3349: 75 03 E9 8E 01                        je NINE_MC
[1559]        :                                       
[1560]    334E: BB 0A 00                              mov bx, 10
[1561]    3351: 3B C3                                 cmp ax, bx
[1562]    3353: 75 03 E9 A8 01                        je TEN_MC
[1563]        :                                       
[1564]    3358: BB 0B 00                              mov bx, 11
[1565]    335B: 3B C3                                 cmp ax, bx
[1566]    335D: 75 03 E9 C2 01                        je ELEVEN_MC
[1567]        :                                       
[1568]    3362: BB 0C 00                              mov bx, 12
[1569]    3365: 3B C3                                 cmp ax, bx
[1570]    3367: 75 03 E9 DC 01                        je TWELVE_MC
[1571]        :                                       
[1572]    336C: BB 0D 00                              mov bx, 13
[1573]    336F: 3B C3                                 cmp ax, bx
[1574]    3371: 75 03 E9 F6 01                        je THIRTEEN_MC
[1575]        :                                       
[1576]    3376: BB 0E 00                              mov bx, 14
[1577]    3379: 3B C3                                 cmp ax, bx
[1578]    337B: 75 03 E9 10 02                        je FOURTEEN_MC
[1579]        :                                       
[1580]    3380: BB 0F 00                              mov bx, 15
[1581]    3383: 3B C3                                 cmp ax, bx
[1582]    3385: 75 03 E9 2A 02                        je FIFTEEN_MC
[1583]        :                                       
[1584]    338A: BB 10 00                              mov bx, 16
[1585]    338D: 3B C3                                 cmp ax, bx
[1586]    338F: 75 03 E9 44 02                        je SIXTEEN_MC
[1587]        :                                       
[1588]    3394: BB 11 00                              mov bx, 17
[1589]    3397: 3B C3                                 cmp ax, bx
[1590]    3399: 75 03 E9 5E 02                        je SEVENTEEN_MC
[1591]        :                                       
[1592]    339E: BB 12 00                              mov bx, 18
[1593]    33A1: 3B C3                                 cmp ax, bx
[1594]    33A3: 75 03 E9 78 02                        je EIGHTEEN_MC
[1595]        :                                       
[1596]    33A8: BB 13 00                              mov bx, 19
[1597]    33AB: 3B C3                                 cmp ax, bx
[1598]    33AD: 75 03 E9 92 02                        je NINETEEN_MC
[1599]        :                                       
[1600]    33B2: BB 14 00                              mov bx, 20
[1601]    33B5: 3B C3                                 cmp ax, bx
[1602]    33B7: 75 03 E9 AC 02                        je TWENTY_MC
[1603]        :                                       
[1604]    33BC:                                       ONE_MC:
[1605]    33BC: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 25,3,case_color, "01"
                1E 19 01 B9 02 00 B2 19 B6 03 BD DA 
                33 CD 10 61 EB 03 30 31 00          
[1606]    33DD: E9 4C F8                              JMP GO_BACK_TO_TOP
[1607]    33E0:                                       TWO_MC:
[1608]    33E0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 35,3,case_color, "02"
                1E 19 01 B9 02 00 B2 23 B6 03 BD FE 
                33 CD 10 61 EB 03 30 32 00          
[1609]    3401: E9 28 F8                              JMP GO_BACK_TO_TOP
[1610]    3404:                                       THREE_MC:
[1611]    3404: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 45,3,case_color, "03"
                1E 19 01 B9 02 00 B2 2D B6 03 BD 22 
                34 CD 10 61 EB 03 30 33 00          
[1612]    3425: E9 04 F8                              JMP GO_BACK_TO_TOP
[1613]    3428:                                       FOUR_MC:
[1614]    3428: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 55,3,case_color, "04"
                1E 19 01 B9 02 00 B2 37 B6 03 BD 46 
                34 CD 10 61 EB 03 30 34 00          
[1615]    3449: E9 E0 F7                              JMP GO_BACK_TO_TOP
[1616]    344C:                                       FIVE_MC:
[1617]    344C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 65,3,case_color, "05"
                1E 19 01 B9 02 00 B2 41 B6 03 BD 6A 
                34 CD 10 61 EB 03 30 35 00          
[1618]    346D: E9 BC F7                              JMP GO_BACK_TO_TOP
[1619]    3470:                                       SIX_MC:
[1620]    3470: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 25,8,case_color, "06"
                1E 19 01 B9 02 00 B2 19 B6 08 BD 8E 
                34 CD 10 61 EB 03 30 36 00          
[1621]    3491: E9 98 F7                              JMP GO_BACK_TO_TOP
[1622]    3494:                                       SEVEN_MC:
[1623]    3494: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 35,8,case_color, "07"
                1E 19 01 B9 02 00 B2 23 B6 08 BD B2 
                34 CD 10 61 EB 03 30 37 00          
[1624]    34B5: E9 74 F7                              JMP GO_BACK_TO_TOP
[1625]    34B8:                                       EIGHT_MC:
[1626]    34B8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 45,8,case_color, "08"
                1E 19 01 B9 02 00 B2 2D B6 08 BD D6 
                34 CD 10 61 EB 03 30 38 00          
[1627]    34D9: E9 50 F7                              JMP GO_BACK_TO_TOP
[1628]    34DC:                                       NINE_MC:
[1629]    34DC: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 55,8,case_color, "09"
                1E 19 01 B9 02 00 B2 37 B6 08 BD FA 
                34 CD 10 61 EB 03 30 39 00          
[1630]    34FD: E9 2C F7                              JMP GO_BACK_TO_TOP
[1631]    3500:                                       TEN_MC:
[1632]    3500: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 65,8,case_color, "10"
                1E 19 01 B9 02 00 B2 41 B6 08 BD 1E 
                35 CD 10 61 EB 03 31 30 00          
[1633]    3521: E9 08 F7                              JMP GO_BACK_TO_TOP
[1634]    3524:                                       ELEVEN_MC:
[1635]    3524: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 25,13,case_color, "11"
                1E 19 01 B9 02 00 B2 19 B6 0D BD 42 
                35 CD 10 61 EB 03 31 31 00          
[1636]    3545: E9 E4 F6                              JMP GO_BACK_TO_TOP
[1637]    3548:                                       TWELVE_MC:
[1638]    3548: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 35,13,case_color, "12"
                1E 19 01 B9 02 00 B2 23 B6 0D BD 66 
                35 CD 10 61 EB 03 31 32 00          
[1639]    3569: E9 C0 F6                              JMP GO_BACK_TO_TOP
[1640]    356C:                                       THIRTEEN_MC:
[1641]    356C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 45,13,case_color, "13"
                1E 19 01 B9 02 00 B2 2D B6 0D BD 8A 
                35 CD 10 61 EB 03 31 33 00          
[1642]    358D: E9 9C F6                              JMP GO_BACK_TO_TOP
[1643]    3590:                                       FOURTEEN_MC:
[1644]    3590: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 55,13,case_color, "14"
                1E 19 01 B9 02 00 B2 37 B6 0D BD AE 
                35 CD 10 61 EB 03 31 34 00          
[1645]    35B1: E9 78 F6                              JMP GO_BACK_TO_TOP
[1646]    35B4:                                       FIFTEEN_MC:
[1647]    35B4: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 65,13,case_color, "15"
                1E 19 01 B9 02 00 B2 41 B6 0D BD D2 
                35 CD 10 61 EB 03 31 35 00          
[1648]    35D5: E9 54 F6                              JMP GO_BACK_TO_TOP
[1649]    35D8:                                       SIXTEEN_MC:
[1650]    35D8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 25,18,case_color, "16"
                1E 19 01 B9 02 00 B2 19 B6 12 BD F6 
                35 CD 10 61 EB 03 31 36 00          
[1651]    35F9: E9 30 F6                              JMP GO_BACK_TO_TOP
[1652]    35FC:                                       SEVENTEEN_MC:
[1653]    35FC: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 35,18,case_color, "17"
                1E 19 01 B9 02 00 B2 23 B6 12 BD 1A 
                36 CD 10 61 EB 03 31 37 00          
[1654]    361D: E9 0C F6                              JMP GO_BACK_TO_TOP
[1655]    3620:                                       EIGHTEEN_MC:
[1656]    3620: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 45,18,case_color, "18"
                1E 19 01 B9 02 00 B2 2D B6 12 BD 3E 
                36 CD 10 61 EB 03 31 38 00          
[1657]    3641: E9 E8 F5                              JMP GO_BACK_TO_TOP
[1658]    3644:                                       NINETEEN_MC:
[1659]    3644: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 55,18,case_color, "19"
                1E 19 01 B9 02 00 B2 37 B6 12 BD 62 
                36 CD 10 61 EB 03 31 39 00          
[1660]    3665: E9 C4 F5                              JMP GO_BACK_TO_TOP
[1661]    3668:                                       TWENTY_MC:
[1662]    3668: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print 65,18,case_color, "20"
                1E 19 01 B9 02 00 B2 41 B6 12 BD 86 
                36 CD 10 61 EB 03 32 30 00          
[1663]    3689: E9 A0 F5                              JMP GO_BACK_TO_TOP
[1664]        :                                       
[1665]        :                                       ;FOR MAIN COLORING END
[1666]    368C:                                       SKIP_THIS_REG:
[1667]    368C: 8B 84 25 01                           mov ax, cn[si]
[1668]        :                                       
[1669]    3690: BB 01 00                              mov bx, 1
[1670]    3693: 3B C3                                 cmp ax, bx
[1671]    3695: 75 03 E9 BE 00                        je pc_single
[1672]        :                                       
[1673]    369A: BB 05 00                              mov bx, 5
[1674]    369D: 3B C3                                 cmp ax, bx
[1675]    369F: 75 03 E9 B4 00                        je pc_single
[1676]        :                                       
[1677]    36A4: BB 0A 00                              mov bx, 10
[1678]    36A7: 3B C3                                 cmp ax, bx
[1679]    36A9: 75 03 E9 07 01                        je pc_double
[1680]        :                                       
[1681]    36AE: BB 0F 00                              mov bx, 15
[1682]    36B1: 3B C3                                 cmp ax, bx
[1683]    36B3: 75 03 E9 FD 00                        je pc_double
[1684]        :                                       
[1685]    36B8: BB 14 00                              mov bx, 20
[1686]    36BB: 3B C3                                 cmp ax, bx
[1687]    36BD: 75 03 E9 F3 00                        je pc_double
[1688]        :                                       
[1689]    36C2: BB 19 00                              mov bx, 25
[1690]    36C5: 3B C3                                 cmp ax, bx
[1691]    36C7: 75 03 E9 E9 00                        je pc_double
[1692]        :                                       
[1693]    36CC: BB 1E 00                              mov bx, 30
[1694]    36CF: 3B C3                                 cmp ax, bx
[1695]    36D1: 75 03 E9 DF 00                        je pc_double
[1696]        :                                       
[1697]    36D6: BB 23 00                              mov bx, 35
[1698]    36D9: 3B C3                                 cmp ax, bx
[1699]    36DB: 75 03 E9 D5 00                        je pc_double
[1700]        :                                       
[1701]    36E0: BB 32 00                              mov bx, 50
[1702]    36E3: 3B C3                                 cmp ax, bx
[1703]    36E5: 75 03 E9 CB 00                        je pc_double
[1704]        :                                       
[1705]    36EA: BB 4B 00                              mov bx, 75
[1706]    36ED: 3B C3                                 cmp ax, bx
[1707]    36EF: 75 03 E9 C1 00                        je pc_double
[1708]        :                                       
[1709]    36F4: BB 64 00                              mov bx, 100
[1710]    36F7: 3B C3                                 cmp ax, bx
[1711]    36F9: 75 03 E9 12 01                        je pc_triple
[1712]        :                                       
[1713]    36FE: BB 96 00                              mov bx, 150
[1714]    3701: 3B C3                                 cmp ax, bx
[1715]    3703: 75 03 E9 08 01                        je pc_triple
[1716]        :                                       
[1717]    3708: BB C8 00                              mov bx, 200
[1718]    370B: 3B C3                                 cmp ax, bx
[1719]    370D: 75 03 E9 FE 00                        je pc_triple
[1720]        :                                       
[1721]    3712: BB FA 00                              mov bx, 250
[1722]    3715: 3B C3                                 cmp ax, bx
[1723]    3717: 75 03 E9 F4 00                        je pc_triple
[1724]        :                                       
[1725]    371C: BB 2C 01                              mov bx, 300
[1726]    371F: 3B C3                                 cmp ax, bx
[1727]    3721: 75 03 E9 EA 00                        je pc_triple
[1728]        :                                       
[1729]    3726: BB 5E 01                              mov bx, 350
[1730]    3729: 3B C3                                 cmp ax, bx
[1731]    372B: 75 03 E9 E0 00                        je pc_triple
[1732]        :                                       
[1733]    3730: BB 90 01                              mov bx, 400
[1734]    3733: 3B C3                                 cmp ax, bx
[1735]    3735: 75 03 E9 D6 00                        je pc_triple
[1736]        :                                       
[1737]    373A: BB C2 01                              mov bx, 450
[1738]    373D: 3B C3                                 cmp ax, bx
[1739]    373F: 75 03 E9 CC 00                        je pc_triple
[1740]        :                                       
[1741]    3744: BB F4 01                              mov bx, 500
[1742]    3747: 3B C3                                 cmp ax, bx
[1743]    3749: 75 03 E9 C2 00                        je pc_triple
[1744]        :                                       
[1745]    374E: BB E8 03                              mov bx, 1000
[1746]    3751: 3B C3                                 cmp ax, bx
[1747]    3753: 75 03 E9 EA 00                        je pc_quad
[1748]        :                                       
[1749]        :                                       
[1750]    3758:                                       pc_single:
[1751]    3758: 80 06 03 01 02                        add x, 2
[1752]    375D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "-"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD 7F 37 CD 10 61 EB 02 2D 00 
                                                    
[1753]    3781: 8B 84 25 01                           mov ax, cn[si]
[1754]    3785: E8 46 11                              call print_num
[1755]    3788: 80 06 03 01 02                        add x, 2
[1756]    378D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color,"--"
                1E 19 01 B9 02 00 8A 16 03 01 8A 36 
                04 01 BD AF 37 CD 10 61 EB 03 2D 2D 
                00                                  
[1757]    37B2: E9 BF 00                              jmp skip_pc_all
[1758]        :                                       
[1759]    37B5:                                       pc_double:
[1760]    37B5: 80 06 03 01 02                        add x, 2
[1761]    37BA: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "-"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD DC 37 CD 10 61 EB 02 2D 00 
                                                    
[1762]    37DE: 8B 84 25 01                           mov ax, cn[si]
[1763]    37E2: E8 E9 10                              call print_num
[1764]    37E5: 80 06 03 01 03                        add x, 3
[1765]    37EA: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color,"-"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD 0C 38 CD 10 61 EB 02 2D 00 
                                                    
[1766]    380E: EB 64                                 jmp skip_pc_all
[1767]        :                                       
[1768]    3810:                                       pc_triple:
[1769]    3810: 80 06 03 01 02                        add x, 2
[1770]    3815: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "-"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD 37 38 CD 10 61 EB 02 2D 00 
                                                    
[1771]    3839: 8B 84 25 01                           mov ax, cn[si]
[1772]    383D: E8 8E 10                              call print_num
[1773]    3840: EB 32                                 jmp skip_pc_all
[1774]        :                                       
[1775]    3842:                                       pc_quad:
[1776]    3842: 80 06 03 01 01                        add x, 1
[1777]    3847: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "#"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD 69 38 CD 10 61 EB 02 23 00 
                                                    
[1778]    386B: 8B 84 25 01                           mov ax, cn[si]
[1779]    386F: E8 5C 10                              call print_num
[1780]    3872: EB 00                                 jmp skip_pc_all
[1781]        :                                       
[1782]        :                                       
[1783]    3874:                                       skip_pc_all:
[1784]        :                                       
[1785]    3874: 51                                    push cx
[1786]    3875: 8B 8C 25 01                           mov cx, cn[si]
[1787]    3879: A1 05 01                              mov ax, temp
[1788]    387C: 8B C1                                 mov ax, cx
[1789]    387E: A3 05 01                              mov temp, ax
[1790]    3881: 59                                    pop cx
[1791]    3882: C7 84 CB 01 00 00                     mov tn[si], 0  ; Set to zero to disable the already chosen.
[1792]    3888: C7 84 25 01 00 00                     mov cn[si], 0
[1793]        :                                       
[1794]    388E: 51                                    push cx
[1795]    388F: C6 06 22 01 00                        mov sc, 0
[1796]    3894: BE 00 00                              mov si, 0
[1797]    3897: B9 14 00                              mov cx,20
[1798]        :                                       
[1799]    389A:                                       CHECK_INPUT_MONEY_LP:  ;internal loop
[1800]    389A: 80 06 22 01 01                        add sc, 1
[1801]    389F: 8B 84 79 01                           mov ax, ml[si]
[1802]    38A3: 51                                    push cx
[1803]    38A4: 8B 0E 05 01                           mov cx, temp
[1804]    38A8: 8B D9                                 mov bx, cx
[1805]        :                                       
[1806]    38AA: 3B C3                                 cmp ax, bx
[1807]    38AC: 74 06                                 je EXIT_CIM_LOOP_LP ;exit the loop if input is valid
[1808]    38AE: 59                                    pop cx
[1809]        :                                       
[1810]    38AF: 83 C6 02                              add si, 2
[1811]        :                                       
[1812]    38B2: E2 E6                                 loop CHECK_INPUT_MONEY_LP
[1813]        :                                       
[1814]    38B4:                                       EXIT_CIM_LOOP_LP:
[1815]    38B4: 59                                    pop cx
[1816]    38B5: 8A 26 22 01                           mov ah,sc
[1817]    38B9: B7 0A                                 mov bh,10
[1818]    38BB: 3A E7                                 cmp ah, bh
[1819]    38BD: 7F 53                                 jg RIGHT_COL_LP
[1820]        :                                       
[1821]    38BF: 80 06 22 01 0D                        add sc, 13
[1822]    38C4: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 2,sc, 0100_1010b,"       "
                4A B9 07 00 B2 02 8A 36 22 01 BD E2 
                38 CD 10 61 EB 08 20 20 20 20 20 20 
                20 00                               
[1823]    38EA: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 4,sc,0100_1010b," "
                4A B9 01 00 B2 04 8A 36 22 01 BD 08 
                39 CD 10 61 EB 02 20 00             
[1824]    390A: A1 05 01                              mov ax, temp
[1825]    390D: E8 BE 0F                              call print_num
[1826]        :                                       
[1827]    3910: EB 51                                 JMP PASS_RIGHT_COL_LP
[1828]        :                                       
[1829]    3912:                                       RIGHT_COL_LP:
[1830]    3912: 80 06 22 01 03                        add sc, 3
[1831]    3917: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 11,sc, 0100_1010b,"       "
                4A B9 07 00 B2 0B 8A 36 22 01 BD 35 
                39 CD 10 61 EB 08 20 20 20 20 20 20 
                20 00                               
[1832]    393D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 12,sc,0100_1010b," "
                4A B9 01 00 B2 0C 8A 36 22 01 BD 5B 
                39 CD 10 61 EB 02 20 00             
[1833]    395D: A1 05 01                              mov ax, temp
[1834]    3960: E8 6B 0F                              call print_num
[1835]        :                                       
[1836]    3963:                                       PASS_RIGHT_COL_LP:
[1837]    3963: C7 84 79 01 00 00                     mov ml[si], 0
[1838]    3969: C6 06 22 01 00                        mov sc, 0
[1839]    396E: BE 00 00                              mov si, 0
[1840]    3971: 83 2E 0B 01 01                        SUB tc, 1           ;else "tc - 1"
[1841]        :                                       
[1842]    3976: EB 04                                 JMP SKIP_THIS_1000
[1843]        :                                       ;;;;;;;;;;;;;;THIS
[1844]        :                                       
[1845]    3978:                                       GO_BACK_HERE_1000!:
[1846]    3978: 8B 0E 1C 01                           mov cx, cxlooptemp
[1847]        :                                       
[1848]        :                                       
[1849]    397C:                                       SKIP_THIS_1000:
[1850]    397C: C7 06 05 01 00 00                     mov temp, 0
[1851]        :                                       
[1852]        :                                       ;CHECK NUMBER OF CASE
[1853]    3982: A1 0B 01                              mov ax, tc
[1854]    3985: BB 02 00                              mov bx, 2
[1855]    3988: 3B C3                                 cmp ax, bx
[1856]    398A: 7F 00                                 Jg ROUNDCOUNT
[1857]    398C:                                       ROUNDCOUNT:
[1858]        :                                       ;ROUND NUMBER CHECK
[1859]    398C: A1 1E 01                              mov ax, r
[1860]    398F: BB 01 00                              mov bx, 1
[1861]    3992: 3B C3                                 CMP ax, bx
[1862]    3994: 74 4E                                 JE ROUNDONE
[1863]        :                                       
[1864]    3996: A1 1E 01                              mov ax, r
[1865]    3999: BB 02 00                              mov bx, 2
[1866]    399C: 3B C3                                 CMP ax, bx
[1867]    399E: 75 03 E9 95 00                        JE ROUNDTWO
[1868]        :                                       
[1869]    39A3: A1 1E 01                              mov ax, r
[1870]    39A6: BB 03 00                              mov bx, 3
[1871]    39A9: 3B C3                                 CMP ax, bx
[1872]    39AB: 75 03 E9 DC 00                        JE ROUNDTHREE
[1873]        :                                       
[1874]    39B0: A1 1E 01                              mov ax, r
[1875]    39B3: BB 04 00                              mov bx, 4
[1876]    39B6: 3B C3                                 CMP ax, bx
[1877]    39B8: 75 03 E9 23 01                        JE ROUNDFOURFIVE
[1878]        :                                       
[1879]    39BD: A1 1E 01                              mov ax, r
[1880]    39C0: BB 05 00                              mov bx, 5
[1881]    39C3: 3B C3                                 CMP ax, bx
[1882]    39C5: 75 03 E9 16 01                        JE ROUNDFOURFIVE
[1883]        :                                       
[1884]    39CA: A1 1E 01                              mov ax, r
[1885]    39CD: BB 06 00                              mov bx, 6
[1886]    39D0: 3B C3                                 CMP ax, bx
[1887]    39D2: 75 03 E9 5D 01                        JE ROUNDSIXSEVEN
[1888]        :                                       
[1889]    39D7: A1 1E 01                              mov ax, r
[1890]    39DA: BB 07 00                              mov bx, 7
[1891]    39DD: 3B C3                                 CMP ax, bx
[1892]    39DF: 75 03 E9 50 01                        JE ROUNDSIXSEVEN
[1893]        :                                       
[1894]        :                                       ;SUB ROUND NUMBER CHECK
[1895]        :                                       ;5 4 3 2 2 1 1
[1896]        :                                       
[1897]        :                                       ;ROUND ONE
[1898]    39E4:                                       ROUNDONE:
[1899]    39E4: A1 09 01                              mov ax, tmp_r
[1900]    39E7: BB 00 00                              mov bx, 0
[1901]    39EA: 3B C3                                 cmp ax, bx
[1902]    39EC: 74 3F                                 JE ONE_SET_PICK
[1903]        :                                       
[1904]    39EE:                                       ONE_ROUND_BACK:
[1905]    39EE: C7 06 09 01 01 00                     mov tmp_r, 1
[1906]    39F4: 83 2E 20 01 01                        SUB p, 1
[1907]    39F9: A1 20 01                              mov ax, p
[1908]    39FC: BB 00 00                              mov bx, 0
[1909]    39FF: 3B C3                                 CMP ax, bx
[1910]    3A01: 75 03 E9 7F 01                        JE NEXTROUND  ;IF 0 NEXT ROUND
[1911]    3A06: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,20,0010_1011b, "#"
                2B B9 01 00 B2 4A B6 14 BD 22 3A CD 
                10 61 EB 02 23 00                   
[1912]    3A24: A1 20 01                              mov ax, p
[1913]    3A27: E8 A4 0E                              call print_num
[1914]    3A2A: E9 5E 06                              JMP SKIP_THIS ;ELSE JUMP TO INPUTCASE
[1915]        :                                       
[1916]    3A2D:                                       ONE_SET_PICK:
[1917]    3A2D: A1 20 01                              mov ax,p
[1918]    3A30: 05 05 00                              add ax, 5
[1919]    3A33: A3 20 01                              mov p, ax
[1920]    3A36: EB B6                                 JMP ONE_ROUND_BACK
[1921]        :                                       ;END ROUND ONE
[1922]        :                                       
[1923]        :                                       ;ROUND TWO
[1924]    3A38:                                       ROUNDTWO:
[1925]    3A38: A1 09 01                              mov ax, tmp_r
[1926]    3A3B: BB 00 00                              mov bx, 0
[1927]    3A3E: 3B C3                                 cmp ax, bx
[1928]    3A40: 74 3F                                 JE TWO_SET_PICK
[1929]        :                                       
[1930]    3A42:                                       TWO_ROUND_BACK:
[1931]    3A42: C7 06 09 01 01 00                     mov tmp_r, 1
[1932]    3A48: 83 2E 20 01 01                        SUB p, 1
[1933]    3A4D: A1 20 01                              mov ax, p
[1934]    3A50: BB 00 00                              mov bx, 0
[1935]    3A53: 3B C3                                 CMP ax, bx
[1936]    3A55: 75 03 E9 2B 01                        JE NEXTROUND  ;IF 0 NEXT ROUND
[1937]    3A5A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,20,0010_1011b, "#"
                2B B9 01 00 B2 4A B6 14 BD 76 3A CD 
                10 61 EB 02 23 00                   
[1938]    3A78: A1 20 01                              mov ax, p
[1939]    3A7B: E8 50 0E                              call print_num
[1940]        :                                       
[1941]    3A7E: E9 0A 06                              JMP SKIP_THIS ;ELSE JUMP TO INPUTCASE
[1942]        :                                       
[1943]    3A81:                                       TWO_SET_PICK:
[1944]    3A81: A1 20 01                              mov ax,p
[1945]    3A84: 05 04 00                              add ax, 4
[1946]    3A87: A3 20 01                              mov p, ax
[1947]    3A8A: EB B6                                 JMP TWO_ROUND_BACK
[1948]        :                                       ;END ROUND TWO
[1949]        :                                       
[1950]        :                                       ;ROUND THREE
[1951]    3A8C:                                       ROUNDTHREE:
[1952]    3A8C: A1 09 01                              mov ax, tmp_r
[1953]    3A8F: BB 00 00                              mov bx, 0
[1954]    3A92: 3B C3                                 cmp ax, bx
[1955]    3A94: 74 3F                                 JE THREE_SET_PICK
[1956]        :                                       
[1957]    3A96:                                       THREE_ROUND_BACK:
[1958]    3A96: C7 06 09 01 01 00                     mov tmp_r, 1
[1959]    3A9C: 83 2E 20 01 01                        SUB p, 1
[1960]    3AA1: A1 20 01                              mov ax, p
[1961]    3AA4: BB 00 00                              mov bx, 0
[1962]    3AA7: 3B C3                                 CMP ax, bx
[1963]    3AA9: 75 03 E9 D7 00                        JE NEXTROUND  ;IF 0 NEXT ROUND
[1964]    3AAE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,20,0010_1011b, "#"
                2B B9 01 00 B2 4A B6 14 BD CA 3A CD 
                10 61 EB 02 23 00                   
[1965]    3ACC: A1 20 01                              mov ax, p
[1966]    3ACF: E8 FC 0D                              call print_num
[1967]        :                                       
[1968]    3AD2: E9 B6 05                              JMP SKIP_THIS ;ELSE JUMP TO INPUTCASE
[1969]        :                                       
[1970]    3AD5:                                       THREE_SET_PICK:
[1971]    3AD5: A1 20 01                              mov ax,p
[1972]    3AD8: 05 03 00                              add ax, 3
[1973]    3ADB: A3 20 01                              mov p, ax
[1974]    3ADE: EB B6                                 JMP THREE_ROUND_BACK
[1975]        :                                       ;END ROUND THREE
[1976]        :                                       
[1977]        :                                       ;ROUND FOUR FIVE
[1978]    3AE0:                                       ROUNDFOURFIVE:
[1979]    3AE0: A1 09 01                              mov ax, tmp_r
[1980]    3AE3: BB 00 00                              mov bx, 0
[1981]    3AE6: 3B C3                                 cmp ax, bx
[1982]    3AE8: 74 3F                                 JE FOURFIVE_SET_PICK
[1983]        :                                       
[1984]    3AEA:                                       FOURFIVE_ROUND_BACK:
[1985]    3AEA: C7 06 09 01 01 00                     mov tmp_r, 1
[1986]    3AF0: 83 2E 20 01 01                        SUB p, 1
[1987]    3AF5: A1 20 01                              mov ax, p
[1988]    3AF8: BB 00 00                              mov bx, 0
[1989]    3AFB: 3B C3                                 CMP ax, bx
[1990]    3AFD: 75 03 E9 83 00                        JE NEXTROUND  ;IF 0 NEXT ROUND
[1991]    3B02: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,20,0010_1011b, "#"
                2B B9 01 00 B2 4A B6 14 BD 1E 3B CD 
                10 61 EB 02 23 00                   
[1992]    3B20: A1 20 01                              mov ax, p
[1993]    3B23: E8 A8 0D                              call print_num
[1994]        :                                       
[1995]    3B26: E9 62 05                              JMP SKIP_THIS ;ELSE JUMP TO INPUTCASE
[1996]        :                                       
[1997]    3B29:                                       FOURFIVE_SET_PICK:
[1998]    3B29: A1 20 01                              mov ax,p
[1999]    3B2C: 05 02 00                              add ax, 2
[2000]    3B2F: A3 20 01                              mov p, ax
[2001]    3B32: EB B6                                 JMP FOURFIVE_ROUND_BACK
[2002]        :                                       ;END ROUND FOUR FIVE
[2003]        :                                       
[2004]        :                                       ;ROUND SIX SEVEN
[2005]    3B34:                                       ROUNDSIXSEVEN:
[2006]    3B34: A1 09 01                              mov ax, tmp_r
[2007]    3B37: BB 00 00                              mov bx, 0
[2008]    3B3A: 3B C3                                 cmp ax, bx
[2009]    3B3C: 74 3C                                 JE SIXSEVEN_SET_PICK
[2010]        :                                       
[2011]    3B3E:                                       SIXSEVEN_ROUND_BACK:
[2012]    3B3E: C7 06 09 01 01 00                     mov tmp_r, 1
[2013]    3B44: 83 2E 20 01 01                        SUB p, 1
[2014]    3B49: A1 20 01                              mov ax, p
[2015]    3B4C: BB 00 00                              mov bx, 0
[2016]    3B4F: 3B C3                                 CMP ax, bx
[2017]    3B51: 74 32                                 JE NEXTROUND  ;IF 0 NEXT ROUND
[2018]    3B53: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,20,0010_1011b, "#"
                2B B9 01 00 B2 4A B6 14 BD 6F 3B CD 
                10 61 EB 02 23 00                   
[2019]    3B71: A1 20 01                              mov ax, p
[2020]    3B74: E8 57 0D                              call print_num
[2021]        :                                       
[2022]    3B77: E9 11 05                              JMP SKIP_THIS ;ELSE JUMP TO INPUTCASE
[2023]        :                                       
[2024]    3B7A:                                       SIXSEVEN_SET_PICK:
[2025]    3B7A: A1 20 01                              mov ax,p
[2026]    3B7D: 05 01 00                              add ax, 1
[2027]    3B80: A3 20 01                              mov p, ax
[2028]    3B83: EB B9                                 JMP SIXSEVEN_ROUND_BACK
[2029]        :                                       ;END ROUND SIX SEVEN
[2030]        :                                       
[2031]        :                                       
[2032]        :                                       
[2033]        :                                       ;next round
[2034]    3B85:                                       NEXTROUND:
[2035]    3B85: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,20,0010_1011b, "#"
                2B B9 01 00 B2 4A B6 14 BD A1 3B CD 
                10 61 EB 02 23 00                   
[2036]    3BA3: A1 20 01                              mov ax, p
[2037]    3BA6: E8 25 0D                              call print_num
[2038]    3BA9: A1 1E 01                              mov ax, r
[2039]    3BAC: 05 01 00                              add ax, 1
[2040]    3BAF: A3 1E 01                              mov r, ax
[2041]    3BB2: C7 06 09 01 00 00                     mov tmp_r, 0
[2042]        :                                       
[2043]    3BB8:                                       SHOW_BANKERS_OFFER:
[2044]    3BB8: A1 0D 01                              mov ax, tm
[2045]    3BBB: BA 00 00                              mov dx, 0
[2046]    3BBE: F7 3E 0B 01                           idiv tc  ; ax = (dx ax) / num2.
[2047]        :                                       
[2048]        :                                       ;mov tm, ax
[2049]    3BC2: A3 0F 01                              mov bo, ax
[2050]    3BC5: A1 0F 01                              mov ax, bo
[2051]    3BC8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b "Bankers Offer is now : "
                07 B9 17 00 B2 18 B6 16 BD E4 3B CD 
                10 61 EB 18 42 61 6E 6B 65 72 73 20 
                4F 66 66 65 72 20 69 73 20 6E 6F 77 
                20 3A 20 00                         
[2052]    3BFC: E8 CF 0C                              call print_num    ; print ax value.
[2053]        :                                       
[2054]        :                                       ;mov ax,r
[2055]        :                                       ;mov bx, 1
[2056]        :                                       ;CMP ax, bx
[2057]        :                                       ;JE PRINT_BANKERS_OFFER_TABLE_1
[2058]        :                                       
[2059]    3BFF: A1 1E 01                              mov ax,r
[2060]    3C02: BB 02 00                              mov bx, 2
[2061]    3C05: 3B C3                                 CMP ax, bx
[2062]    3C07: 74 4B                                 JE PRINT_BANKERS_OFFER_TABLE_2
[2063]        :                                       
[2064]    3C09: A1 1E 01                              mov ax,r
[2065]    3C0C: BB 03 00                              mov bx, 3
[2066]    3C0F: 3B C3                                 CMP ax, bx
[2067]    3C11: 74 68                                 JE PRINT_BANKERS_OFFER_TABLE_3
[2068]        :                                       
[2069]    3C13: A1 1E 01                              mov ax,r
[2070]    3C16: BB 04 00                              mov bx, 4
[2071]    3C19: 3B C3                                 CMP ax, bx
[2072]    3C1B: 75 03 E9 82 00                        JE PRINT_BANKERS_OFFER_TABLE_4
[2073]        :                                       
[2074]    3C20: A1 1E 01                              mov ax,r
[2075]    3C23: BB 05 00                              mov bx, 5
[2076]    3C26: 3B C3                                 CMP ax, bx
[2077]    3C28: 75 03 E9 9C 00                        JE PRINT_BANKERS_OFFER_TABLE_5
[2078]        :                                       
[2079]    3C2D: A1 1E 01                              mov ax,r
[2080]    3C30: BB 06 00                              mov bx, 6
[2081]    3C33: 3B C3                                 CMP ax, bx
[2082]    3C35: 75 03 E9 B5 00                        JE PRINT_BANKERS_OFFER_TABLE_6
[2083]        :                                       
[2084]    3C3A: A1 1E 01                              mov ax,r
[2085]    3C3D: BB 07 00                              mov bx, 7
[2086]    3C40: 3B C3                                 CMP ax, bx
[2087]    3C42: 75 03 E9 CE 00                        JE PRINT_BANKERS_OFFER_TABLE_7
[2088]        :                                       
[2089]    3C47: A1 1E 01                              mov ax,r
[2090]    3C4A: BB 08 00                              mov bx, 8
[2091]    3C4D: 3B C3                                 CMP ax, bx
[2092]    3C4F: 75 03 E9 E7 00                        JE PRINT_BANKERS_OFFER_TABLE_8
[2093]        :                                       
[2094]        :                                       
[2095]        :                                       ;PRINT_BANKERS_OFFER_TABLE_1:
[2096]        :                                       ; print 6,3,0010_0111b,  " "
[2097]        :                                       ;  mov ax, bo
[2098]        :                                       ;call print_num
[2099]        :                                       ;JMP DEALORNODEAL
[2100]        :                                       
[2101]    3C54:                                       PRINT_BANKERS_OFFER_TABLE_2:
[2102]    3C54: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 6,3,0010_0111b,  " "
                27 B9 01 00 B2 06 B6 03 BD 70 3C CD 
                10 61 EB 02 20 00                   
[2103]    3C72: A1 0F 01                              mov ax, bo
[2104]    3C75: E8 56 0C                              call print_num
[2105]    3C78: E9 E6 00                              JMP DEALORNODEAL
[2106]        :                                       
[2107]    3C7B:                                       PRINT_BANKERS_OFFER_TABLE_3:
[2108]    3C7B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 6,4,0010_0111b,  " "
                27 B9 01 00 B2 06 B6 04 BD 97 3C CD 
                10 61 EB 02 20 00                   
[2109]    3C99: A1 0F 01                              mov ax, bo
[2110]    3C9C: E8 2F 0C                              call print_num
[2111]    3C9F: E9 BF 00                              JMP DEALORNODEAL
[2112]        :                                       
[2113]    3CA2:                                       PRINT_BANKERS_OFFER_TABLE_4:
[2114]    3CA2: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 6,5,0010_0111b,  " "
                27 B9 01 00 B2 06 B6 05 BD BE 3C CD 
                10 61 EB 02 20 00                   
[2115]    3CC0: A1 0F 01                              mov ax, bo
[2116]    3CC3: E8 08 0C                              call print_num
[2117]    3CC6: E9 98 00                              JMP DEALORNODEAL
[2118]        :                                       
[2119]    3CC9:                                       PRINT_BANKERS_OFFER_TABLE_5:
[2120]    3CC9: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 6,6,0010_0111b,  " "
                27 B9 01 00 B2 06 B6 06 BD E5 3C CD 
                10 61 EB 02 20 00                   
[2121]    3CE7: A1 0F 01                              mov ax, bo
[2122]    3CEA: E8 E1 0B                              call print_num
[2123]    3CED: EB 72                                 JMP DEALORNODEAL
[2124]        :                                       
[2125]    3CEF:                                       PRINT_BANKERS_OFFER_TABLE_6:
[2126]    3CEF: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 6,7,0010_0111b,  " "
                27 B9 01 00 B2 06 B6 07 BD 0B 3D CD 
                10 61 EB 02 20 00                   
[2127]    3D0D: A1 0F 01                              mov ax, bo
[2128]    3D10: E8 BB 0B                              call print_num
[2129]    3D13: EB 4C                                 JMP DEALORNODEAL
[2130]        :                                       
[2131]    3D15:                                       PRINT_BANKERS_OFFER_TABLE_7:
[2132]    3D15: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 6,8,0010_0111b,  " "
                27 B9 01 00 B2 06 B6 08 BD 31 3D CD 
                10 61 EB 02 20 00                   
[2133]    3D33: A1 0F 01                              mov ax, bo
[2134]    3D36: E8 95 0B                              call print_num
[2135]    3D39: EB 26                                 JMP DEALORNODEAL
[2136]        :                                       
[2137]    3D3B:                                       PRINT_BANKERS_OFFER_TABLE_8:
[2138]    3D3B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 6,9,0010_0111b,  " "
                27 B9 01 00 B2 06 B6 09 BD 57 3D CD 
                10 61 EB 02 20 00                   
[2139]    3D59: A1 0F 01                              mov ax, bo
[2140]    3D5C: E8 6F 0B                              call print_num
[2141]    3D5F: EB 00                                 JMP DEALORNODEAL
[2142]        :                                       
[2143]        :                                       ;DEAL OR NO DEAL
[2144]    3D61:                                       DEALORNODEAL:
[2145]        :                                       ;RESET HIGHEST MONEY
[2146]        :                                       
[2147]        :                                       ;ASK USER, DEAL [0] OR NO DEAL [1]
[2148]    3D61: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_0111b,  "DEAL     OR NO DEAL"
                07 B9 13 00 B2 18 B6 17 BD 7D 3D CD 
                10 61 EB 14 44 45 41 4C 20 20 20 20 
                20 4F 52 20 4E 4F 20 44 45 41 4C 00 
                                                    
[2149]    3D91: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 28,23,0000_1100b,  "[0]"
                0C B9 03 00 B2 1C B6 17 BD AD 3D CD 
                10 61 EB 04 5B 30 5D 00             
[2150]    3DB1: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,23,0000_1011b,  "[1]"
                0B B9 03 00 B2 2B B6 17 BD CD 3D CD 
                10 61 EB 04 5B 31 5D 00             
[2151]        :                                       
[2152]        :                                       
[2153]        :                                       ;READ USER INPUT
[2154]    3DD1: 51                                    push cx
[2155]    3DD2: E8 38 0A                              call scan_num
[2156]    3DD5: 89 0E 1A 01                           mov ui, cx
[2157]    3DD9: A1 1A 01                              mov ax, ui
[2158]    3DDC: 59                                    pop cx
[2159]        :                                       
[2160]    3DDD: BB 00 00                              mov bx, 0
[2161]    3DE0: 3B C3                                 cmp ax, bx
[2162]    3DE2: 74 58                                 je DEAL
[2163]        :                                       
[2164]    3DE4: BB 01 00                              mov bx, 1
[2165]    3DE7: 3B C3                                 cmp ax, bx
[2166]    3DE9: 75 03 E9 39 01                        je NODEAL
[2167]        :                                       
[2168]    3DEE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 50,23,0000_1100b,  "INVALID INPUT"
                0C B9 0D 00 B2 32 B6 17 BD 0A 3E CD 
                10 61 EB 0E 49 4E 56 41 4C 49 44 20 
                49 4E 50 55 54 00                   
[2169]    3E18: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 46,23,0000_0111b,  "    "
                07 B9 04 00 B2 2E B6 17 BD 34 3E CD 
                10 61 EB 05 20 20 20 20 00          
[2170]    3E39: E9 25 FF                              JMP DEALORNODEAL
[2171]        :                                       
[2172]    3E3C:                                       DEAL:
[2173]    3E3C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b "                            "
                07 B9 1C 00 B2 18 B6 16 BD 58 3E CD 
                10 61 EB 1D 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 00          
[2174]    3E75: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_1011b,  "                                           ";
                0B B9 2B 00 B2 18 B6 17 BD 91 3E CD 
                10 61 EB 2C 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 00 
                                                    
[2175]        :                                       
[2176]    3EBD: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,  "            "
                07 B9 0C 00 B2 18 B6 16 BD D9 3E CD 
                10 61 EB 0D 20 20 20 20 20 20 20 20 
                20 20 20 20 00                      
[2177]    3EE6: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_0111b,  "Congratulations! You won : "
                07 B9 1B 00 B2 18 B6 17 BD 02 3F CD 
                10 61 EB 1C 43 6F 6E 67 72 61 74 75 
                6C 61 74 69 6F 6E 73 21 20 59 6F 75 
                20 77 6F 6E 20 3A 20 00             
[2178]    3F1E: A1 0F 01                              mov ax, bo
[2179]    3F21: E8 AA 09                              call print_num
[2180]    3F24: E9 EA 03                              JMP GAME_EXIT
[2181]    3F27:                                       NODEAL:
[2182]    3F27: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b  "                               ";
                07 B9 1F 00 B2 18 B6 16 BD 43 3F CD 
                10 61 EB 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 00 
                                                    
[2183]    3F63: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_1011b,  "                                            ";
                0B B9 2C 00 B2 18 B6 17 BD 7F 3F CD 
                10 61 EB 2D 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                00                                  
[2184]        :                                       
[2185]    3FAC: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 74,10,0010_1011b, "#"
                2B B9 01 00 B2 4A B6 0A BD C8 3F CD 
                10 61 EB 02 23 00                   
[2186]    3FCA: A1 1E 01                              mov ax, r
[2187]    3FCD: E8 FE 08                              call print_num
[2188]        :                                       
[2189]    3FD0: BB 02 00                              mov bx, 2
[2190]    3FD3: 3B C3                                 cmp ax, bx
[2191]    3FD5: 74 23                                 JE print_pick_2
[2192]        :                                       
[2193]    3FD7: BB 03 00                              mov bx, 3
[2194]    3FDA: 3B C3                                 cmp ax, bx
[2195]    3FDC: 74 3C                                 JE print_pick_3
[2196]        :                                       
[2197]    3FDE: BB 04 00                              mov bx, 4
[2198]    3FE1: 3B C3                                 cmp ax, bx
[2199]    3FE3: 74 55                                 JE print_pick_45
[2200]        :                                       
[2201]    3FE5: BB 05 00                              mov bx, 5
[2202]    3FE8: 3B C3                                 cmp ax, bx
[2203]    3FEA: 74 4E                                 JE print_pick_45
[2204]        :                                       
[2205]    3FEC: BB 06 00                              mov bx, 6
[2206]    3FEF: 3B C3                                 cmp ax, bx
[2207]    3FF1: 74 67                                 JE print_pick_67
[2208]        :                                       
[2209]    3FF3: BB 07 00                              mov bx, 7
[2210]    3FF6: 3B C3                                 cmp ax, bx
[2211]    3FF8: 74 60                                 JE print_pick_67
[2212]        :                                       
[2213]    3FFA:                                       print_pick_2:
[2214]    3FFA: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 75,20,0010_1011b, "4"
                2B B9 01 00 B2 4B B6 14 BD 16 40 CD 
                10 61 EB 02 34 00                   
[2215]    4018: EB 71                                 JMP SKIP_THIS
[2216]    401A:                                       print_pick_3:
[2217]    401A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 75,20,0010_1011b, "3"
                2B B9 01 00 B2 4B B6 14 BD 36 40 CD 
                10 61 EB 02 33 00                   
[2218]    4038: EB 51                                 JMP SKIP_THIS
[2219]    403A:                                       print_pick_45:
[2220]    403A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 75,20,0010_1011b, "2"
                2B B9 01 00 B2 4B B6 14 BD 56 40 CD 
                10 61 EB 02 32 00                   
[2221]    4058: EB 31                                 JMP SKIP_THIS
[2222]    405A:                                       print_pick_67:
[2223]    405A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 75,20,0010_1011b, "1"
                2B B9 01 00 B2 4B B6 14 BD 76 40 CD 
                10 61 EB 02 31 00                   
[2224]        :                                       
[2225]    4078: C7 06 0F 01 00 00                     mov bo, 0
[2226]    407E: A1 0B 01                              MOV ax, tc
[2227]    4081: BB 02 00                              MOV bx, 2
[2228]    4084: 3B C3                                 CMP ax, bx
[2229]    4086: 75 03 E9 BF 01                        JE F_NO_DEAL
[2230]        :                                       
[2231]        :                                       
[2232]    408B:                                       SKIP_THIS:
[2233]        :                                       
[2234]    408B: 8B 0E 13 01                           mov cx,mc_index_tmp
[2235]        :                                       
[2236]    408F: C7 06 0F 01 00 00                     mov bo, 0
[2237]    4095: A1 0B 01                              MOV ax, tc
[2238]    4098: BB 02 00                              MOV bx, 2
[2239]    409B: 3B C3                                 CMP ax, bx
[2240]    409D: 75 03 E9 A8 01                        JE F_NO_DEAL
[2241]        :                                       
[2242]        :                                       
[2243]    40A2: 49 E3 03 E9 5A EC                     loop LOOP_ROUND
[2244]        :                                       
[2245]        :                                       
[2246]    40A8:                                       FINAL_ROUND:
[2247]        :                                       
[2248]        :                                       
[2249]        :                                       ;Proceed here if there are two briefcase only.
[2250]    40A8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,  "FINAL ROUND"
                07 B9 0B 00 B2 18 B6 16 BD C4 40 CD 
                10 61 EB 0C 46 49 4E 41 4C 20 52 4F 
                55 4E 44 00                         
[2251]    40D0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_0111b,  "DEAL     OR NO DEAL"
                07 B9 13 00 B2 18 B6 17 BD EC 40 CD 
                10 61 EB 14 44 45 41 4C 20 20 20 20 
                20 4F 52 20 4E 4F 20 44 45 41 4C 00 
                                                    
[2252]    4100: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 28,23,0000_1100b,  "[0]"
                0C B9 03 00 B2 1C B6 17 BD 1C 41 CD 
                10 61 EB 04 5B 30 5D 00             
[2253]    4120: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 43,23,0000_1011b,  "[1]"
                0B B9 03 00 B2 2B B6 17 BD 3C 41 CD 
                10 61 EB 04 5B 31 5D 00             
[2254]    4140:                                       F_DORNOD:
[2255]    4140: E8 CA 06                              call scan_num
[2256]    4143: 8B C1                                 mov ax, cx
[2257]        :                                       
[2258]    4145: BB 00 00                              mov bx, 0
[2259]    4148: 3B C3                                 cmp ax, bx
[2260]    414A: 74 39                                 je F_DEAL
[2261]        :                                       
[2262]    414C: BB 01 00                              mov bx, 1
[2263]    414F: 3B C3                                 cmp ax, bx
[2264]    4151: 75 03 E9 F4 00                        je F_NO_DEAL
[2265]        :                                       
[2266]    4156: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 50,23,0000_1001b,  "INVALID INPUT"
                09 B9 0D 00 B2 32 B6 17 BD 72 41 CD 
                10 61 EB 0E 49 4E 56 41 4C 49 44 20 
                49 4E 50 55 54 00                   
[2267]    4180: B8 00 00                              mov ax, 0
[2268]    4183: EB BB                                 JMP F_DORNOD  ;If invalid input again
[2269]        :                                       
[2270]    4185:                                       F_DEAL:
[2271]    4185: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 50,23,0000_1001b,  "             ";
                09 B9 0D 00 B2 32 B6 17 BD A1 41 CD 
                10 61 EB 0E 20 20 20 20 20 20 20 20 
                20 20 20 20 20 00                   
[2272]    41AF: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,  "            "      ;
                07 B9 0C 00 B2 18 B6 16 BD CB 41 CD 
                10 61 EB 0D 20 20 20 20 20 20 20 20 
                20 20 20 20 00                      
[2273]    41D8: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_0111b,  "                    "
                07 B9 14 00 B2 18 B6 17 BD F4 41 CD 
                10 61 EB 15 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                00                                  
[2274]    4209: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_0111b,  "Congratulations! You won : "
                07 B9 1B 00 B2 18 B6 17 BD 25 42 CD 
                10 61 EB 1C 43 6F 6E 67 72 61 74 75 
                6C 61 74 69 6F 6E 73 21 20 59 6F 75 
                20 77 6F 6E 20 3A 20 00             
[2275]    4241: A1 0F 01                              mov ax, bo
[2276]    4244: E8 87 06                              call print_num
[2277]    4247: E9 C7 00                              JMP GAME_EXIT
[2278]        :                                       
[2279]    424A:                                       F_NO_DEAL:
[2280]    424A: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 50,23,0000_1001b,  "             ";
                09 B9 0D 00 B2 32 B6 17 BD 66 42 CD 
                10 61 EB 0E 20 20 20 20 20 20 20 20 
                20 20 20 20 20 00                   
[2281]    4274: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,22,0000_0111b,  "            "
                07 B9 0C 00 B2 18 B6 16 BD 90 42 CD 
                10 61 EB 0D 20 20 20 20 20 20 20 20 
                20 20 20 20 00                      
[2282]    429D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_0111b,  "                    "
                07 B9 14 00 B2 18 B6 17 BD B9 42 CD 
                10 61 EB 15 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                00                                  
[2283]    42CE: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 24,23,0000_0111b,  "Congratulations! You won : "
                07 B9 1B 00 B2 18 B6 17 BD EA 42 CD 
                10 61 EB 1C 43 6F 6E 67 72 61 74 75 
                6C 61 74 69 6F 6E 73 21 20 59 6F 75 
                20 77 6F 6E 20 3A 20 00             
[2284]    4306: 8B 36 13 01                           mov si, mc_index_tmp
[2285]    430A: 8B 84 25 01                           mov ax, cn[si]
[2286]    430E: E8 BD 05                              call print_num
[2287]        :                                       
[2288]    4311:                                       GAME_EXIT:
[2289]        :                                       
[2290]    4311: B9 14 00                              mov cx, 20
[2291]    4314: BE 00 00                              mov si, 0
[2292]        :                                       
[2293]    4317:                                       GAME_EXIT_LOOP:
[2294]    4317: A1 17 01                              mov ax, mc_temp
[2295]    431A: BB 01 00                              mov bx, 1
[2296]    431D: 3B C3                                 cmp ax, bx
[2297]    431F: 74 1B                                 je SKIP_TN_GE_LOOP
[2298]        :                                       
[2299]    4321: 51                                    push cx
[2300]    4322: B9 14 00                              mov cx, 20
[2301]    4325: BE 00 00                              mov si, 0
[2302]    4328:                                       INNER_GE_LOOP:
[2303]        :                                       ;mov ax, tn[si]
[2304]        :                                       ;mov bx, mc
[2305]        :                                       ;cmp ax, bx
[2306]        :                                       ;JE INNER_GE_SKIP
[2307]        :                                       
[2308]    4328: 8B 84 CB 01                           mov ax, tn[si]
[2309]    432C: BB 00 00                              mov bx, 0
[2310]    432F: 3B C3                                 cmp ax, bx
[2311]    4331: 75 18                                 JNE EXIT_INNER_GE_LOOP
[2312]        :                                       
[2313]        :                                       ;INNER_GE_SKIP:
[2314]    4333: 83 C6 02                              add si, 2
[2315]    4336: E2 F0                                 loop INNER_GE_LOOP
[2316]    4338: 59                                    pop cx
[2317]    4339: E9 97 04                              JMP EXIT_GAME_EXIT_LOOP
[2318]        :                                       
[2319]    433C:                                       SKIP_TN_GE_LOOP:
[2320]    433C: B4 F0                                 mov ah, 1111_0000b
[2321]    433E: 88 26 19 01                           mov case_color, ah
[2322]    4342: 8B 36 13 01                           mov si, mc_index_tmp
[2323]    4346: A1 11 01                              mov ax, mc
[2324]    4349: EB 05                                 jmp SKIP_EIGL ; exit inner ge loop
[2325]        :                                       
[2326]    434B:                                       EXIT_INNER_GE_LOOP:
[2327]    434B: 59                                    pop cx
[2328]    434C: 8B 84 CB 01                           mov ax, tn[si]
[2329]        :                                       
[2330]    4350:                                       SKIP_EIGL:
[2331]    4350: C6 06 04 01 01                        mov y, 1
[2332]    4355: BB 01 00                              mov bx, 1
[2333]    4358: 3B C3                                 cmp ax, bx
[2334]    435A: 75 03 E9 A0 00                        JE pc_one_GE
[2335]        :                                       
[2336]    435F: BB 02 00                              mov bx, 2
[2337]    4362: 3B C3                                 cmp ax, bx
[2338]    4364: 75 03 E9 9D 00                        JE pc_two_GE
[2339]        :                                       
[2340]    4369: BB 03 00                              mov bx, 3
[2341]    436C: 3B C3                                 cmp ax, bx
[2342]    436E: 75 03 E9 9A 00                        JE pc_three_GE
[2343]        :                                       
[2344]    4373: BB 04 00                              mov bx, 4
[2345]    4376: 3B C3                                 cmp ax, bx
[2346]    4378: 75 03 E9 97 00                        JE pc_four_GE
[2347]        :                                       
[2348]    437D: BB 05 00                              mov bx, 5
[2349]    4380: 3B C3                                 cmp ax, bx
[2350]    4382: 75 03 E9 94 00                        JE pc_five_GE
[2351]        :                                       
[2352]    4387: C6 06 04 01 06                        mov y, 6
[2353]        :                                       
[2354]    438C: BB 06 00                              mov bx, 6
[2355]    438F: 3B C3                                 cmp ax, bx
[2356]    4391: 74 6C                                 JE pc_one_GE
[2357]        :                                       
[2358]    4393: BB 07 00                              mov bx, 7
[2359]    4396: 3B C3                                 cmp ax, bx
[2360]    4398: 74 6C                                 JE pc_two_GE
[2361]        :                                       
[2362]    439A: BB 08 00                              mov bx, 8
[2363]    439D: 3B C3                                 cmp ax, bx
[2364]    439F: 74 6C                                 JE pc_three_GE
[2365]        :                                       
[2366]    43A1: BB 09 00                              mov bx, 9
[2367]    43A4: 3B C3                                 cmp ax, bx
[2368]    43A6: 74 6C                                 JE pc_four_GE
[2369]        :                                       
[2370]    43A8: BB 0A 00                              mov bx, 10
[2371]    43AB: 3B C3                                 cmp ax, bx
[2372]    43AD: 74 6C                                 JE pc_five_GE
[2373]        :                                       
[2374]    43AF: C6 06 04 01 0B                        mov y,11
[2375]        :                                       
[2376]    43B4: BB 0B 00                              mov bx, 11
[2377]    43B7: 3B C3                                 cmp ax, bx
[2378]    43B9: 74 44                                 JE pc_one_GE
[2379]        :                                       
[2380]    43BB: BB 0C 00                              mov bx, 12
[2381]    43BE: 3B C3                                 cmp ax, bx
[2382]    43C0: 74 44                                 JE pc_two_GE
[2383]        :                                       
[2384]    43C2: BB 0D 00                              mov bx, 13
[2385]    43C5: 3B C3                                 cmp ax, bx
[2386]    43C7: 74 44                                 JE pc_three_GE
[2387]        :                                       
[2388]    43C9: BB 0E 00                              mov bx, 14
[2389]    43CC: 3B C3                                 cmp ax, bx
[2390]    43CE: 74 44                                 JE pc_four_GE
[2391]        :                                       
[2392]    43D0: BB 0F 00                              mov bx, 15
[2393]    43D3: 3B C3                                 cmp ax, bx
[2394]    43D5: 74 44                                 JE pc_five_GE
[2395]        :                                       
[2396]    43D7: C6 06 04 01 10                        mov y, 16
[2397]        :                                       
[2398]    43DC: BB 10 00                              mov bx, 16
[2399]    43DF: 3B C3                                 cmp ax, bx
[2400]    43E1: 74 1C                                 JE pc_one_GE
[2401]        :                                       
[2402]    43E3: BB 11 00                              mov bx, 17
[2403]    43E6: 3B C3                                 cmp ax, bx
[2404]    43E8: 74 1C                                 JE pc_two_GE
[2405]        :                                       
[2406]    43EA: BB 12 00                              mov bx, 18
[2407]    43ED: 3B C3                                 cmp ax, bx
[2408]    43EF: 74 1C                                 JE pc_three_GE
[2409]        :                                       
[2410]    43F1: BB 13 00                              mov bx, 19
[2411]    43F4: 3B C3                                 cmp ax, bx
[2412]    43F6: 74 1C                                 JE pc_four_GE
[2413]        :                                       
[2414]    43F8: BB 14 00                              mov bx, 20
[2415]    43FB: 3B C3                                 cmp ax, bx
[2416]    43FD: 74 1C                                 JE pc_five_GE
[2417]        :                                       
[2418]        :                                       
[2419]    43FF:                                       pc_one_GE:
[2420]    43FF: C6 06 03 01 19                        mov x, 25
[2421]    4404: EB 1C                                 jmp PC_PRINT_GE
[2422]    4406:                                       pc_two_GE:
[2423]    4406: C6 06 03 01 23                        mov x, 35
[2424]    440B: EB 15                                 jmp PC_PRINT_GE
[2425]    440D:                                       pc_three_GE:
[2426]    440D: C6 06 03 01 2D                        mov x, 45
[2427]    4412: EB 0E                                 jmp PC_PRINT_GE
[2428]    4414:                                       pc_four_GE:
[2429]    4414: C6 06 03 01 37                        mov x, 55
[2430]    4419: EB 07                                 jmp PC_PRINT_GE
[2431]    441B:                                       pc_five_GE:
[2432]    441B: C6 06 03 01 41                        mov x, 65
[2433]    4420: EB 00                                 jmp PC_PRINT_GE
[2434]        :                                       
[2435]    4422:                                       PC_PRINT_GE:
[2436]    4422: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color,    "##"
                1E 19 01 B9 02 00 8A 16 03 01 8A 36 
                04 01 BD 44 44 CD 10 61 EB 03 23 23 
                00                                  
[2437]    4447: 80 2E 03 01 03                        sub x, 3
[2438]    444C: 80 06 04 01 01                        add y, 1
[2439]    4451: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "########"
                1E 19 01 B9 08 00 8A 16 03 01 8A 36 
                04 01 BD 73 44 CD 10 61 EB 09 23 23 
                23 23 23 23 23 23 00                
[2440]    447C: 80 06 04 01 01                        add y, 1
[2441]    4481: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "########"
                1E 19 01 B9 08 00 8A 16 03 01 8A 36 
                04 01 BD A3 44 CD 10 61 EB 09 23 23 
                23 23 23 23 23 23 00                
[2442]    44AC: 80 06 04 01 01                        add y, 1
[2443]    44B1: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "########"
                1E 19 01 B9 08 00 8A 16 03 01 8A 36 
                04 01 BD D3 44 CD 10 61 EB 09 23 23 
                23 23 23 23 23 23 00                
[2444]    44DC: 80 2E 04 01 01                        sub y, 1
[2445]        :                                       
[2446]        :                                       
[2447]    44E1: 8B 84 25 01                           mov ax, cn[si]
[2448]        :                                       
[2449]    44E5: BB 01 00                              mov bx, 1
[2450]    44E8: 3B C3                                 cmp ax, bx
[2451]    44EA: 75 03 E9 BE 00                        je pc_single_GE
[2452]        :                                       
[2453]    44EF: BB 05 00                              mov bx, 5
[2454]    44F2: 3B C3                                 cmp ax, bx
[2455]    44F4: 75 03 E9 B4 00                        je pc_single_GE
[2456]        :                                       
[2457]    44F9: BB 0A 00                              mov bx, 10
[2458]    44FC: 3B C3                                 cmp ax, bx
[2459]    44FE: 75 03 E9 05 01                        je pc_double_GE
[2460]        :                                       
[2461]    4503: BB 0F 00                              mov bx, 15
[2462]    4506: 3B C3                                 cmp ax, bx
[2463]    4508: 75 03 E9 FB 00                        je pc_double_GE
[2464]        :                                       
[2465]    450D: BB 14 00                              mov bx, 20
[2466]    4510: 3B C3                                 cmp ax, bx
[2467]    4512: 75 03 E9 F1 00                        je pc_double_GE
[2468]        :                                       
[2469]    4517: BB 19 00                              mov bx, 25
[2470]    451A: 3B C3                                 cmp ax, bx
[2471]    451C: 75 03 E9 E7 00                        je pc_double_GE
[2472]        :                                       
[2473]    4521: BB 1E 00                              mov bx, 30
[2474]    4524: 3B C3                                 cmp ax, bx
[2475]    4526: 75 03 E9 DD 00                        je pc_double_GE
[2476]        :                                       
[2477]    452B: BB 23 00                              mov bx, 35
[2478]    452E: 3B C3                                 cmp ax, bx
[2479]    4530: 75 03 E9 D3 00                        je pc_double_GE
[2480]        :                                       
[2481]    4535: BB 32 00                              mov bx, 50
[2482]    4538: 3B C3                                 cmp ax, bx
[2483]    453A: 75 03 E9 C9 00                        je pc_double_GE
[2484]        :                                       
[2485]    453F: BB 4B 00                              mov bx, 75
[2486]    4542: 3B C3                                 cmp ax, bx
[2487]    4544: 75 03 E9 BF 00                        je pc_double_GE
[2488]        :                                       
[2489]    4549: BB 64 00                              mov bx, 100
[2490]    454C: 3B C3                                 cmp ax, bx
[2491]    454E: 75 03 E9 0E 01                        je pc_triple_GE
[2492]        :                                       
[2493]    4553: BB 96 00                              mov bx, 150
[2494]    4556: 3B C3                                 cmp ax, bx
[2495]    4558: 75 03 E9 04 01                        je pc_triple_GE
[2496]        :                                       
[2497]    455D: BB C8 00                              mov bx, 200
[2498]    4560: 3B C3                                 cmp ax, bx
[2499]    4562: 75 03 E9 FA 00                        je pc_triple_GE
[2500]        :                                       
[2501]    4567: BB FA 00                              mov bx, 250
[2502]    456A: 3B C3                                 cmp ax, bx
[2503]    456C: 75 03 E9 F0 00                        je pc_triple_GE
[2504]        :                                       
[2505]    4571: BB 2C 01                              mov bx, 300
[2506]    4574: 3B C3                                 cmp ax, bx
[2507]    4576: 75 03 E9 E6 00                        je pc_triple_GE
[2508]        :                                       
[2509]    457B: BB 5E 01                              mov bx, 350
[2510]    457E: 3B C3                                 cmp ax, bx
[2511]    4580: 75 03 E9 DC 00                        je pc_triple_GE
[2512]        :                                       
[2513]    4585: BB 90 01                              mov bx, 400
[2514]    4588: 3B C3                                 cmp ax, bx
[2515]    458A: 75 03 E9 D2 00                        je pc_triple_GE
[2516]        :                                       
[2517]    458F: BB C2 01                              mov bx, 450
[2518]    4592: 3B C3                                 cmp ax, bx
[2519]    4594: 75 03 E9 C8 00                        je pc_triple_GE
[2520]        :                                       
[2521]    4599: BB F4 01                              mov bx, 500
[2522]    459C: 3B C3                                 cmp ax, bx
[2523]    459E: 75 03 E9 BE 00                        je pc_triple_GE
[2524]        :                                       
[2525]    45A3: BB E8 03                              mov bx, 1000
[2526]    45A6: 3B C3                                 cmp ax, bx
[2527]    45A8: 75 03 E9 E4 00                        je pc_quad_GE
[2528]        :                                       
[2529]        :                                       
[2530]    45AD:                                       pc_single_GE:
[2531]    45AD: 80 06 03 01 02                        add x, 2
[2532]    45B2: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "-"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD D4 45 CD 10 61 EB 02 2D 00 
                                                    
[2533]    45D6: 8B C3                                 mov ax, bx
[2534]    45D8: E8 F3 02                              call print_num
[2535]    45DB: 80 06 03 01 02                        add x, 2
[2536]    45E0: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color,"--"
                1E 19 01 B9 02 00 8A 16 03 01 8A 36 
                04 01 BD 02 46 CD 10 61 EB 03 2D 2D 
                00                                  
[2537]    4605: E9 B9 00                              jmp skip_pc_all_GE
[2538]        :                                       
[2539]    4608:                                       pc_double_GE:
[2540]    4608: 80 06 03 01 02                        add x, 2
[2541]    460D: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "-"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD 2F 46 CD 10 61 EB 02 2D 00 
                                                    
[2542]    4631: 8B C3                                 mov ax, bx
[2543]    4633: E8 98 02                              call print_num
[2544]    4636: 80 06 03 01 03                        add x, 3
[2545]    463B: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color,"-"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD 5D 46 CD 10 61 EB 02 2D 00 
                                                    
[2546]    465F: EB 60                                 jmp skip_pc_all_GE
[2547]        :                                       
[2548]    4661:                                       pc_triple_GE:
[2549]    4661: 80 06 03 01 02                        add x, 2
[2550]    4666: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "-"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD 88 46 CD 10 61 EB 02 2D 00 
                                                    
[2551]    468A: 8B C3                                 mov ax, bx
[2552]    468C: E8 3F 02                              call print_num
[2553]    468F: EB 30                                 jmp skip_pc_all_GE
[2554]        :                                       
[2555]    4691:                                       pc_quad_GE:
[2556]    4691: 80 06 03 01 01                        add x, 1
[2557]    4696: 60 8C CA 8E C2 B4 13 B0 01 B7 00 8A   print x,y,case_color, "#"
                1E 19 01 B9 01 00 8A 16 03 01 8A 36 
                04 01 BD B8 46 CD 10 61 EB 02 23 00 
                                                    
[2558]    46BA: 8B C3                                 mov ax, bx
[2559]    46BC: E8 0F 02                              call print_num
[2560]    46BF: EB 00                                 jmp skip_pc_all_GE
[2561]        :                                       
[2562]    46C1:                                       skip_pc_all_GE:
[2563]        :                                       
[2564]        :                                       
[2565]    46C1: 8B 84 25 01                           mov ax, cn[si]
[2566]    46C5: A3 05 01                              mov temp, ax
[2567]        :                                       
[2568]    46C8: C7 84 CB 01 00 00                     mov tn[si], 0  ; Set to zero to disable the already chosen.
[2569]    46CE: C7 84 25 01 00 00                     mov cn[si], 0
[2570]        :                                       
[2571]    46D4: 51                                    push cx
[2572]    46D5: C6 06 22 01 00                        mov sc, 0
[2573]    46DA: BE 00 00                              mov si, 0
[2574]    46DD: B9 14 00                              mov cx,20
[2575]        :                                       
[2576]    46E0:                                       CHECK_INPUT_MONEY_LP_GE:  ;internal loop
[2577]    46E0: 80 06 22 01 01                        add sc, 1
[2578]    46E5: 8B 84 79 01                           mov ax, ml[si]
[2579]    46E9: 8B 1E 05 01                           mov bx, temp
[2580]    46ED: 3B C3                                 cmp ax, bx
[2581]    46EF: 74 05                                 je EXIT_CIM_LOOP_LP_GE ;exit the loop if input is valid
[2582]        :                                       
[2583]    46F1: 83 C6 02                              add si, 2
[2584]        :                                       
[2585]    46F4: E2 EA                                 loop CHECK_INPUT_MONEY_LP_GE
[2586]        :                                       
[2587]    46F6:                                       EXIT_CIM_LOOP_LP_GE:
[2588]    46F6: 59                                    pop cx
[2589]        :                                       
[2590]    46F7: 8A 26 22 01                           mov ah,sc
[2591]    46FB: B7 0A                                 mov bh,10
[2592]    46FD: 3A E7                                 cmp ah, bh
[2593]    46FF: 7F 53                                 jg RIGHT_COL_LP_GE
[2594]        :                                       
[2595]    4701: 80 06 22 01 0D                        add sc, 13
[2596]    4706: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 2,sc, 0100_1010b,"       "
                4A B9 07 00 B2 02 8A 36 22 01 BD 24 
                47 CD 10 61 EB 08 20 20 20 20 20 20 
                20 00                               
[2597]    472C: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 4,sc,0100_1010b," "
                4A B9 01 00 B2 04 8A 36 22 01 BD 4A 
                47 CD 10 61 EB 02 20 00             
[2598]    474C: A1 05 01                              mov ax, temp
[2599]    474F: E8 7C 01                              call print_num
[2600]        :                                       
[2601]    4752: EB 51                                 JMP PASS_RIGHT_COL_LP_GE
[2602]        :                                       
[2603]    4754:                                       RIGHT_COL_LP_GE:
[2604]    4754: 80 06 22 01 03                        add sc, 3
[2605]    4759: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 11,sc, 0100_1010b,"       "
                4A B9 07 00 B2 0B 8A 36 22 01 BD 77 
                47 CD 10 61 EB 08 20 20 20 20 20 20 
                20 00                               
[2606]    477F: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 12,sc,0100_1010b," "
                4A B9 01 00 B2 0C 8A 36 22 01 BD 9D 
                47 CD 10 61 EB 02 20 00             
[2607]    479F: A1 05 01                              mov ax, temp
[2608]    47A2: E8 29 01                              call print_num
[2609]        :                                       
[2610]    47A5:                                       PASS_RIGHT_COL_LP_GE:
[2611]        :                                       
[2612]    47A5: B0 4A                                 mov al, 0100_1010b
[2613]    47A7: A2 19 01                              mov case_color, al
[2614]    47AA: C7 84 79 01 00 00                     mov ml[si], 0
[2615]    47B0: C7 06 11 01 00 00                     mov mc, 0
[2616]    47B6: C7 06 17 01 00 00                     mov mc_temp, 0
[2617]    47BC: C6 06 22 01 00                        mov sc, 0
[2618]    47C1: BE 00 00                              mov si, 0
[2619]        :                                       
[2620]    47C4: 8B C1                                 mov ax, cx
[2621]    47C6: BB 00 00                              mov bx, 0
[2622]    47C9: 3B C3                                 cmp ax, bx
[2623]    47CB: 74 06                                 je EXIT_GAME_EXIT_LOOP
[2624]        :                                       
[2625]    47CD: 49 E3 03 E9 44 FB                     loop GAME_EXIT_LOOP
[2626]        :                                       
[2627]    47D3:                                       EXIT_GAME_EXIT_LOOP:
[2628]    47D3: 60 8C CA 8E C2 B4 13 B0 01 B7 00 B3   print 0,35,0000_0111b,  "Press any key to exit..."
                07 B9 18 00 B2 00 B6 23 BD EF 47 CD 
                10 61 EB 19 50 72 65 73 73 20 61 6E 
                79 20 6B 65 79 20 74 6F 20 65 78 69 
                74 2E 2E 2E 00                      
[2629]        :                                       
[2630]    4808: B4 01                                 mov ah, 1
[2631]    480A: CD 21                                 int 21h
[2632]        :                                       
[2633]        :                                       ;add all the money / number_of_case
[2634]        :                                       ; jump again to loop if 1000
[2635]        :                                       ; double the cn arrange it
[2636]        :                                       
[2637]    480C: C3                                    ret
[2638]        :                                       
[2639]        :                                       ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[2640]        :                                       ;;; these functions are COPIED FROM EMU8086.INC ;;;
[2641]        :                                       ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[2642]        :                                       ;FOR USER INPUT READER PROCESSES
[2643]        :                                       
[2644]        :                                       ; gets the multi-digit SIGNED number from the keyboard,
[2645]        :                                       ; and stores the result in CX register:
[2646]    480D:                                       SCAN_NUM        PROC    NEAR
[2647]    480D: 52                                    PUSH    DX
[2648]    480E: 50                                    PUSH    AX
[2649]    480F: 56                                    PUSH    SI
[2650]        :                                       
[2651]    4810: B9 00 00                              MOV     CX, 0
[2652]        :                                       
[2653]        :                                       ; reset flag:
[2654]    4813: 2E C6 06 CD 48 00                     MOV     CS:make_minus, 0
[2655]        :                                       
[2656]    4819:                                       next_digit:
[2657]        :                                       
[2658]        :                                       ; get char from keyboard
[2659]        :                                       ; into AL:
[2660]    4819: B4 00                                 MOV     AH, 00h
[2661]    481B: CD 16                                 INT     16h
[2662]        :                                       ; and print it:
[2663]    481D: B4 0E                                 MOV     AH, 0Eh
[2664]    481F: CD 10                                 INT     10h
[2665]        :                                       
[2666]        :                                       ; check for MINUS:
[2667]    4821: 3C 2D                                 CMP     AL, '-'
[2668]    4823: 74 69                                 JE      set_minus
[2669]        :                                       
[2670]        :                                       ; check for ENTER key:
[2671]    4825: 3C 0D                                 CMP     AL, 0Dh  ; carriage return?
[2672]    4827: 75 03                                 JNE     not_cr
[2673]    4829: E9 93 00                              JMP     stop_input
[2674]    482C:                                       not_cr:
[2675]        :                                       
[2676]        :                                       
[2677]    482C: 3C 08                                 CMP     AL, 8                   ; 'BACKSPACE' pressed?
[2678]    482E: 75 1E                                 JNE     backspace_checked
[2679]    4830: BA 00 00                              MOV     DX, 0                   ; remove last digit by
[2680]    4833: 8B C1                                 MOV     AX, CX                  ; division:
[2681]    4835: 2E F7 36 42 49                        DIV     CS: tenproc                 ; AX = DX:AX / 10 (DX-rem).
[2682]    483A: 8B C8                                 MOV     CX, AX
[2683]    483C: 50 B0 20 B4 0E CD 10 58               PUTC    ' '                     ; clear position.
[2684]    4844: 50 B0 08 B4 0E CD 10 58               PUTC    8                       ; backspace again.
[2685]    484C: EB CB                                 JMP     next_digit
[2686]    484E:                                       backspace_checked:
[2687]        :                                       
[2688]        :                                       
[2689]        :                                       ; allow only digits:
[2690]    484E: 3C 30                                 CMP     AL, '0'
[2691]    4850: 73 02                                 JAE     ok_AE_0
[2692]    4852: EB 04                                 JMP     remove_not_digit
[2693]    4854:                                       ok_AE_0:
[2694]    4854: 3C 39                                 CMP     AL, '9'
[2695]    4856: 76 1A                                 JBE     ok_digit
[2696]    4858:                                       remove_not_digit:
[2697]    4858: 50 B0 08 B4 0E CD 10 58               PUTC    8       ; backspace.
[2698]    4860: 50 B0 20 B4 0E CD 10 58               PUTC    ' '     ; clear last entered not digit.
[2699]    4868: 50 B0 08 B4 0E CD 10 58               PUTC    8       ; backspace again.
[2700]    4870: EB A7                                 JMP     next_digit ; wait for next input.
[2701]    4872:                                       ok_digit:
[2702]        :                                       
[2703]        :                                       
[2704]        :                                       ; multiply CX by 10 (first time the result is zero)
[2705]    4872: 50                                    PUSH    AX
[2706]    4873: 8B C1                                 MOV     AX, CX
[2707]    4875: 2E F7 26 42 49                        MUL     CS:tenproc              ; DX:AX = AX*10
[2708]    487A: 8B C8                                 MOV     CX, AX
[2709]    487C: 58                                    POP     AX
[2710]        :                                       
[2711]        :                                       ; check if the number is too big
[2712]        :                                       ; (result should be 16 bits)
[2713]    487D: 83 FA 00                              CMP     DX, 0
[2714]    4880: 75 19                                 JNE     too_big
[2715]        :                                       
[2716]        :                                       ; convert from ASCII code:
[2717]    4882: 2C 30                                 SUB     AL, 30h
[2718]        :                                       
[2719]        :                                       ; add AL to CX:
[2720]    4884: B4 00                                 MOV     AH, 0
[2721]    4886: 8B D1                                 MOV     DX, CX      ; backup, in case the result will be too big.
[2722]    4888: 03 C8                                 ADD     CX, AX
[2723]    488A: 72 0A                                 JC      too_big2    ; jump if the number is too big.
[2724]        :                                       
[2725]    488C: EB 8B                                 JMP     next_digit
[2726]        :                                       
[2727]    488E:                                       set_minus:
[2728]    488E: 2E C6 06 CD 48 01                     MOV     CS:make_minus, 1
[2729]    4894: EB 83                                 JMP     next_digit
[2730]        :                                       
[2731]    4896:                                       too_big2:
[2732]    4896: 8B CA                                 MOV     CX, DX      ; restore the backuped value before add.
[2733]    4898: BA 00 00                              MOV     DX, 0       ; DX was zero before backup!
[2734]    489B:                                       too_big:
[2735]    489B: 8B C1                                 MOV     AX, CX
[2736]    489D: 2E F7 36 42 49                        DIV     CS:tenproc  ; reverse last DX:AX = AX*10, make AX = DX:AX / 10
[2737]    48A2: 8B C8                                 MOV     CX, AX
[2738]    48A4: 50 B0 08 B4 0E CD 10 58               PUTC    8       ; backspace.
[2739]    48AC: 50 B0 20 B4 0E CD 10 58               PUTC    ' '     ; clear last entered digit.
[2740]    48B4: 50 B0 08 B4 0E CD 10 58               PUTC    8       ; backspace again.
[2741]    48BC: E9 5A FF                              JMP     next_digit ; wait for Enter/Backspace.
[2742]        :                                       
[2743]        :                                       
[2744]    48BF:                                       stop_input:
[2745]        :                                       ; check flag:
[2746]    48BF: 2E 80 3E CD 48 00                     CMP     CS:make_minus, 0
[2747]    48C5: 74 02                                 JE      not_minus
[2748]    48C7: F7 D9                                 NEG     CX
[2749]    48C9:                                       not_minus:
[2750]        :                                       
[2751]    48C9: 5E                                    POP     SI
[2752]    48CA: 58                                    POP     AX
[2753]    48CB: 5A                                    POP     DX
[2754]    48CC: C3                                    RET
[2755]    48CD: 00                                    make_minus      DB      ?       ; used as a flag.
[2756]        :                                       SCAN_NUM        ENDP
[2757]        :                                       
[2758]        :                                       
[2759]        :                                       
[2760]        :                                       
[2761]        :                                       
[2762]        :                                       ; this procedure prints number in AX,
[2763]        :                                       ; used with PRINT_NUM_UNS to print signed numbers:
[2764]    48CE:                                       PRINT_NUM       PROC    NEAR
[2765]    48CE: 52                                    PUSH    DX
[2766]    48CF: 50                                    PUSH    AX
[2767]        :                                       
[2768]    48D0: 3D 00 00                              CMP     AX, 0
[2769]    48D3: 75 0A                                 JNZ     not_zero
[2770]        :                                       
[2771]    48D5: 50 B0 30 B4 0E CD 10 58               PUTC    '0'
[2772]    48DD: EB 12                                 JMP     printed
[2773]        :                                       
[2774]    48DF:                                       not_zero:
[2775]        :                                       ; the check SIGN of AX,
[2776]        :                                       ; make absolute if it's negative:
[2777]    48DF: 3D 00 00                              CMP     AX, 0
[2778]    48E2: 79 0A                                 JNS     positive
[2779]    48E4: F7 D8                                 NEG     AX
[2780]        :                                       
[2781]    48E6: 50 B0 2D B4 0E CD 10 58               PUTC    '-'
[2782]        :                                       
[2783]    48EE:                                       positive:
[2784]    48EE: E8 03 00                              CALL    PRINT_NUM_UNS
[2785]    48F1:                                       printed:
[2786]    48F1: 58                                    POP     AX
[2787]    48F2: 5A                                    POP     DX
[2788]    48F3: C3                                    RET
[2789]        :                                       PRINT_NUM       ENDP
[2790]        :                                       \
[2791]        :                                       ; this procedure prints out an unsigned
[2792]        :                                       ; number in AX (not just a single digit)
[2793]        :                                       ; allowed values are from 0 to 65535 (FFFF)
[2794]    48F4:                                       PRINT_NUM_UNS   PROC    NEAR
[2795]    48F4: 50                                    PUSH    AX
[2796]    48F5: 53                                    PUSH    BX
[2797]    48F6: 51                                    PUSH    CX
[2798]    48F7: 52                                    PUSH    DX
[2799]        :                                       
[2800]        :                                       ; flag to prevent printing zeros before number:
[2801]    48F8: B9 01 00                              MOV     CX, 1
[2802]        :                                       
[2803]        :                                       ; (result of "/ 10000" is always less or equal to 9).
[2804]    48FB: BB 10 27                              MOV     BX, 10000       ; 2710h - divider.
[2805]        :                                       
[2806]        :                                       ; AX is zero?
[2807]    48FE: 3D 00 00                              CMP     AX, 0
[2808]    4901: 74 32                                 JZ      print_zero
[2809]        :                                       
[2810]    4903:                                       begin_print:
[2811]        :                                       
[2812]        :                                       ; check divider (if zero go to end_print):
[2813]    4903: 83 FB 00                              CMP     BX,0
[2814]    4906: 74 35                                 JZ      end_print
[2815]        :                                       
[2816]        :                                       ; avoid printing zeros before number:
[2817]    4908: 83 F9 00                              CMP     CX, 0
[2818]    490B: 74 04                                 JE      calc
[2819]        :                                       ; if AX<BX then result of DIV will be zero:
[2820]    490D: 3B C3                                 CMP     AX, BX
[2821]    490F: 72 14                                 JB      skip
[2822]    4911:                                       calc:
[2823]    4911: B9 00 00                              MOV     CX, 0   ; set flag.
[2824]        :                                       
[2825]    4914: BA 00 00                              MOV     DX, 0
[2826]    4917: F7 F3                                 DIV     BX      ; AX = DX:AX / BX   (DX=remainder).
[2827]        :                                       
[2828]        :                                       ; print last digit
[2829]        :                                       ; AH is always ZERO, so it's ignored
[2830]    4919: 04 30                                 ADD     AL, 30h    ; convert to ASCII code.
[2831]    491B: 50 8A C0 B4 0E CD 10 58               PUTC    AL
[2832]        :                                       
[2833]        :                                       
[2834]    4923: 8B C2                                 MOV     AX, DX  ; get remainder from last div.
[2835]        :                                       
[2836]    4925:                                       skip:
[2837]        :                                       ; calculate BX=BX/10
[2838]    4925: 50                                    PUSH    AX
[2839]    4926: BA 00 00                              MOV     DX, 0
[2840]    4929: 8B C3                                 MOV     AX, BX
[2841]    492B: 2E F7 36 42 49                        DIV     CS:tenproc  ; AX = DX:AX / 10   (DX=remainder).
[2842]    4930: 8B D8                                 MOV     BX, AX
[2843]    4932: 58                                    POP     AX
[2844]        :                                       
[2845]    4933: EB CE                                 JMP     begin_print
[2846]        :                                       
[2847]    4935:                                       print_zero:
[2848]    4935: 50 B0 30 B4 0E CD 10 58               PUTC    '0'
[2849]        :                                       
[2850]    493D:                                       end_print:
[2851]        :                                       
[2852]    493D: 5A                                    POP     DX
[2853]    493E: 59                                    POP     CX
[2854]    493F: 5B                                    POP     BX
[2855]    4940: 58                                    POP     AX
[2856]    4941: C3                                    RET
[2857]        :                                       PRINT_NUM_UNS   ENDP
[2858]        :                                       
[2859]        :                                       
[2860]        :                                       
[2861]    4942: 0A 00                                 tenproc             DW      10      ; used as multiplier/divider by SCAN_NUM & PRINT_NUM_UNS.
[2862]    4944:                                       GET_STRING      PROC    NEAR
[2863]    4944: 50                                    PUSH    AX
[2864]    4945: 51                                    PUSH    CX
[2865]    4946: 57                                    PUSH    DI
[2866]    4947: 52                                    PUSH    DX
[2867]        :                                       
[2868]    4948: B9 00 00                              MOV     CX, 0                   ; char counter.
[2869]        :                                       
[2870]    494B: 83 FA 01                              CMP     DX, 1                   ; buffer too small?
[2871]    494E: 76 3C                                 JBE     empty_buffer            ;
[2872]        :                                       
[2873]    4950: 4A                                    DEC     DX                      ; reserve space for last zero.
[2874]        :                                       
[2875]        :                                       
[2876]        :                                       ;============================
[2877]        :                                       ; Eternal loop to get
[2878]        :                                       ; and processes key presses:
[2879]        :                                       
[2880]    4951:                                       wait_for_key:
[2881]        :                                       
[2882]    4951: B4 00                                 MOV     AH, 0                   ; get pressed key.
[2883]    4953: CD 16                                 INT     16h
[2884]        :                                       
[2885]    4955: 3C 0D                                 CMP     AL, 0Dh                  ; 'RETURN' pressed?
[2886]    4957: 74 30                                 JZ      exit_GET_STRING
[2887]        :                                       
[2888]        :                                       
[2889]    4959: 3C 08                                 CMP     AL, 8                   ; 'BACKSPACE' pressed?
[2890]    495B: 75 1E                                 JNE     add_to_buffer
[2891]    495D: E3 F2                                 JCXZ    wait_for_key            ; nothing to remove!
[2892]    495F: 49                                    DEC     CX
[2893]    4960: 4F                                    DEC     DI
[2894]    4961: 50 B0 08 B4 0E CD 10 58               PUTC    8                       ; backspace.
[2895]    4969: 50 B0 20 B4 0E CD 10 58               PUTC    ' '                     ; clear position.
[2896]    4971: 50 B0 08 B4 0E CD 10 58               PUTC    8                       ; backspace again.
[2897]    4979: EB D6                                 JMP     wait_for_key
[2898]        :                                       
[2899]    497B:                                       add_to_buffer:
[2900]        :                                       
[2901]    497B: 3B CA                                 CMP     CX, DX          ; buffer is full?
[2902]    497D: 73 D2                                 JAE     wait_for_key    ; if so wait for 'BACKSPACE' or 'RETURN'...
[2903]        :                                       
[2904]    497F: 88 05                                 MOV     [DI], AL
[2905]    4981: 47                                    INC     DI
[2906]    4982: 41                                    INC     CX
[2907]        :                                       
[2908]        :                                       ; print the key:
[2909]    4983: B4 0E                                 MOV     AH, 0Eh
[2910]    4985: CD 10                                 INT     10h
[2911]        :                                       
[2912]    4987: EB C8                                 JMP     wait_for_key
[2913]        :                                       ;============================
[2914]        :                                       
[2915]    4989:                                       exit_GET_STRING:
[2916]        :                                       
[2917]        :                                       ; terminate by null:
[2918]    4989: C6 05 00                              MOV     [DI], 0
[2919]        :                                       
[2920]    498C:                                       empty_buffer:
[2921]        :                                       
[2922]    498C: 5A                                    POP     DX
[2923]    498D: 5F                                    POP     DI
[2924]    498E: 59                                    POP     CX
[2925]    498F: 58                                    POP     AX
[2926]    4990: C3                                    RET
[2927]        :                                       GET_STRING      ENDP
[2928]        :                                       ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[2929]        :                                       ;;; these functions are copied from emu8086.inc END;;;
[2930]        :                                       ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[2931]        :                                       
[2932]        :                                       END
[2933]        :                                       
[2934]        :                                       
[2935]        :                                       
[2936]        :                                       
 
===================================================================================================
 




===================================================================================================
